{"version":3,"sources":["Demo1.js"],"names":[],"mappings":";;AAAA;;;AAGA;;;;AAIA,SAAS,UAAT,CAAoB,WAApB,EAAiC;AAC7B,UAAQ,GAAR,CAAY,YAAY,KAAxB;AACH;AACD,IAAI,QAAQ,EAAE,MAAM,EAAR,EAAY,OAAO,gBAAnB,EAAZ;AACA,WAAW,KAAX;AACA,SAAS,WAAT,CAAqB,WAArB,EAAkC;AAC9B,UAAQ,GAAR,CAAY,YAAY,KAAxB;AACH;AACD,IAAI,SAAS,EAAE,MAAM,EAAR,EAAY,OAAO,kBAAnB,EAAb;AACA,YAAY,MAAZ;AACA","file":"Demo1-compiled.js","sourcesContent":["/**\r\n * Created by Administrator on 2017/2/5.\r\n */\r\n/**\r\n *TypScript的核心原则之一是对值所具有的Shape进行类型检查。它有时被称作“鸭式辩型法”或“结构性子类型化”\r\n * 在TypeScript里，接口的作用就是为这些类型命名和为你的代码或第三方代码定义契约。\r\n */\r\nfunction printLabel(labelledObj) {\r\n    console.log(labelledObj.label);\r\n}\r\nvar myObj = { size: 10, label: \"size 10 Object\" };\r\nprintLabel(myObj);\r\nfunction printLabel2(labelledObj) {\r\n    console.log(labelledObj.label);\r\n}\r\nvar myObj2 = { size: 10, label: \"Size 10 object 2\" };\r\nprintLabel2(myObj2);\r\n//# sourceMappingURL=Demo1.js.map"]}