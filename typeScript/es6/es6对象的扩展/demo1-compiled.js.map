{"version":3,"sources":["demo1.js"],"names":[],"mappings":"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","file":"demo1-compiled.js","sourcesContent":["/**\r\n * Created by Administrator on 2017/2/21.\r\n */\r\nvar foo='bar';\r\nvar baz={foo};\r\n\r\n\r\nfunction a(x,y){\r\n    return {x,y};\r\n}\r\n\r\nvar o={\r\n    method(){\r\n        return \"Hello\";\r\n    }\r\n};\r\n\r\n\r\nvar birth='2000/01/01';\r\nvar Person={\r\n    name:'张三',\r\n    birth,\r\n    hello(){\r\n        console.log('我是名字是',this.name);\r\n    }\r\n};\r\n\r\n\r\n//commonjs模块输出变量，就非常适合使用简洁写法\r\nvar ms={};\r\nfunction getItem(key){\r\n    return key in ms?ms[key]:null;\r\n}\r\n\r\nfunction setItem(key,value){\r\n    ms[key]=value;\r\n}\r\n\r\nfunction clear(){\r\n    ms={};\r\n}\r\n\r\n/*module.exports={\r\n    getItem,setItem,clear\r\n};*/\r\n\r\n//属性的赋值器(setter)和取值器(getter),事实上也是采用这种写法\r\n\r\nvar cart={\r\n    _wheels:4,\r\n    get wheels(){\r\n        return this._wheels;\r\n    },\r\n    set wheels(value){\r\n        if(value<this._wheels){\r\n            throw new Error('数值太小了');\r\n        }\r\n        this._wheels=value;\r\n    }\r\n};\r\n\r\ncart.wheels=6;\r\nconsole.log(cart.wheels);\r\n\r\nfunction* gen(x){\r\n  var result=yield x+2;\r\n    return result;\r\n}\r\n\r\nvar g=gen();\r\nconsole.log(g.next(3));\r\nconsole.log(g.next(4));\r\n\r\n\r\nfunction* gen2(x){\r\n    try{\r\n        var result=yield x+2;\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n    return y;\r\n}\r\nvar g2=gen2(2);\r\nconsole.log(g.next());\r\n//使用指针对象的throw方法抛出的错误，可以被函数体内的try...catch代码块捕获。\r\n//这意味着，出错的代码与处理错误的代码，实现了时间和空间上的分离，这对于异步编程无疑是很重要的\r\n//g.throw('出错了')\r\n//console.log(g.throw('出错了'));\r\n\r\n\r\nvar obj={\r\n    * m(){\r\n        yield 'hello world';\r\n    }\r\n};\r\nlet obj1={};\r\nobj1.foo=123;\r\nobj1['a'+'bc']=123;\r\n\r\n\r\nlet prokey='key';\r\nlet obj3={\r\n    [prokey]:true,\r\n    ['a'+'bc']:123\r\n};\r\n\r\nconsole.log(obj3[prokey]);\r\nconsole.log(obj3['a'+'bc']);\r\n\r\nvar lastWord='last world';\r\n\r\nvar e1={\r\n    'first word':'Hello',\r\n    [lastWord]:'world'\r\n};\r\nconsole.log(e1['first word']);\r\nconsole.log(e1[lastWord]);\r\nconsole.log(e1['last world']);\r\nconsole.log(e1);\r\n\r\nfunction Pasta(grain, width, shape) {\r\n    // Define properties.\r\n    this.grain = grain;\r\n    this.width = width;\r\n    this.shape = shape;\r\n    this.toString = function () {\r\n        return (this.grain + \", \" + this.width + \", \" + this.shape);\r\n    }\r\n}\r\n\r\n// Create an object.\r\nvar spaghetti = new Pasta(\"wheat\", 0.2, \"circle\");\r\n\r\n// Get the own property names.\r\nvar arr = Object.getOwnPropertyNames(spaghetti);\r\ndocument.write (arr);\r\n\r\nlet proto={};\r\n\r\nlet object1={x:10};\r\nObject.setPrototypeOf(object1,proto);\r\n\r\nproto.y=20;\r\nproto.z=40;\r\nconsole.log(object1);\r\nconsole.log(object1.x,object1.y,object1.z);\r\n\r\nfunction Rectangle(){\r\n\r\n}\r\n\r\nvar rec=new Rectangle();\r\nlet a2=Object.getPrototypeOf(rec)===Rectangle.prototype;\r\nconsole.log(a2);\r\n\r\nlet {keys,values,entries}=Object;\r\nlet obj2={a:1,b:2,c:3};\r\n for(let key of keys(obj2)){\r\n     console.log(key,'key');\r\n }\r\n\r\nfor(let val of values(obj2)){\r\n    console.log(val,'key');\r\n}\r\n\r\nfor(let [key,value] of entries(obj2)){\r\n    console.log([key,value]);\r\n}\r\n\r\n\r\n"]}