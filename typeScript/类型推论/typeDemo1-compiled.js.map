{"version":3,"sources":["typeDemo1.js"],"names":[],"mappings":";;AAAA;;;AAGA;;;AAGA;AACA,IAAI,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,IAAP,CAAR;AACA;;;;;AAKA,IAAI,IAAI,EAAE,GAAG,CAAL,EAAR;AACA,IAAI,IAAI,CAAR;AACA,EAAE,CAAF,GAAM,EAAE,GAAG,CAAL,EAAN;AACA,QAAQ,GAAR,CAAY,EAAE,CAAd,EAAiB,EAAE,CAAnB;AACA","file":"typeDemo1-compiled.js","sourcesContent":["/**\r\n * Created by Administrator on 2017/2/7.\r\n */\r\n/**\r\n *TypeScript里，在有些没有明确指出类型的地方，类型推论会帮助提供类型\r\n */\r\n//最佳通用类型\r\nvar x = [0, 1, null];\r\n/**\r\n *为了推断x的类型，我们必须考虑所有元素的类型。\r\n *这里有两种选择： number和null。\r\n *计算通用类型算法会考虑所有的候选类型，并给出一个兼容所有候选类型的类型。\r\n */\r\nvar a = { n: 1 };\r\nvar b = a;\r\na.x = { n: 2 };\r\nconsole.log(a.x, b.x);\r\n//# sourceMappingURL=typeDemo1.js.map"]}