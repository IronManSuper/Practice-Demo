{"version":3,"sources":["Test.js"],"names":[],"mappings":"AAAA;;;AAGA;;AACA,IAAI,qBAAqB,QAAQ,oBAAR,CAAzB;AACA,IAAI,yBAAyB,QAAQ,wBAAR,CAA7B;AACA,IAAI,UAAU,CAAC,OAAD,EAAU,OAAV,EAAmB,KAAnB,CAAd;AACA,IAAI,aAAa,EAAjB;AACA,WAAW,UAAX,IAAyB,IAAI,mBAAmB,gBAAvB,EAAzB;AACA,WAAW,cAAX,IAA6B,IAAI,uBAAuB,oBAA3B,EAA7B;AACA,QAAQ,OAAR,CAAgB,UAAU,CAAV,EAAa;AACzB,SAAK,IAAI,MAAT,IAAmB,UAAnB,EAA+B;AAC3B,gBAAQ,GAAR,CAAY,OAAO,CAAP,GAAW,KAAX,IAAoB,WAAW,MAAX,EAAmB,YAAnB,CAAgC,CAAhC,IAAqC,SAArC,GAAiD,gBAArE,IAAyF,GAAzF,GAA+F,MAA3G;AACH;AACJ,CAJD","file":"Test-compiled.js","sourcesContent":["/**\r\n * Created by Administrator on 2017/2/9.\r\n */\r\n\"use strict\";\r\nvar ZipCodeValidator_1 = require(\"./ZipCodeValidator\");\r\nvar LettersOnlyValidator_1 = require(\"./LettersOnlyValidator\");\r\nvar strings = [\"Hello\", \"98052\", \"101\"];\r\nvar validators = {};\r\nvalidators[\"ZIP code\"] = new ZipCodeValidator_1.ZipCodeValidator();\r\nvalidators[\"Letters only\"] = new LettersOnlyValidator_1.LettersOnlyValidator();\r\nstrings.forEach(function (s) {\r\n    for (var name_1 in validators) {\r\n        console.log(\"\\\"\" + s + \"\\\"-\" + (validators[name_1].isAcceptable(s) ? \"matches\" : \"does not match\") + \" \" + name_1);\r\n    }\r\n});\r\n"]}