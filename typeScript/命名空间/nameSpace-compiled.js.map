{"version":3,"sources":["nameSpace.js"],"names":[],"mappings":";;AAAA;;;AAGA;AACA,IAAI,UAAJ;AACA,CAAC,UAAU,UAAV,EAAsB;AACnB,QAAI,gBAAgB,aAApB;AACA,QAAI,eAAe,UAAnB;AACA,QAAI,uBAAwB,YAAY;AACpC,iBAAS,oBAAT,GAAgC,CAC/B;AACD,6BAAqB,SAArB,CAA+B,YAA/B,GAA8C,UAAU,CAAV,EAAa;AACvD,mBAAO,cAAc,IAAd,CAAmB,CAAnB,CAAP;AACH,SAFD;AAGA,eAAO,oBAAP;AACH,KAP2B,EAA5B;AAQA,eAAW,oBAAX,GAAkC,oBAAlC;AACA,QAAI,mBAAoB,YAAY;AAChC,iBAAS,gBAAT,GAA4B,CAC3B;AACD,yBAAiB,SAAjB,CAA2B,YAA3B,GAA0C,UAAU,CAAV,EAAa;AACnD,mBAAO,EAAE,MAAF,KAAa,CAAb,IAAkB,aAAa,IAAb,CAAkB,CAAlB,CAAzB;AACH,SAFD;AAGA,eAAO,gBAAP;AACH,KAPuB,EAAxB;AAQA,eAAW,gBAAX,GAA8B,gBAA9B;AACA,QAAI,UAAU,CAAC,OAAD,EAAU,OAAV,EAAmB,KAAnB,CAAd;AACA,QAAI,aAAa,EAAjB;AACA,eAAW,UAAX,IAAyB,IAAI,WAAW,gBAAf,EAAzB;AACA,eAAW,cAAX,IAA6B,IAAI,WAAW,oBAAf,EAA7B;AACA,YAAQ,OAAR,CAAgB,UAAU,CAAV,EAAa;AACzB,aAAK,IAAI,MAAT,IAAmB,UAAnB,EAA+B;AAC3B,oBAAQ,GAAR,CAAY,KAAK,CAAL,GAAS,GAAT,IAAgB,WAAW,MAAX,EAAmB,YAAnB,CAAgC,CAAhC,IAAqC,WAArC,GAAmD,kBAAnE,IAAyF,MAArG;AACH;AACJ,KAJD;AAKH,CA9BD,EA8BG,eAAe,aAAa,EAA5B,CA9BH;AA+BA","file":"nameSpace-compiled.js","sourcesContent":["/**\r\n * Created by Administrator on 2017/2/10.\r\n */\r\n//所有的验证器都放在一个文件里\r\nvar validation;\r\n(function (validation) {\r\n    var lettersRegexp = /^[A-Za-z]+$/;\r\n    var numberRegexp = /^[0-9]+$/;\r\n    var LettersOnlyValidator = (function () {\r\n        function LettersOnlyValidator() {\r\n        }\r\n        LettersOnlyValidator.prototype.isAcceptable = function (s) {\r\n            return lettersRegexp.test(s);\r\n        };\r\n        return LettersOnlyValidator;\r\n    }());\r\n    validation.LettersOnlyValidator = LettersOnlyValidator;\r\n    var ZipCodeValidator = (function () {\r\n        function ZipCodeValidator() {\r\n        }\r\n        ZipCodeValidator.prototype.isAcceptable = function (s) {\r\n            return s.length === 5 && numberRegexp.test(s);\r\n        };\r\n        return ZipCodeValidator;\r\n    }());\r\n    validation.ZipCodeValidator = ZipCodeValidator;\r\n    var strings = [\"Hello\", \"98052\", \"101\"];\r\n    var validators = {};\r\n    validators[\"ZIP code\"] = new validation.ZipCodeValidator();\r\n    validators[\"Letters only\"] = new validation.LettersOnlyValidator();\r\n    strings.forEach(function (s) {\r\n        for (var name_1 in validators) {\r\n            console.log(\"\" + s + \" \" + (validators[name_1].isAcceptable(s) ? \" matches \" : \" does not match \") + name_1);\r\n        }\r\n    });\r\n})(validation || (validation = {}));\r\n//# sourceMappingURL=nameSpace.js.map"]}