{"version":3,"sources":["sample1.js"],"names":[],"mappings":";;AAAA;;;AAGA;;;AAGA;AACA,IAAI,UAAJ;AACA,CAAC,UAAU,UAAV,EAAsB;AACnB,QAAI,gBAAgB,aAApB;AACA,QAAI,uBAAwB,YAAY;AACpC,iBAAS,oBAAT,GAAgC,CAC/B;AACD,6BAAqB,SAArB,CAA+B,YAA/B,GAA8C,UAAU,CAAV,EAAa;AACvD,mBAAO,cAAc,IAAd,CAAmB,CAAnB,CAAP;AACH,SAFD;AAGA,eAAO,oBAAP;AACH,KAP2B,EAA5B;AAQA,eAAW,oBAAX,GAAkC,oBAAlC;AACH,CAXD,EAWG,eAAe,aAAa,EAA5B,CAXH;AAYA;;;AAGA;AACA,IAAI,UAAJ;AACA,CAAC,UAAU,UAAV,EAAsB;AACnB,QAAI,eAAe,WAAnB;AACA,QAAI,mBAAoB,YAAY;AAChC,iBAAS,gBAAT,GAA4B,CAC3B;AACD,yBAAiB,SAAjB,CAA2B,YAA3B,GAA0C,UAAU,CAAV,EAAa;AACnD,mBAAO,EAAE,MAAF,KAAa,CAAb,IAAkB,aAAa,IAAb,CAAkB,CAAlB,CAAzB;AACH,SAFD;AAGA,eAAO,gBAAP;AACH,KAPuB,EAAxB;AAQA,eAAW,gBAAX,GAA8B,gBAA9B;AACH,CAXD,EAWG,eAAe,aAAa,EAA5B,CAXH;AAYA;;;AAGA;AACA;AACA;AACA,IAAI,UAAU,CAAC,OAAD,EAAU,OAAV,EAAmB,KAAnB,CAAd;AACA,IAAI,aAAa,EAAjB;AACA,WAAW,UAAX,IAAyB,IAAI,WAAW,gBAAf,EAAzB;AACA,WAAW,cAAX,IAA6B,IAAI,WAAW,oBAAf,EAA7B;AACA,QAAQ,OAAR,CAAgB,UAAU,CAAV,EAAa;AACzB,SAAK,IAAI,MAAT,IAAmB,UAAnB,EAA+B;AAC3B,gBAAQ,GAAR,CAAY,KAAK,CAAL,GAAS,GAAT,IAAgB,WAAW,MAAX,EAAmB,YAAnB,CAAgC,CAAhC,IAAqC,WAArC,GAAmD,kBAAnE,IAAyF,MAArG;AACH;AACJ,CAJD","file":"sample1-compiled.js","sourcesContent":["/**\r\n * Created by Administrator on 2017/2/10.\r\n */\r\n/**\r\n * Created by Administrator on 2017/2/10.\r\n */\r\n/// <reference path=\"Validation.ts\" />\r\nvar Validation;\r\n(function (Validation) {\r\n    var lettersRegexp = /^[A-Za-z]+$/;\r\n    var LettersOnlyValidator = (function () {\r\n        function LettersOnlyValidator() {\r\n        }\r\n        LettersOnlyValidator.prototype.isAcceptable = function (s) {\r\n            return lettersRegexp.test(s);\r\n        };\r\n        return LettersOnlyValidator;\r\n    }());\r\n    Validation.LettersOnlyValidator = LettersOnlyValidator;\r\n})(Validation || (Validation = {}));\r\n/**\r\n * Created by Administrator on 2017/2/10.\r\n */\r\n/// <reference path=\"Validation.ts\" />\r\nvar Validation;\r\n(function (Validation) {\r\n    var numberRegexp = /^[0-9]+$]/;\r\n    var ZipCodeValidator = (function () {\r\n        function ZipCodeValidator() {\r\n        }\r\n        ZipCodeValidator.prototype.isAcceptable = function (s) {\r\n            return s.length === 5 && numberRegexp.test(s);\r\n        };\r\n        return ZipCodeValidator;\r\n    }());\r\n    Validation.ZipCodeValidator = ZipCodeValidator;\r\n})(Validation || (Validation = {}));\r\n/**\r\n * Created by Administrator on 2017/2/10.\r\n */\r\n///<reference path=\"Validation.ts\"/>\r\n///<reference path=\"LettersOnlyValidator.ts\"/>\r\n///<reference path=\"ZipCodeValidator.ts\"/>\r\nvar strings = [\"Hello\", \"98052\", \"101\"];\r\nvar validators = {};\r\nvalidators[\"ZIP code\"] = new Validation.ZipCodeValidator();\r\nvalidators[\"Letters only\"] = new Validation.LettersOnlyValidator();\r\nstrings.forEach(function (s) {\r\n    for (var name_1 in validators) {\r\n        console.log(\"\" + s + \" \" + (validators[name_1].isAcceptable(s) ? \" matches \" : \" does not match \") + name_1);\r\n    }\r\n});\r\n"]}