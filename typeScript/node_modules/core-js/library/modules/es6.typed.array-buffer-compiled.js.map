{"version":3,"sources":["es6.typed.array-buffer.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,UAAe,QAAQ,WAAR,CAAnB;AAAA,IACI,SAAe,QAAQ,UAAR,CADnB;AAAA,IAEI,SAAe,QAAQ,iBAAR,CAFnB;AAAA,IAGI,WAAe,QAAQ,cAAR,CAHnB;AAAA,IAII,UAAe,QAAQ,aAAR,CAJnB;AAAA,IAKI,WAAe,QAAQ,cAAR,CALnB;AAAA,IAMI,WAAe,QAAQ,cAAR,CANnB;AAAA,IAOI,cAAe,QAAQ,WAAR,EAAqB,WAPxC;AAAA,IAQI,qBAAqB,QAAQ,wBAAR,CARzB;AAAA,IASI,eAAe,OAAO,WAT1B;AAAA,IAUI,YAAe,OAAO,QAV1B;AAAA,IAWI,UAAe,OAAO,GAAP,IAAc,YAAY,MAX7C;AAAA,IAYI,SAAe,aAAa,SAAb,CAAuB,KAZ1C;AAAA,IAaI,OAAe,OAAO,IAb1B;AAAA,IAcI,eAAe,aAdnB;;AAgBA,QAAQ,QAAQ,CAAR,GAAY,QAAQ,CAApB,GAAwB,QAAQ,CAAR,IAAa,gBAAgB,YAA7B,CAAhC,EAA4E,EAAC,aAAa,YAAd,EAA5E;;AAEA,QAAQ,QAAQ,CAAR,GAAY,QAAQ,CAAR,GAAY,CAAC,OAAO,MAAxC,EAAgD,YAAhD,EAA8D;AAC5D;AACA,UAAQ,SAAS,MAAT,CAAgB,EAAhB,EAAmB;AACzB,WAAO,WAAW,QAAQ,EAAR,CAAX,IAA0B,SAAS,EAAT,KAAgB,QAAQ,EAAzD;AACD;AAJ2D,CAA9D;;AAOA,QAAQ,QAAQ,CAAR,GAAY,QAAQ,CAApB,GAAwB,QAAQ,CAAR,GAAY,QAAQ,UAAR,EAAoB,YAAU;AACxE,SAAO,CAAC,IAAI,YAAJ,CAAiB,CAAjB,EAAoB,KAApB,CAA0B,CAA1B,EAA6B,SAA7B,EAAwC,UAAhD;AACD,CAF2C,CAA5C,EAEI,YAFJ,EAEkB;AAChB;AACA,SAAO,SAAS,KAAT,CAAe,KAAf,EAAsB,GAAtB,EAA0B;AAC/B,QAAG,WAAW,SAAX,IAAwB,QAAQ,SAAnC,EAA6C,OAAO,OAAO,IAAP,CAAY,SAAS,IAAT,CAAZ,EAA4B,KAA5B,CAAP,CADd,CACyD;AACxF,QAAI,MAAS,SAAS,IAAT,EAAe,UAA5B;AAAA,QACI,QAAS,QAAQ,KAAR,EAAe,GAAf,CADb;AAAA,QAEI,QAAS,QAAQ,QAAQ,SAAR,GAAoB,GAApB,GAA0B,GAAlC,EAAuC,GAAvC,CAFb;AAAA,QAGI,SAAS,KAAK,mBAAmB,IAAnB,EAAyB,YAAzB,CAAL,EAA6C,SAAS,QAAQ,KAAjB,CAA7C,CAHb;AAAA,QAII,QAAS,IAAI,SAAJ,CAAc,IAAd,CAJb;AAAA,QAKI,QAAS,IAAI,SAAJ,CAAc,MAAd,CALb;AAAA,QAMI,QAAS,CANb;AAOA,WAAM,QAAQ,KAAd,EAAoB;AAClB,YAAM,QAAN,CAAe,OAAf,EAAwB,MAAM,QAAN,CAAe,OAAf,CAAxB;AACD,KAAC,OAAO,MAAP;AACH;AAde,CAFlB;;AAmBA,QAAQ,gBAAR,EAA0B,YAA1B","file":"es6.typed.array-buffer-compiled.js","sourcesContent":["'use strict';\nvar $export      = require('./_export')\n  , $typed       = require('./_typed')\n  , buffer       = require('./_typed-buffer')\n  , anObject     = require('./_an-object')\n  , toIndex      = require('./_to-index')\n  , toLength     = require('./_to-length')\n  , isObject     = require('./_is-object')\n  , ArrayBuffer  = require('./_global').ArrayBuffer\n  , speciesConstructor = require('./_species-constructor')\n  , $ArrayBuffer = buffer.ArrayBuffer\n  , $DataView    = buffer.DataView\n  , $isView      = $typed.ABV && ArrayBuffer.isView\n  , $slice       = $ArrayBuffer.prototype.slice\n  , VIEW         = $typed.VIEW\n  , ARRAY_BUFFER = 'ArrayBuffer';\n\n$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});\n\n$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {\n  // 24.1.3.1 ArrayBuffer.isView(arg)\n  isView: function isView(it){\n    return $isView && $isView(it) || isObject(it) && VIEW in it;\n  }\n});\n\n$export($export.P + $export.U + $export.F * require('./_fails')(function(){\n  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;\n}), ARRAY_BUFFER, {\n  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)\n  slice: function slice(start, end){\n    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix\n    var len    = anObject(this).byteLength\n      , first  = toIndex(start, len)\n      , final  = toIndex(end === undefined ? len : end, len)\n      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))\n      , viewS  = new $DataView(this)\n      , viewT  = new $DataView(result)\n      , index  = 0;\n    while(first < final){\n      viewT.setUint8(index++, viewS.getUint8(first++));\n    } return result;\n  }\n});\n\nrequire('./_set-species')(ARRAY_BUFFER);"]}