{"version":3,"sources":["_array-methods.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAW,QAAQ,QAAR,CAAf;AAAA,IACI,UAAW,QAAQ,YAAR,CADf;AAAA,IAEI,WAAW,QAAQ,cAAR,CAFf;AAAA,IAGI,WAAW,QAAQ,cAAR,CAHf;AAAA,IAII,MAAW,QAAQ,yBAAR,CAJf;AAKA,OAAO,OAAP,GAAiB,UAAS,IAAT,EAAe,OAAf,EAAuB;AACtC,MAAI,SAAgB,QAAQ,CAA5B;AAAA,MACI,YAAgB,QAAQ,CAD5B;AAAA,MAEI,UAAgB,QAAQ,CAF5B;AAAA,MAGI,WAAgB,QAAQ,CAH5B;AAAA,MAII,gBAAgB,QAAQ,CAJ5B;AAAA,MAKI,WAAgB,QAAQ,CAAR,IAAa,aALjC;AAAA,MAMI,SAAgB,WAAW,GAN/B;AAOA,SAAO,UAAS,KAAT,EAAgB,UAAhB,EAA4B,IAA5B,EAAiC;AACtC,QAAI,IAAS,SAAS,KAAT,CAAb;AAAA,QACI,OAAS,QAAQ,CAAR,CADb;AAAA,QAEI,IAAS,IAAI,UAAJ,EAAgB,IAAhB,EAAsB,CAAtB,CAFb;AAAA,QAGI,SAAS,SAAS,KAAK,MAAd,CAHb;AAAA,QAII,QAAS,CAJb;AAAA,QAKI,SAAS,SAAS,OAAO,KAAP,EAAc,MAAd,CAAT,GAAiC,YAAY,OAAO,KAAP,EAAc,CAAd,CAAZ,GAA+B,SAL7E;AAAA,QAMI,GANJ;AAAA,QAMS,GANT;AAOA,WAAK,SAAS,KAAd,EAAqB,OAArB;AAA6B,UAAG,YAAY,SAAS,IAAxB,EAA6B;AACxD,cAAM,KAAK,KAAL,CAAN;AACA,cAAM,EAAE,GAAF,EAAO,KAAP,EAAc,CAAd,CAAN;AACA,YAAG,IAAH,EAAQ;AACN,cAAG,MAAH,EAAU,OAAO,KAAP,IAAgB,GAAhB,CAAV,CAA0C;AAA1C,eACK,IAAG,GAAH,EAAO,QAAO,IAAP;AACV,mBAAK,CAAL;AAAQ,uBAAO,IAAP,CADE,CAC8B;AACxC,mBAAK,CAAL;AAAQ,uBAAO,GAAP,CAFE,CAE8B;AACxC,mBAAK,CAAL;AAAQ,uBAAO,KAAP,CAHE,CAG8B;AACxC,mBAAK,CAAL;AAAQ,uBAAO,IAAP,CAAY,GAAZ,EAJE,CAI8B;AAJ9B,aAAP,MAKE,IAAG,QAAH,EAAY,OAAO,KAAP,CAPb,CAOoC;AAC3C;AACF;AAZD,KAaA,OAAO,gBAAgB,CAAC,CAAjB,GAAqB,WAAW,QAAX,GAAsB,QAAtB,GAAiC,MAA7D;AACD,GAtBD;AAuBD,CA/BD","file":"_array-methods-compiled.js","sourcesContent":["// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx      = require('./_ctx')\n  , IObject  = require('./_iobject')\n  , toObject = require('./_to-object')\n  , toLength = require('./_to-length')\n  , asc      = require('./_array-species-create');\nmodule.exports = function(TYPE, $create){\n  var IS_MAP        = TYPE == 1\n    , IS_FILTER     = TYPE == 2\n    , IS_SOME       = TYPE == 3\n    , IS_EVERY      = TYPE == 4\n    , IS_FIND_INDEX = TYPE == 6\n    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX\n    , create        = $create || asc;\n  return function($this, callbackfn, that){\n    var O      = toObject($this)\n      , self   = IObject(O)\n      , f      = ctx(callbackfn, that, 3)\n      , length = toLength(self.length)\n      , index  = 0\n      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined\n      , val, res;\n    for(;length > index; index++)if(NO_HOLES || index in self){\n      val = self[index];\n      res = f(val, index, O);\n      if(TYPE){\n        if(IS_MAP)result[index] = res;            // map\n        else if(res)switch(TYPE){\n          case 3: return true;                    // some\n          case 5: return val;                     // find\n          case 6: return index;                   // findIndex\n          case 2: result.push(val);               // filter\n        } else if(IS_EVERY)return false;          // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};"]}