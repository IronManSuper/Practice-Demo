{"version":3,"sources":["es6.array.join.js"],"names":[],"mappings":"AAAA;AACA;;AACA,IAAI,UAAY,QAAQ,WAAR,CAAhB;AAAA,IACI,YAAY,QAAQ,eAAR,CADhB;AAAA,IAEI,YAAY,GAAG,IAFnB;;AAIA;AACA,QAAQ,QAAQ,CAAR,GAAY,QAAQ,CAAR,IAAa,QAAQ,YAAR,KAAyB,MAAzB,IAAmC,CAAC,QAAQ,kBAAR,EAA4B,SAA5B,CAAjD,CAApB,EAA8G,OAA9G,EAAuH;AACrH,QAAM,SAAS,IAAT,CAAc,SAAd,EAAwB;AAC5B,WAAO,UAAU,IAAV,CAAe,UAAU,IAAV,CAAf,EAAgC,cAAc,SAAd,GAA0B,GAA1B,GAAgC,SAAhE,CAAP;AACD;AAHoH,CAAvH","file":"es6.array.join-compiled.js","sourcesContent":["'use strict';\n// 22.1.3.13 Array.prototype.join(separator)\nvar $export   = require('./_export')\n  , toIObject = require('./_to-iobject')\n  , arrayJoin = [].join;\n\n// fallback for not array-like strings\n$export($export.P + $export.F * (require('./_iobject') != Object || !require('./_strict-method')(arrayJoin)), 'Array', {\n  join: function join(separator){\n    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);\n  }\n});"]}