{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/* eslint max-len: 0 */\n\n// This is a trick taken from Esprima. It turns out that, on\n// non-Chrome browsers, to check whether a string is in a set, a\n// predicate containing a big ugly `switch` statement is faster than\n// a regular expression, and on Chrome the two are about on par.\n// This function uses `eval` (non-lexical) to produce such a\n// predicate from a space-separated string of words.\n//\n// It starts by sorting the words by length.\n\nfunction makePredicate(words) {\n  words = words.split(\" \");\n  return function (str) {\n    return words.indexOf(str) >= 0;\n  };\n}\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  6: makePredicate(\"enum await\"),\n  strict: makePredicate(\"implements interface let package private protected public static yield\"),\n  strictBind: makePredicate(\"eval arguments\")\n};\n\n// And the keywords\n\nvar isKeyword = makePredicate(\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this let const class extends export import yield super\");\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\";\nvar nonASCIIidentifierChars = \"\\u200C\\u200D\\xB7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D4-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFB-\\u1DFF\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA900-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `bin/generate-identifier-regex.js`.\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 17, 26, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 26, 45, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 785, 52, 76, 44, 33, 24, 27, 35, 42, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 54, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 86, 25, 391, 63, 32, 0, 449, 56, 264, 8, 2, 36, 18, 0, 50, 29, 881, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 881, 68, 12, 0, 67, 12, 65, 0, 32, 6124, 20, 754, 9486, 1, 3071, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 60, 67, 1213, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 10591, 541];\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 1306, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 52, 0, 13, 2, 49, 13, 10, 2, 4, 9, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 57, 0, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 87, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 423, 9, 838, 7, 2, 7, 17, 9, 57, 21, 2, 13, 19882, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 2214, 6, 110, 6, 6, 9, 792487, 239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\n// A second optional argument can be given to further configure\nvar defaultOptions = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n  for (var key in defaultOptions) {\n    options[key] = opts && key in opts ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar beforeExpr = true;\nvar startsExpr = true;\nvar isLoop = true;\nvar isAssign = true;\nvar prefix = true;\nvar postfix = true;\n\nvar TokenType = function TokenType(label) {\n  var conf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  classCallCheck(this, TokenType);\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.rightAssociative = !!conf.rightAssociative;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nvar KeywordTokenType = function (_TokenType) {\n  inherits(KeywordTokenType, _TokenType);\n\n  function KeywordTokenType(name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, KeywordTokenType);\n\n    options.keyword = name;\n\n    return possibleConstructorReturn(this, _TokenType.call(this, name, options));\n  }\n\n  return KeywordTokenType;\n}(TokenType);\n\nvar BinopTokenType = function (_TokenType2) {\n  inherits(BinopTokenType, _TokenType2);\n\n  function BinopTokenType(name, prec) {\n    classCallCheck(this, BinopTokenType);\n    return possibleConstructorReturn(this, _TokenType2.call(this, name, { beforeExpr: beforeExpr, binop: prec }));\n  }\n\n  return BinopTokenType;\n}(TokenType);\n\nvar types = {\n  num: new TokenType(\"num\", { startsExpr: startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr: startsExpr }),\n  string: new TokenType(\"string\", { startsExpr: startsExpr }),\n  name: new TokenType(\"name\", { startsExpr: startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr: beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr: beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr: beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr: beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr: beforeExpr }),\n  arrow: new TokenType(\"=>\", { beforeExpr: beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr: beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr: startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  at: new TokenType(\"@\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr: beforeExpr, isAssign: isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr: beforeExpr, isAssign: isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix: prefix, postfix: postfix, startsExpr: startsExpr }),\n  prefix: new TokenType(\"prefix\", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr }),\n  logicalOR: new BinopTokenType(\"||\", 1),\n  logicalAND: new BinopTokenType(\"&&\", 2),\n  bitwiseOR: new BinopTokenType(\"|\", 3),\n  bitwiseXOR: new BinopTokenType(\"^\", 4),\n  bitwiseAND: new BinopTokenType(\"&\", 5),\n  equality: new BinopTokenType(\"==/!=\", 6),\n  relational: new BinopTokenType(\"</>\", 7),\n  bitShift: new BinopTokenType(\"<</>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr: beforeExpr, binop: 9, prefix: prefix, startsExpr: startsExpr }),\n  modulo: new BinopTokenType(\"%\", 10),\n  star: new BinopTokenType(\"*\", 10),\n  slash: new BinopTokenType(\"/\", 10),\n  exponent: new TokenType(\"**\", { beforeExpr: beforeExpr, binop: 11, rightAssociative: true })\n};\n\nvar keywords = {\n  \"break\": new KeywordTokenType(\"break\"),\n  \"case\": new KeywordTokenType(\"case\", { beforeExpr: beforeExpr }),\n  \"catch\": new KeywordTokenType(\"catch\"),\n  \"continue\": new KeywordTokenType(\"continue\"),\n  \"debugger\": new KeywordTokenType(\"debugger\"),\n  \"default\": new KeywordTokenType(\"default\", { beforeExpr: beforeExpr }),\n  \"do\": new KeywordTokenType(\"do\", { isLoop: isLoop, beforeExpr: beforeExpr }),\n  \"else\": new KeywordTokenType(\"else\", { beforeExpr: beforeExpr }),\n  \"finally\": new KeywordTokenType(\"finally\"),\n  \"for\": new KeywordTokenType(\"for\", { isLoop: isLoop }),\n  \"function\": new KeywordTokenType(\"function\", { startsExpr: startsExpr }),\n  \"if\": new KeywordTokenType(\"if\"),\n  \"return\": new KeywordTokenType(\"return\", { beforeExpr: beforeExpr }),\n  \"switch\": new KeywordTokenType(\"switch\"),\n  \"throw\": new KeywordTokenType(\"throw\", { beforeExpr: beforeExpr }),\n  \"try\": new KeywordTokenType(\"try\"),\n  \"var\": new KeywordTokenType(\"var\"),\n  \"let\": new KeywordTokenType(\"let\"),\n  \"const\": new KeywordTokenType(\"const\"),\n  \"while\": new KeywordTokenType(\"while\", { isLoop: isLoop }),\n  \"with\": new KeywordTokenType(\"with\"),\n  \"new\": new KeywordTokenType(\"new\", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  \"this\": new KeywordTokenType(\"this\", { startsExpr: startsExpr }),\n  \"super\": new KeywordTokenType(\"super\", { startsExpr: startsExpr }),\n  \"class\": new KeywordTokenType(\"class\"),\n  \"extends\": new KeywordTokenType(\"extends\", { beforeExpr: beforeExpr }),\n  \"export\": new KeywordTokenType(\"export\"),\n  \"import\": new KeywordTokenType(\"import\"),\n  \"yield\": new KeywordTokenType(\"yield\", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  \"null\": new KeywordTokenType(\"null\", { startsExpr: startsExpr }),\n  \"true\": new KeywordTokenType(\"true\", { startsExpr: startsExpr }),\n  \"false\": new KeywordTokenType(\"false\", { startsExpr: startsExpr }),\n  \"in\": new KeywordTokenType(\"in\", { beforeExpr: beforeExpr, binop: 7 }),\n  \"instanceof\": new KeywordTokenType(\"instanceof\", { beforeExpr: beforeExpr, binop: 7 }),\n  \"typeof\": new KeywordTokenType(\"typeof\", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr }),\n  \"void\": new KeywordTokenType(\"void\", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr }),\n  \"delete\": new KeywordTokenType(\"delete\", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr })\n};\n\n// Map keyword names to token types.\nObject.keys(keywords).forEach(function (name) {\n  types[\"_\" + name] = keywords[name];\n});\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029;\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override) {\n  classCallCheck(this, TokContext);\n\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n};\n\nvar types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  templateQuasi: new TokContext(\"${\", true),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, function (p) {\n    return p.readTmplToken();\n  }),\n  functionExpression: new TokContext(\"function\", true)\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  var out = this.state.context.pop();\n  if (out === types$1.braceStatement && this.curContext() === types$1.functionExpression) {\n    this.state.context.pop();\n    this.state.exprAllowed = false;\n  } else if (out === types$1.templateQuasi) {\n    this.state.exprAllowed = true;\n  } else {\n    this.state.exprAllowed = !out.isExpr;\n  }\n};\n\ntypes.name.updateContext = function (prevType) {\n  this.state.exprAllowed = false;\n\n  if (prevType === types._let || prevType === types._const || prevType === types._var) {\n    if (lineBreak.test(this.input.slice(this.state.end))) {\n      this.state.exprAllowed = true;\n    }\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = function () {\n  if (this.curContext() !== types$1.braceStatement) {\n    this.state.context.push(types$1.functionExpression);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n  this.state.exprAllowed = false;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  classCallCheck(this, Position);\n\n  this.line = line;\n  this.column = col;\n};\n\nvar SourceLocation = function SourceLocation(start, end) {\n  classCallCheck(this, SourceLocation);\n\n  this.start = start;\n  this.end = end;\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur);\n    }\n  }\n}\n\nvar State = function () {\n  function State() {\n    classCallCheck(this, State);\n  }\n\n  State.prototype.init = function init(options, input) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n\n    this.input = input;\n\n    this.potentialArrowAt = -1;\n\n    this.inMethod = this.inFunction = this.inGenerator = this.inAsync = this.inPropertyName = this.inType = this.noAnonFunctionType = false;\n\n    this.labels = [];\n\n    this.decorators = [];\n\n    this.tokens = [];\n\n    this.comments = [];\n\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n\n    this.type = types.eof;\n    this.value = null;\n    this.start = this.end = this.pos;\n    this.startLoc = this.endLoc = this.curPosition();\n\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n\n    this.containsEsc = this.containsOctal = false;\n    this.octalPosition = null;\n\n    this.exportedIdentifiers = [];\n\n    return this;\n  };\n\n  // TODO\n\n\n  // TODO\n\n\n  // Used to signify the start of a potential arrow function\n\n\n  // Flags to track whether we are in a function, a generator.\n\n\n  // Labels in scope.\n\n\n  // Leading decorators.\n\n\n  // Token store.\n\n\n  // Comment store.\n\n\n  // Comment attachment store\n\n\n  // The current position of the tokenizer in the input.\n\n\n  // Properties of the current token:\n  // Its type\n\n\n  // For tokens that include more information than their type, the value\n\n\n  // Its start and end offset\n\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n\n\n  // Position information for the previous token\n\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n\n\n  // TODO\n\n\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n\n\n  State.prototype.curPosition = function curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  };\n\n  State.prototype.clone = function clone(skipArrays) {\n    var state = new State();\n    for (var key in this) {\n      var val = this[key];\n\n      if ((!skipArrays || key === \"context\") && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n    return state;\n  };\n\n  return State;\n}();\n\n/* eslint indent: 0 */\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(state) {\n  classCallCheck(this, Token);\n\n  this.type = state.type;\n  this.value = state.value;\n  this.start = state.start;\n  this.end = state.end;\n  this.loc = new SourceLocation(state.startLoc, state.endLoc);\n};\n\n// ## Tokenizer\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) {\n    return String.fromCharCode(code);\n  } else {\n    return String.fromCharCode((code - 0x10000 >> 10) + 0xD800, (code - 0x10000 & 1023) + 0xDC00);\n  }\n}\n\nvar Tokenizer = function () {\n  function Tokenizer(options, input) {\n    classCallCheck(this, Tokenizer);\n\n    this.state = new State();\n    this.state.init(options, input);\n  }\n\n  // Move to the next token\n\n  Tokenizer.prototype.next = function next() {\n    if (!this.isLookahead) {\n      this.state.tokens.push(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  };\n\n  // TODO\n\n  Tokenizer.prototype.eat = function eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  // TODO\n\n  Tokenizer.prototype.match = function match(type) {\n    return this.state.type === type;\n  };\n\n  // TODO\n\n  Tokenizer.prototype.isKeyword = function isKeyword$$1(word) {\n    return isKeyword(word);\n  };\n\n  // TODO\n\n  Tokenizer.prototype.lookahead = function lookahead() {\n    var old = this.state;\n    this.state = old.clone(true);\n\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n\n    var curr = this.state.clone(true);\n    this.state = old;\n    return curr;\n  };\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  Tokenizer.prototype.setStrict = function setStrict(strict) {\n    this.state.strict = strict;\n    if (!this.match(types.num) && !this.match(types.string)) return;\n    this.state.pos = this.state.start;\n    while (this.state.pos < this.state.lineStart) {\n      this.state.lineStart = this.input.lastIndexOf(\"\\n\", this.state.lineStart - 2) + 1;\n      --this.state.curLine;\n    }\n    this.nextToken();\n  };\n\n  Tokenizer.prototype.curContext = function curContext() {\n    return this.state.context[this.state.context.length - 1];\n  };\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  Tokenizer.prototype.nextToken = function nextToken() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) this.skipSpace();\n\n    this.state.containsOctal = false;\n    this.state.octalPosition = null;\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.input.length) return this.finishToken(types.eof);\n\n    if (curContext.override) {\n      return curContext.override(this);\n    } else {\n      return this.readToken(this.fullCharCodeAtPos());\n    }\n  };\n\n  Tokenizer.prototype.readToken = function readToken(code) {\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if (isIdentifierStart(code) || code === 92 /* '\\' */) {\n        return this.readWord();\n      } else {\n      return this.getTokenFromCode(code);\n    }\n  };\n\n  Tokenizer.prototype.fullCharCodeAtPos = function fullCharCodeAtPos() {\n    var code = this.input.charCodeAt(this.state.pos);\n    if (code <= 0xd7ff || code >= 0xe000) return code;\n\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    return (code << 10) + next - 0x35fdc00;\n  };\n\n  Tokenizer.prototype.pushComment = function pushComment(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n\n    if (!this.isLookahead) {\n      this.state.tokens.push(comment);\n      this.state.comments.push(comment);\n      this.addComment(comment);\n    }\n  };\n\n  Tokenizer.prototype.skipBlockComment = function skipBlockComment() {\n    var startLoc = this.state.curPosition();\n    var start = this.state.pos;\n    var end = this.input.indexOf(\"*/\", this.state.pos += 2);\n    if (end === -1) this.raise(this.state.pos - 2, \"Unterminated comment\");\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    var match = void 0;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  };\n\n  Tokenizer.prototype.skipLineComment = function skipLineComment(startSkip) {\n    var start = this.state.pos;\n    var startLoc = this.state.curPosition();\n    var ch = this.input.charCodeAt(this.state.pos += startSkip);\n    while (this.state.pos < this.input.length && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n      ++this.state.pos;\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  };\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  Tokenizer.prototype.skipSpace = function skipSpace() {\n    loop: while (this.state.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case 32:case 160:\n          // ' '\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:case 8232:case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          // '/'\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              // '*'\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  };\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  Tokenizer.prototype.finishToken = function finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    var prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    this.updateContext(prevType);\n  };\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n\n\n  Tokenizer.prototype.readToken_dot = function readToken_dot() {\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= 48 && next <= 57) {\n      return this.readNumber(true);\n    }\n\n    var next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === 46 && next2 === 46) {\n      // 46 = dot '.'\n      this.state.pos += 3;\n      return this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      return this.finishToken(types.dot);\n    }\n  };\n\n  Tokenizer.prototype.readToken_slash = function readToken_slash() {\n    // '/'\n    if (this.state.exprAllowed) {\n      ++this.state.pos;\n      return this.readRegexp();\n    }\n\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      return this.finishOp(types.assign, 2);\n    } else {\n      return this.finishOp(types.slash, 1);\n    }\n  };\n\n  Tokenizer.prototype.readToken_mult_modulo = function readToken_mult_modulo(code) {\n    // '%*'\n    var type = code === 42 ? types.star : types.modulo;\n    var width = 1;\n    var next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 42) {\n      // '*'\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61) {\n      width++;\n      type = types.assign;\n    }\n\n    return this.finishOp(type, width);\n  };\n\n  Tokenizer.prototype.readToken_pipe_amp = function readToken_pipe_amp(code) {\n    // '|&'\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === code) return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n    if (next === 61) return this.finishOp(types.assign, 2);\n    if (code === 124 && next === 125 && this.hasPlugin(\"flow\")) return this.finishOp(types.braceBarR, 2);\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  };\n\n  Tokenizer.prototype.readToken_caret = function readToken_caret() {\n    // '^'\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      return this.finishOp(types.assign, 2);\n    } else {\n      return this.finishOp(types.bitwiseXOR, 1);\n    }\n  };\n\n  Tokenizer.prototype.readToken_plus_min = function readToken_plus_min(code) {\n    // '+-'\n    var next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && this.input.charCodeAt(this.state.pos + 2) === 62 && lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.pos))) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken();\n      }\n      return this.finishOp(types.incDec, 2);\n    }\n\n    if (next === 61) {\n      return this.finishOp(types.assign, 2);\n    } else {\n      return this.finishOp(types.plusMin, 1);\n    }\n  };\n\n  Tokenizer.prototype.readToken_lt_gt = function readToken_lt_gt(code) {\n    // '<>'\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    var size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === 61) return this.finishOp(types.assign, size + 1);\n      return this.finishOp(types.bitShift, size);\n    }\n\n    if (next === 33 && code === 60 && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      if (this.inModule) this.unexpected();\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken();\n    }\n\n    if (next === 61) {\n      // <= | >=\n      size = 2;\n    }\n\n    return this.finishOp(types.relational, size);\n  };\n\n  Tokenizer.prototype.readToken_eq_excl = function readToken_eq_excl(code) {\n    // '=!'\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) return this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n    if (code === 61 && next === 62) {\n      // '=>'\n      this.state.pos += 2;\n      return this.finishToken(types.arrow);\n    }\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1);\n  };\n\n  Tokenizer.prototype.getTokenFromCode = function getTokenFromCode(code) {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n      case 46:\n        // '.'\n        return this.readToken_dot();\n\n      // Punctuation tokens.\n      case 40:\n        ++this.state.pos;return this.finishToken(types.parenL);\n      case 41:\n        ++this.state.pos;return this.finishToken(types.parenR);\n      case 59:\n        ++this.state.pos;return this.finishToken(types.semi);\n      case 44:\n        ++this.state.pos;return this.finishToken(types.comma);\n      case 91:\n        ++this.state.pos;return this.finishToken(types.bracketL);\n      case 93:\n        ++this.state.pos;return this.finishToken(types.bracketR);\n\n      case 123:\n        if (this.hasPlugin(\"flow\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          return this.finishOp(types.braceBarL, 2);\n        } else {\n          ++this.state.pos;\n          return this.finishToken(types.braceL);\n        }\n\n      case 125:\n        ++this.state.pos;return this.finishToken(types.braceR);\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          return this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          return this.finishToken(types.colon);\n        }\n\n      case 63:\n        ++this.state.pos;return this.finishToken(types.question);\n      case 64:\n        ++this.state.pos;return this.finishToken(types.at);\n\n      case 96:\n        // '`'\n        ++this.state.pos;\n        return this.finishToken(types.backQuote);\n\n      case 48:\n        // '0'\n        var next = this.input.charCodeAt(this.state.pos + 1);\n        if (next === 120 || next === 88) return this.readRadixNumber(16); // '0x', '0X' - hex number\n        if (next === 111 || next === 79) return this.readRadixNumber(8); // '0o', '0O' - octal number\n        if (next === 98 || next === 66) return this.readRadixNumber(2); // '0b', '0B' - binary number\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float.\n      case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:\n        // 1-9\n        return this.readNumber(false);\n\n      // Quotes produce strings.\n      case 34:case 39:\n        // '\"', \"'\"\n        return this.readString(code);\n\n      // Operators are parsed inline in tiny state machines. '=' (61) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case 47:\n        // '/'\n        return this.readToken_slash();\n\n      case 37:case 42:\n        // '%*'\n        return this.readToken_mult_modulo(code);\n\n      case 124:case 38:\n        // '|&'\n        return this.readToken_pipe_amp(code);\n\n      case 94:\n        // '^'\n        return this.readToken_caret();\n\n      case 43:case 45:\n        // '+-'\n        return this.readToken_plus_min(code);\n\n      case 60:case 62:\n        // '<>'\n        return this.readToken_lt_gt(code);\n\n      case 61:case 33:\n        // '=!'\n        return this.readToken_eq_excl(code);\n\n      case 126:\n        // '~'\n        return this.finishOp(types.prefix, 1);\n    }\n\n    this.raise(this.state.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  Tokenizer.prototype.finishOp = function finishOp(type, size) {\n    var str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    return this.finishToken(type, str);\n  };\n\n  Tokenizer.prototype.readRegexp = function readRegexp() {\n    var start = this.state.pos;\n    var escaped = void 0,\n        inClass = void 0;\n    for (;;) {\n      if (this.state.pos >= this.input.length) this.raise(start, \"Unterminated regular expression\");\n      var ch = this.input.charAt(this.state.pos);\n      if (lineBreak.test(ch)) {\n        this.raise(start, \"Unterminated regular expression\");\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n        escaped = ch === \"\\\\\";\n      }\n      ++this.state.pos;\n    }\n    var content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n    // here (don't ask).\n    var mods = this.readWord1();\n    if (mods) {\n      var validFlags = /^[gmsiyu]*$/;\n      if (!validFlags.test(mods)) this.raise(start, \"Invalid regular expression flag\");\n    }\n    return this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  };\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n\n  Tokenizer.prototype.readInt = function readInt(radix, len) {\n    var start = this.state.pos;\n    var total = 0;\n\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      var code = this.input.charCodeAt(this.state.pos);\n      var val = void 0;\n      if (code >= 97) {\n        val = code - 97 + 10; // a\n      } else if (code >= 65) {\n        val = code - 65 + 10; // A\n      } else if (code >= 48 && code <= 57) {\n        val = code - 48; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) break;\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (this.state.pos === start || len != null && this.state.pos - start !== len) return null;\n\n    return total;\n  };\n\n  Tokenizer.prototype.readRadixNumber = function readRadixNumber(radix) {\n    this.state.pos += 2; // 0x\n    var val = this.readInt(radix);\n    if (val == null) this.raise(this.state.start + 2, \"Expected number in radix \" + radix);\n    if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.state.pos, \"Identifier directly after number\");\n    return this.finishToken(types.num, val);\n  };\n\n  // Read an integer, octal integer, or floating-point number.\n\n  Tokenizer.prototype.readNumber = function readNumber(startsWithDot) {\n    var start = this.state.pos;\n    var octal = this.input.charCodeAt(this.state.pos) === 48;\n    var isFloat = false;\n\n    if (!startsWithDot && this.readInt(10) === null) this.raise(start, \"Invalid number\");\n    var next = this.input.charCodeAt(this.state.pos);\n    if (next === 46) {\n      // '.'\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n    if (next === 69 || next === 101) {\n      // 'eE'\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === 43 || next === 45) ++this.state.pos; // '+-'\n      if (this.readInt(10) === null) this.raise(start, \"Invalid number\");\n      isFloat = true;\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.state.pos, \"Identifier directly after number\");\n\n    var str = this.input.slice(start, this.state.pos);\n    var val = void 0;\n    if (isFloat) {\n      val = parseFloat(str);\n    } else if (!octal || str.length === 1) {\n      val = parseInt(str, 10);\n    } else if (/[89]/.test(str) || this.state.strict) {\n      this.raise(start, \"Invalid number\");\n    } else {\n      val = parseInt(str, 8);\n    }\n    return this.finishToken(types.num, val);\n  };\n\n  // Read a string value, interpreting backslash-escapes.\n\n  Tokenizer.prototype.readCodePoint = function readCodePoint() {\n    var ch = this.input.charCodeAt(this.state.pos);\n    var code = void 0;\n\n    if (ch === 123) {\n      var codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos);\n      ++this.state.pos;\n      if (code > 0x10FFFF) this.raise(codePos, \"Code point out of bounds\");\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code;\n  };\n\n  Tokenizer.prototype.readString = function readString(quote) {\n    var out = \"\",\n        chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.input.length) this.raise(this.state.start, \"Unterminated string constant\");\n      var ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === 92) {\n        // '\\'\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else {\n        if (isNewLine(ch)) this.raise(this.state.start, \"Unterminated string constant\");\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  };\n\n  // Reads template string tokens.\n\n  Tokenizer.prototype.readTmplToken = function readTmplToken() {\n    var out = \"\",\n        chunkStart = this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.input.length) this.raise(this.state.start, \"Unterminated template\");\n      var ch = this.input.charCodeAt(this.state.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        // '`', '${'\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            return this.finishToken(types.dollarBraceL);\n          } else {\n            ++this.state.pos;\n            return this.finishToken(types.backQuote);\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        return this.finishToken(types.template, out);\n      }\n      if (ch === 92) {\n        // '\\'\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) ++this.state.pos;\n          case 10:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  };\n\n  // Used to read escaped characters\n\n  Tokenizer.prototype.readEscapedChar = function readEscapedChar(inTemplate) {\n    var ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case 110:\n        return \"\\n\"; // 'n' -> '\\n'\n      case 114:\n        return \"\\r\"; // 'r' -> '\\r'\n      case 120:\n        return String.fromCharCode(this.readHexChar(2)); // 'x'\n      case 117:\n        return codePointToString(this.readCodePoint()); // 'u'\n      case 116:\n        return \"\\t\"; // 't' -> '\\t'\n      case 98:\n        return \"\\b\"; // 'b' -> '\\b'\n      case 118:\n        return \"\\x0B\"; // 'v' -> '\\u000b'\n      case 102:\n        return \"\\f\"; // 'f' -> '\\f'\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) ++this.state.pos; // '\\r\\n'\n      case 10:\n        // ' \\n'\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n        return \"\";\n      default:\n        if (ch >= 48 && ch <= 55) {\n          var octalStr = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/)[0];\n          var octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          if (octal > 0) {\n            if (!this.state.containsOctal) {\n              this.state.containsOctal = true;\n              this.state.octalPosition = this.state.pos - 2;\n            }\n            if (this.state.strict || inTemplate) {\n              this.raise(this.state.pos - 2, \"Octal literal in strict mode\");\n            }\n          }\n          this.state.pos += octalStr.length - 1;\n          return String.fromCharCode(octal);\n        }\n        return String.fromCharCode(ch);\n    }\n  };\n\n  // Used to read character escape sequences ('\\x', '\\u', '\\U').\n\n  Tokenizer.prototype.readHexChar = function readHexChar(len) {\n    var codePos = this.state.pos;\n    var n = this.readInt(16, len);\n    if (n === null) this.raise(codePos, \"Bad character escape sequence\");\n    return n;\n  };\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  Tokenizer.prototype.readWord1 = function readWord1() {\n    this.state.containsEsc = false;\n    var word = \"\",\n        first = true,\n        chunkStart = this.state.pos;\n    while (this.state.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        // \"\\\"\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        var escStart = this.state.pos;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          // \"u\"\n          this.raise(this.state.pos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n        }\n\n        ++this.state.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, true)) {\n          this.raise(escStart, \"Invalid Unicode escape\");\n        }\n\n        word += codePointToString(esc);\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  };\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  Tokenizer.prototype.readWord = function readWord() {\n    var word = this.readWord1();\n    var type = types.name;\n    if (!this.state.containsEsc && this.isKeyword(word)) {\n      type = keywords[word];\n    }\n    return this.finishToken(type, word);\n  };\n\n  Tokenizer.prototype.braceIsBlock = function braceIsBlock(prevType) {\n    if (prevType === types.colon) {\n      var parent = this.curContext();\n      if (parent === types$1.braceStatement || parent === types$1.braceExpression) {\n        return !parent.isExpr;\n      }\n    }\n\n    if (prevType === types._return) {\n      return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return this.curContext() === types$1.braceStatement;\n    }\n\n    return !this.state.exprAllowed;\n  };\n\n  Tokenizer.prototype.updateContext = function updateContext(prevType) {\n    var type = this.state.type;\n    var update = void 0;\n\n    if (type.keyword && prevType === types.dot) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  };\n\n  return Tokenizer;\n}();\n\nvar plugins = {};\nvar frozenDeprecatedWildcardPluginList = [\"jsx\", \"doExpressions\", \"objectRestSpread\", \"decorators\", \"classProperties\", \"exportExtensions\", \"asyncGenerators\", \"functionBind\", \"functionSent\", \"dynamicImport\", \"flow\"];\n\nvar Parser = function (_Tokenizer) {\n  inherits(Parser, _Tokenizer);\n\n  function Parser(options, input) {\n    classCallCheck(this, Parser);\n\n    options = getOptions(options);\n\n    var _this = possibleConstructorReturn(this, _Tokenizer.call(this, options, input));\n\n    _this.options = options;\n    _this.inModule = _this.options.sourceType === \"module\";\n    _this.input = input;\n    _this.plugins = _this.loadPlugins(_this.options.plugins);\n    _this.filename = options.sourceFilename;\n\n    // If enabled, skip leading hashbang line.\n    if (_this.state.pos === 0 && _this.input[0] === \"#\" && _this.input[1] === \"!\") {\n      _this.skipLineComment(2);\n    }\n    return _this;\n  }\n\n  Parser.prototype.isReservedWord = function isReservedWord(word) {\n    if (word === \"await\") {\n      return this.inModule;\n    } else {\n      return reservedWords[6](word);\n    }\n  };\n\n  Parser.prototype.hasPlugin = function hasPlugin(name) {\n    if (this.plugins[\"*\"] && frozenDeprecatedWildcardPluginList.indexOf(name) > -1) {\n      return true;\n    }\n\n    return !!this.plugins[name];\n  };\n\n  Parser.prototype.extend = function extend(name, f) {\n    this[name] = f(this[name]);\n  };\n\n  Parser.prototype.loadAllPlugins = function loadAllPlugins() {\n    var _this2 = this;\n\n    // ensure flow plugin loads last\n    var pluginNames = Object.keys(plugins).filter(function (name) {\n      return name !== \"flow\";\n    });\n    pluginNames.push(\"flow\");\n\n    pluginNames.forEach(function (name) {\n      var plugin = plugins[name];\n      if (plugin) plugin(_this2);\n    });\n  };\n\n  Parser.prototype.loadPlugins = function loadPlugins(pluginList) {\n    // TODO: Deprecate \"*\" option in next major version of Babylon\n    if (pluginList.indexOf(\"*\") >= 0) {\n      this.loadAllPlugins();\n\n      return { \"*\": true };\n    }\n\n    var pluginMap = {};\n\n    if (pluginList.indexOf(\"flow\") >= 0) {\n      // ensure flow plugin loads last\n      pluginList = pluginList.filter(function (plugin) {\n        return plugin !== \"flow\";\n      });\n      pluginList.push(\"flow\");\n    }\n\n    for (var _iterator = pluginList, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var name = _ref;\n\n      if (!pluginMap[name]) {\n        pluginMap[name] = true;\n\n        var plugin = plugins[name];\n        if (plugin) plugin(this);\n      }\n    }\n\n    return pluginMap;\n  };\n\n  Parser.prototype.parse = function parse() {\n    var file = this.startNode();\n    var program = this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(file, program);\n  };\n\n  return Parser;\n}(Tokenizer);\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\n// TODO\n\npp.addExtra = function (node, key, val) {\n  if (!node) return;\n\n  var extra = node.extra = node.extra || {};\n  extra[key] = val;\n};\n\n// TODO\n\npp.isRelational = function (op) {\n  return this.match(types.relational) && this.state.value === op;\n};\n\n// TODO\n\npp.expectRelational = function (op) {\n  if (this.isRelational(op)) {\n    this.next();\n  } else {\n    this.unexpected(null, types.relational);\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function (name) {\n  return this.match(types.name) && this.state.value === name;\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function (name) {\n  return this.state.value === name && this.eat(types.name);\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function (name, message) {\n  if (!this.eatContextual(name)) this.unexpected(null, message);\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function () {\n  return this.match(types.eof) || this.match(types.braceR) || lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n};\n\n// TODO\n\npp.isLineTerminator = function () {\n  return this.eat(types.semi) || this.canInsertSemicolon();\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function () {\n  if (!this.isLineTerminator()) this.unexpected(null, types.semi);\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error at given pos.\n\npp.expect = function (type, pos) {\n  return this.eat(type) || this.unexpected(pos, type);\n};\n\n// Raise an unexpected token error. Can take the expected token type\n// instead of a message string.\n\npp.unexpected = function (pos) {\n  var messageOrType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Unexpected token\";\n\n  if (messageOrType && (typeof messageOrType === \"undefined\" ? \"undefined\" : _typeof(messageOrType)) === \"object\" && messageOrType.label) {\n    messageOrType = \"Unexpected token, expected \" + messageOrType.label;\n  }\n  this.raise(pos != null ? pos : this.state.start, messageOrType);\n};\n\n/* eslint indent: 0 */\n/* eslint max-len: 0 */\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function (file, program) {\n  program.sourceType = this.options.sourceType;\n\n  this.parseBlockBody(program, true, true, types.eof);\n\n  file.program = this.finishNode(program, \"Program\");\n  file.comments = this.state.comments;\n  file.tokens = this.state.tokens;\n\n  return this.finishNode(file, \"File\");\n};\n\nvar loopLabel = { kind: \"loop\" };\nvar switchLabel = { kind: \"switch\" };\n\n// TODO\n\npp$1.stmtToDirective = function (stmt) {\n  var expr = stmt.expression;\n\n  var directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n  var directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n  var raw = this.input.slice(expr.start, expr.end);\n  var val = directiveLiteral.value = raw.slice(1, -1); // remove quotes\n\n  this.addExtra(directiveLiteral, \"raw\", raw);\n  this.addExtra(directiveLiteral, \"rawValue\", val);\n\n  directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n\n  return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function (declaration, topLevel) {\n  if (this.match(types.at)) {\n    this.parseDecorators(true);\n  }\n\n  var starttype = this.state.type;\n  var node = this.startNode();\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n    case types._break:case types._continue:\n      return this.parseBreakContinueStatement(node, starttype.keyword);\n    case types._debugger:\n      return this.parseDebuggerStatement(node);\n    case types._do:\n      return this.parseDoStatement(node);\n    case types._for:\n      return this.parseForStatement(node);\n    case types._function:\n      if (!declaration) this.unexpected();\n      return this.parseFunctionStatement(node);\n\n    case types._class:\n      if (!declaration) this.unexpected();\n      this.takeDecorators(node);\n      return this.parseClass(node, true);\n\n    case types._if:\n      return this.parseIfStatement(node);\n    case types._return:\n      return this.parseReturnStatement(node);\n    case types._switch:\n      return this.parseSwitchStatement(node);\n    case types._throw:\n      return this.parseThrowStatement(node);\n    case types._try:\n      return this.parseTryStatement(node);\n\n    case types._let:\n    case types._const:\n      if (!declaration) this.unexpected(); // NOTE: falls through to _var\n\n    case types._var:\n      return this.parseVarStatement(node, starttype);\n\n    case types._while:\n      return this.parseWhileStatement(node);\n    case types._with:\n      return this.parseWithStatement(node);\n    case types.braceL:\n      return this.parseBlock();\n    case types.semi:\n      return this.parseEmptyStatement(node);\n    case types._export:\n    case types._import:\n      if (this.hasPlugin(\"dynamicImport\") && this.lookahead().type === types.parenL) break;\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel) {\n          this.raise(this.state.start, \"'import' and 'export' may only appear at the top level\");\n        }\n\n        if (!this.inModule) {\n          this.raise(this.state.start, \"'import' and 'export' may appear only with 'sourceType: module'\");\n        }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node);\n\n    case types.name:\n      if (this.state.value === \"async\") {\n        // peek ahead and see if next token is a function\n        var state = this.state.clone();\n        this.next();\n        if (this.match(types._function) && !this.canInsertSemicolon()) {\n          this.expect(types._function);\n          return this.parseFunction(node, true, false, true);\n        } else {\n          this.state = state;\n        }\n      }\n  }\n\n  // If the statement does not start with a statement keyword or a\n  // brace, it's an ExpressionStatement or LabeledStatement. We\n  // simply start parsing an expression, and afterwards, if the\n  // next token is a colon and the expression was a simple\n  // Identifier node, we switch to interpreting it as a label.\n  var maybeName = this.state.value;\n  var expr = this.parseExpression();\n\n  if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n    return this.parseLabeledStatement(node, maybeName, expr);\n  } else {\n    return this.parseExpressionStatement(node, expr);\n  }\n};\n\npp$1.takeDecorators = function (node) {\n  if (this.state.decorators.length) {\n    node.decorators = this.state.decorators;\n    this.state.decorators = [];\n  }\n};\n\npp$1.parseDecorators = function (allowExport) {\n  while (this.match(types.at)) {\n    var decorator = this.parseDecorator();\n    this.state.decorators.push(decorator);\n  }\n\n  if (allowExport && this.match(types._export)) {\n    return;\n  }\n\n  if (!this.match(types._class)) {\n    this.raise(this.state.start, \"Leading decorators must be attached to a class declaration\");\n  }\n};\n\npp$1.parseDecorator = function () {\n  if (!this.hasPlugin(\"decorators\")) {\n    this.unexpected();\n  }\n  var node = this.startNode();\n  this.next();\n  node.expression = this.parseMaybeAssign();\n  return this.finishNode(node, \"Decorator\");\n};\n\npp$1.parseBreakContinueStatement = function (node, keyword) {\n  var isBreak = keyword === \"break\";\n  this.next();\n\n  if (this.isLineTerminator()) {\n    node.label = null;\n  } else if (!this.match(types.name)) {\n    this.unexpected();\n  } else {\n    node.label = this.parseIdentifier();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = void 0;\n  for (i = 0; i < this.state.labels.length; ++i) {\n    var lab = this.state.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n      if (node.label && isBreak) break;\n    }\n  }\n  if (i === this.state.labels.length) this.raise(node.start, \"Unsyntactic \" + keyword);\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n};\n\npp$1.parseDebuggerStatement = function (node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\");\n};\n\npp$1.parseDoStatement = function (node) {\n  this.next();\n  this.state.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.state.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  this.eat(types.semi);\n  return this.finishNode(node, \"DoWhileStatement\");\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function (node) {\n  this.next();\n  this.state.labels.push(loopLabel);\n\n  var forAwait = false;\n  if (this.hasPlugin(\"asyncGenerators\") && this.state.inAsync && this.isContextual(\"await\")) {\n    forAwait = true;\n    this.next();\n  }\n  this.expect(types.parenL);\n\n  if (this.match(types.semi)) {\n    if (forAwait) {\n      this.unexpected();\n    }\n    return this.parseFor(node, null);\n  }\n\n  if (this.match(types._var) || this.match(types._let) || this.match(types._const)) {\n    var _init = this.startNode();\n    var varKind = this.state.type;\n    this.next();\n    this.parseVar(_init, true, varKind);\n    this.finishNode(_init, \"VariableDeclaration\");\n\n    if (this.match(types._in) || this.isContextual(\"of\")) {\n      if (_init.declarations.length === 1 && !_init.declarations[0].init) {\n        return this.parseForIn(node, _init, forAwait);\n      }\n    }\n    if (forAwait) {\n      this.unexpected();\n    }\n    return this.parseFor(node, _init);\n  }\n\n  var refShorthandDefaultPos = { start: 0 };\n  var init = this.parseExpression(true, refShorthandDefaultPos);\n  if (this.match(types._in) || this.isContextual(\"of\")) {\n    var description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n    this.toAssignable(init, undefined, description);\n    this.checkLVal(init, undefined, undefined, description);\n    return this.parseForIn(node, init, forAwait);\n  } else if (refShorthandDefaultPos.start) {\n    this.unexpected(refShorthandDefaultPos.start);\n  }\n  if (forAwait) {\n    this.unexpected();\n  }\n  return this.parseFor(node, init);\n};\n\npp$1.parseFunctionStatement = function (node) {\n  this.next();\n  return this.parseFunction(node, true);\n};\n\npp$1.parseIfStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  node.consequent = this.parseStatement(false);\n  node.alternate = this.eat(types._else) ? this.parseStatement(false) : null;\n  return this.finishNode(node, \"IfStatement\");\n};\n\npp$1.parseReturnStatement = function (node) {\n  if (!this.state.inFunction && !this.options.allowReturnOutsideFunction) {\n    this.raise(this.state.start, \"'return' outside of function\");\n  }\n\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.isLineTerminator()) {\n    node.argument = null;\n  } else {\n    node.argument = this.parseExpression();\n    this.semicolon();\n  }\n\n  return this.finishNode(node, \"ReturnStatement\");\n};\n\npp$1.parseSwitchStatement = function (node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.state.labels.push(switchLabel);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur = void 0;\n  for (var sawDefault; !this.match(types.braceR);) {\n    if (this.match(types._case) || this.match(types._default)) {\n      var isCase = this.match(types._case);\n      if (cur) this.finishNode(cur, \"SwitchCase\");\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) this.raise(this.state.lastTokStart, \"Multiple default clauses\");\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(types.colon);\n    } else {\n      if (cur) {\n        cur.consequent.push(this.parseStatement(true));\n      } else {\n        this.unexpected();\n      }\n    }\n  }\n  if (cur) this.finishNode(cur, \"SwitchCase\");\n  this.next(); // Closing brace\n  this.state.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\");\n};\n\npp$1.parseThrowStatement = function (node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start))) this.raise(this.state.lastTokEnd, \"Illegal newline after throw\");\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\");\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function (node) {\n  this.next();\n\n  node.block = this.parseBlock();\n  node.handler = null;\n\n  if (this.match(types._catch)) {\n    var clause = this.startNode();\n    this.next();\n\n    this.expect(types.parenL);\n    clause.param = this.parseBindingAtom();\n    this.checkLVal(clause.param, true, Object.create(null), \"catch clause\");\n    this.expect(types.parenR);\n\n    clause.body = this.parseBlock();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n\n  node.guardedHandlers = empty;\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n  if (!node.handler && !node.finalizer) {\n    this.raise(node.start, \"Missing catch or finally clause\");\n  }\n\n  return this.finishNode(node, \"TryStatement\");\n};\n\npp$1.parseVarStatement = function (node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\");\n};\n\npp$1.parseWhileStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.state.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.state.labels.pop();\n  return this.finishNode(node, \"WhileStatement\");\n};\n\npp$1.parseWithStatement = function (node) {\n  if (this.state.strict) this.raise(this.state.start, \"'with' in strict mode\");\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\");\n};\n\npp$1.parseEmptyStatement = function (node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\");\n};\n\npp$1.parseLabeledStatement = function (node, maybeName, expr) {\n  for (var _iterator = this.state.labels, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _label = _ref;\n\n    if (_label.name === maybeName) {\n      this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    }\n  }\n\n  var kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n  for (var i = this.state.labels.length - 1; i >= 0; i--) {\n    var label = this.state.labels[i];\n    if (label.statementStart === node.start) {\n      label.statementStart = this.state.start;\n      label.kind = kind;\n    } else {\n      break;\n    }\n  }\n\n  this.state.labels.push({ name: maybeName, kind: kind, statementStart: this.state.start });\n  node.body = this.parseStatement(true);\n  this.state.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\");\n};\n\npp$1.parseExpressionStatement = function (node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\");\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function (allowDirectives) {\n  var node = this.startNode();\n  this.expect(types.braceL);\n  this.parseBlockBody(node, allowDirectives, false, types.braceR);\n  return this.finishNode(node, \"BlockStatement\");\n};\n\n// TODO\n\npp$1.parseBlockBody = function (node, allowDirectives, topLevel, end) {\n  node.body = [];\n  node.directives = [];\n\n  var parsedNonDirective = false;\n  var oldStrict = void 0;\n  var octalPosition = void 0;\n\n  while (!this.eat(end)) {\n    if (!parsedNonDirective && this.state.containsOctal && !octalPosition) {\n      octalPosition = this.state.octalPosition;\n    }\n\n    var stmt = this.parseStatement(true, topLevel);\n\n    if (allowDirectives && !parsedNonDirective && stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized) {\n      var directive = this.stmtToDirective(stmt);\n      node.directives.push(directive);\n\n      if (oldStrict === undefined && directive.value.value === \"use strict\") {\n        oldStrict = this.state.strict;\n        this.setStrict(true);\n\n        if (octalPosition) {\n          this.raise(octalPosition, \"Octal literal in strict mode\");\n        }\n      }\n\n      continue;\n    }\n\n    parsedNonDirective = true;\n    node.body.push(stmt);\n  }\n\n  if (oldStrict === false) {\n    this.setStrict(false);\n  }\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function (node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.match(types.semi) ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.match(types.parenR) ? null : this.parseExpression();\n  this.expect(types.parenR);\n  node.body = this.parseStatement(false);\n  this.state.labels.pop();\n  return this.finishNode(node, \"ForStatement\");\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function (node, init, forAwait) {\n  var type = void 0;\n  if (forAwait) {\n    this.eatContextual(\"of\");\n    type = \"ForAwaitStatement\";\n  } else {\n    type = this.match(types._in) ? \"ForInStatement\" : \"ForOfStatement\";\n    this.next();\n  }\n  node.left = init;\n  node.right = this.parseExpression();\n  this.expect(types.parenR);\n  node.body = this.parseStatement(false);\n  this.state.labels.pop();\n  return this.finishNode(node, type);\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function (node, isFor, kind) {\n  node.declarations = [];\n  node.kind = kind.keyword;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarHead(decl);\n    if (this.eat(types.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (kind === types._const && !(this.match(types._in) || this.isContextual(\"of\"))) {\n      this.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n      this.raise(this.state.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(types.comma)) break;\n  }\n  return node;\n};\n\npp$1.parseVarHead = function (decl) {\n  decl.id = this.parseBindingAtom();\n  this.checkLVal(decl.id, true, undefined, \"variable declaration\");\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function (node, isStatement, allowExpressionBody, isAsync, optionalId) {\n  var oldInMethod = this.state.inMethod;\n  this.state.inMethod = false;\n\n  this.initFunction(node, isAsync);\n\n  if (this.match(types.star)) {\n    if (node.async && !this.hasPlugin(\"asyncGenerators\")) {\n      this.unexpected();\n    } else {\n      node.generator = true;\n      this.next();\n    }\n  }\n\n  if (isStatement && !optionalId && !this.match(types.name) && !this.match(types._yield)) {\n    this.unexpected();\n  }\n\n  if (this.match(types.name) || this.match(types._yield)) {\n    node.id = this.parseBindingIdentifier();\n  }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n\n  this.state.inMethod = oldInMethod;\n\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n};\n\npp$1.parseFunctionParams = function (node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR);\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function (node, isStatement, optionalId) {\n  this.next();\n  this.parseClassId(node, isStatement, optionalId);\n  this.parseClassSuper(node);\n  this.parseClassBody(node);\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n};\n\npp$1.isClassProperty = function () {\n  return this.match(types.eq) || this.isLineTerminator();\n};\n\npp$1.isClassMutatorStarter = function () {\n  return false;\n};\n\npp$1.parseClassBody = function (node) {\n  // class bodies are implicitly strict\n  var oldStrict = this.state.strict;\n  this.state.strict = true;\n\n  var hadConstructorCall = false;\n  var hadConstructor = false;\n  var decorators = [];\n  var classBody = this.startNode();\n\n  classBody.body = [];\n\n  this.expect(types.braceL);\n\n  while (!this.eat(types.braceR)) {\n    if (this.eat(types.semi)) {\n      continue;\n    }\n\n    if (this.match(types.at)) {\n      decorators.push(this.parseDecorator());\n      continue;\n    }\n\n    var method = this.startNode();\n\n    // steal the decorators if there are any\n    if (decorators.length) {\n      method.decorators = decorators;\n      decorators = [];\n    }\n\n    var isConstructorCall = false;\n    var isMaybeStatic = this.match(types.name) && this.state.value === \"static\";\n    var isGenerator = this.eat(types.star);\n    var isGetSet = false;\n    var isAsync = false;\n\n    this.parsePropertyName(method);\n\n    method.static = isMaybeStatic && !this.match(types.parenL);\n    if (method.static) {\n      isGenerator = this.eat(types.star);\n      this.parsePropertyName(method);\n    }\n\n    if (!isGenerator) {\n      if (this.isClassProperty()) {\n        classBody.body.push(this.parseClassProperty(method));\n        continue;\n      }\n\n      if (method.key.type === \"Identifier\" && !method.computed && this.hasPlugin(\"classConstructorCall\") && method.key.name === \"call\" && this.match(types.name) && this.state.value === \"constructor\") {\n        isConstructorCall = true;\n        this.parsePropertyName(method);\n      }\n    }\n\n    var isAsyncMethod = !this.match(types.parenL) && !method.computed && method.key.type === \"Identifier\" && method.key.name === \"async\";\n    if (isAsyncMethod) {\n      if (this.hasPlugin(\"asyncGenerators\") && this.eat(types.star)) isGenerator = true;\n      isAsync = true;\n      this.parsePropertyName(method);\n    }\n\n    method.kind = \"method\";\n\n    if (!method.computed) {\n      var key = method.key;\n\n      // handle get/set methods\n      // eg. class Foo { get bar() {} set bar() {} }\n\n      if (!isAsync && !isGenerator && !this.isClassMutatorStarter() && key.type === \"Identifier\" && !this.match(types.parenL) && (key.name === \"get\" || key.name === \"set\")) {\n        isGetSet = true;\n        method.kind = key.name;\n        key = this.parsePropertyName(method);\n      }\n\n      // disallow invalid constructors\n      var isConstructor = !isConstructorCall && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" || key.type === \"StringLiteral\" && key.value === \"constructor\");\n      if (isConstructor) {\n        if (hadConstructor) this.raise(key.start, \"Duplicate constructor in the same class\");\n        if (isGetSet) this.raise(key.start, \"Constructor can't have get/set modifier\");\n        if (isGenerator) this.raise(key.start, \"Constructor can't be a generator\");\n        if (isAsync) this.raise(key.start, \"Constructor can't be an async function\");\n        method.kind = \"constructor\";\n        hadConstructor = true;\n      }\n\n      // disallow static prototype method\n      var isStaticPrototype = method.static && (key.type === \"Identifier\" && key.name === \"prototype\" || key.type === \"StringLiteral\" && key.value === \"prototype\");\n      if (isStaticPrototype) {\n        this.raise(key.start, \"Classes may not have static property named prototype\");\n      }\n    }\n\n    // convert constructor to a constructor call\n    if (isConstructorCall) {\n      if (hadConstructorCall) this.raise(method.start, \"Duplicate constructor call in the same class\");\n      method.kind = \"constructorCall\";\n      hadConstructorCall = true;\n    }\n\n    // disallow decorators on class constructors\n    if ((method.kind === \"constructor\" || method.kind === \"constructorCall\") && method.decorators) {\n      this.raise(method.start, \"You can't attach decorators to a class constructor\");\n    }\n\n    this.parseClassMethod(classBody, method, isGenerator, isAsync);\n\n    // get methods aren't allowed to have any parameters\n    // set methods must have exactly 1 parameter\n    if (isGetSet) {\n      var paramCount = method.kind === \"get\" ? 0 : 1;\n      if (method.params.length !== paramCount) {\n        var start = method.start;\n        if (method.kind === \"get\") {\n          this.raise(start, \"getter should have no params\");\n        } else {\n          this.raise(start, \"setter should have exactly one param\");\n        }\n      }\n    }\n  }\n\n  if (decorators.length) {\n    this.raise(this.state.start, \"You have trailing decorators with no method\");\n  }\n\n  node.body = this.finishNode(classBody, \"ClassBody\");\n\n  this.state.strict = oldStrict;\n};\n\npp$1.parseClassProperty = function (node) {\n  if (this.match(types.eq)) {\n    if (!this.hasPlugin(\"classProperties\")) this.unexpected();\n    this.next();\n    node.value = this.parseMaybeAssign();\n  } else {\n    node.value = null;\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ClassProperty\");\n};\n\npp$1.parseClassMethod = function (classBody, method, isGenerator, isAsync) {\n  this.parseMethod(method, isGenerator, isAsync);\n  classBody.body.push(this.finishNode(method, \"ClassMethod\"));\n};\n\npp$1.parseClassId = function (node, isStatement, optionalId) {\n  if (this.match(types.name)) {\n    node.id = this.parseIdentifier();\n  } else {\n    if (optionalId || !isStatement) {\n      node.id = null;\n    } else {\n      this.unexpected();\n    }\n  }\n};\n\npp$1.parseClassSuper = function (node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function (node) {\n  this.next();\n  // export * from '...'\n  if (this.match(types.star)) {\n    var specifier = this.startNode();\n    this.next();\n    if (this.hasPlugin(\"exportExtensions\") && this.eatContextual(\"as\")) {\n      specifier.exported = this.parseIdentifier();\n      node.specifiers = [this.finishNode(specifier, \"ExportNamespaceSpecifier\")];\n      this.parseExportSpecifiersMaybe(node);\n      this.parseExportFrom(node, true);\n    } else {\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n  } else if (this.hasPlugin(\"exportExtensions\") && this.isExportDefaultSpecifier()) {\n    var _specifier = this.startNode();\n    _specifier.exported = this.parseIdentifier(true);\n    node.specifiers = [this.finishNode(_specifier, \"ExportDefaultSpecifier\")];\n    if (this.match(types.comma) && this.lookahead().type === types.star) {\n      this.expect(types.comma);\n      var _specifier2 = this.startNode();\n      this.expect(types.star);\n      this.expectContextual(\"as\");\n      _specifier2.exported = this.parseIdentifier();\n      node.specifiers.push(this.finishNode(_specifier2, \"ExportNamespaceSpecifier\"));\n    } else {\n      this.parseExportSpecifiersMaybe(node);\n    }\n    this.parseExportFrom(node, true);\n  } else if (this.eat(types._default)) {\n    // export default ...\n    var expr = this.startNode();\n    var needsSemi = false;\n    if (this.eat(types._function)) {\n      expr = this.parseFunction(expr, true, false, false, true);\n    } else if (this.match(types._class)) {\n      expr = this.parseClass(expr, true, true);\n    } else {\n      needsSemi = true;\n      expr = this.parseMaybeAssign();\n    }\n    node.declaration = expr;\n    if (needsSemi) this.semicolon();\n    this.checkExport(node, true, true);\n    return this.finishNode(node, \"ExportDefaultDeclaration\");\n  } else if (this.shouldParseExportDeclaration()) {\n    node.specifiers = [];\n    node.source = null;\n    node.declaration = this.parseExportDeclaration(node);\n  } else {\n    // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers();\n    this.parseExportFrom(node);\n  }\n  this.checkExport(node, true);\n  return this.finishNode(node, \"ExportNamedDeclaration\");\n};\n\npp$1.parseExportDeclaration = function () {\n  return this.parseStatement(true);\n};\n\npp$1.isExportDefaultSpecifier = function () {\n  if (this.match(types.name)) {\n    return this.state.value !== \"type\" && this.state.value !== \"async\" && this.state.value !== \"interface\";\n  }\n\n  if (!this.match(types._default)) {\n    return false;\n  }\n\n  var lookahead = this.lookahead();\n  return lookahead.type === types.comma || lookahead.type === types.name && lookahead.value === \"from\";\n};\n\npp$1.parseExportSpecifiersMaybe = function (node) {\n  if (this.eat(types.comma)) {\n    node.specifiers = node.specifiers.concat(this.parseExportSpecifiers());\n  }\n};\n\npp$1.parseExportFrom = function (node, expect) {\n  if (this.eatContextual(\"from\")) {\n    node.source = this.match(types.string) ? this.parseExprAtom() : this.unexpected();\n    this.checkExport(node);\n  } else {\n    if (expect) {\n      this.unexpected();\n    } else {\n      node.source = null;\n    }\n  }\n\n  this.semicolon();\n};\n\npp$1.shouldParseExportDeclaration = function () {\n  return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"let\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isContextual(\"async\");\n};\n\npp$1.checkExport = function (node, checkNames, isDefault) {\n  if (checkNames) {\n    // Check for duplicate exports\n    if (isDefault) {\n      // Default exports\n      this.checkDuplicateExports(node, \"default\");\n    } else if (node.specifiers && node.specifiers.length) {\n      // Named exports\n      for (var _iterator2 = node.specifiers, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var specifier = _ref2;\n\n        this.checkDuplicateExports(specifier, specifier.exported.name);\n      }\n    } else if (node.declaration) {\n      // Exported declarations\n      if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n        this.checkDuplicateExports(node, node.declaration.id.name);\n      } else if (node.declaration.type === \"VariableDeclaration\") {\n        for (var _iterator3 = node.declaration.declarations, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n          var _ref3;\n\n          if (_isArray3) {\n            if (_i3 >= _iterator3.length) break;\n            _ref3 = _iterator3[_i3++];\n          } else {\n            _i3 = _iterator3.next();\n            if (_i3.done) break;\n            _ref3 = _i3.value;\n          }\n\n          var declaration = _ref3;\n\n          this.checkDeclaration(declaration.id);\n        }\n      }\n    }\n  }\n\n  if (this.state.decorators.length) {\n    var isClass = node.declaration && (node.declaration.type === \"ClassDeclaration\" || node.declaration.type === \"ClassExpression\");\n    if (!node.declaration || !isClass) {\n      this.raise(node.start, \"You can only use decorators on an export when exporting a class\");\n    }\n    this.takeDecorators(node.declaration);\n  }\n};\n\npp$1.checkDeclaration = function (node) {\n  if (node.type === \"ObjectPattern\") {\n    for (var _iterator4 = node.properties, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var prop = _ref4;\n\n      this.checkDeclaration(prop);\n    }\n  } else if (node.type === \"ArrayPattern\") {\n    for (var _iterator5 = node.elements, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray5) {\n        if (_i5 >= _iterator5.length) break;\n        _ref5 = _iterator5[_i5++];\n      } else {\n        _i5 = _iterator5.next();\n        if (_i5.done) break;\n        _ref5 = _i5.value;\n      }\n\n      var elem = _ref5;\n\n      if (elem) {\n        this.checkDeclaration(elem);\n      }\n    }\n  } else if (node.type === \"ObjectProperty\") {\n    this.checkDeclaration(node.value);\n  } else if (node.type === \"RestElement\" || node.type === \"RestProperty\") {\n    this.checkDeclaration(node.argument);\n  } else if (node.type === \"Identifier\") {\n    this.checkDuplicateExports(node, node.name);\n  }\n};\n\npp$1.checkDuplicateExports = function (node, name) {\n  if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n    this.raiseDuplicateExportError(node, name);\n  }\n  this.state.exportedIdentifiers.push(name);\n};\n\npp$1.raiseDuplicateExportError = function (node, name) {\n  this.raise(node.start, name === \"default\" ? \"Only one default export allowed per module.\" : \"`\" + name + \"` has already been exported. Exported identifiers must be unique.\");\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function () {\n  var nodes = [];\n  var first = true;\n  var needsFrom = void 0;\n\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n\n  while (!this.eat(types.braceR)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n      if (this.eat(types.braceR)) break;\n    }\n\n    var isDefault = this.match(types._default);\n    if (isDefault && !needsFrom) needsFrom = true;\n\n    var node = this.startNode();\n    node.local = this.parseIdentifier(isDefault);\n    node.exported = this.eatContextual(\"as\") ? this.parseIdentifier(true) : node.local.__clone();\n    nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n  }\n\n  // https://github.com/ember-cli/ember-cli/pull/3739\n  if (needsFrom && !this.isContextual(\"from\")) {\n    this.unexpected();\n  }\n\n  return nodes;\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function (node) {\n  this.next();\n\n  // import '...'\n  if (this.match(types.string)) {\n    node.specifiers = [];\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = [];\n    this.parseImportSpecifiers(node);\n    this.expectContextual(\"from\");\n    node.source = this.match(types.string) ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\");\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function (node) {\n  var first = true;\n  if (this.match(types.name)) {\n    // import defaultObj, { x, y as z } from '...'\n    var startPos = this.state.start;\n    var startLoc = this.state.startLoc;\n    node.specifiers.push(this.parseImportSpecifierDefault(this.parseIdentifier(), startPos, startLoc));\n    if (!this.eat(types.comma)) return;\n  }\n\n  if (this.match(types.star)) {\n    var specifier = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, true, undefined, \"import namespace specifier\");\n    node.specifiers.push(this.finishNode(specifier, \"ImportNamespaceSpecifier\"));\n    return;\n  }\n\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n      if (this.eat(types.braceR)) break;\n    }\n\n    this.parseImportSpecifier(node);\n  }\n};\n\npp$1.parseImportSpecifier = function (node) {\n  var specifier = this.startNode();\n  specifier.imported = this.parseIdentifier(true);\n  specifier.local = this.eatContextual(\"as\") ? this.parseIdentifier() : specifier.imported.__clone();\n  this.checkLVal(specifier.local, true, undefined, \"import specifier\");\n  node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n};\n\npp$1.parseImportSpecifierDefault = function (id, startPos, startLoc) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.local = id;\n  this.checkLVal(node.local, true, undefined, \"default import specifier\");\n  return this.finishNode(node, \"ImportDefaultSpecifier\");\n};\n\n/* eslint indent: 0 */\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function (node, isBinding, contextDescription) {\n  if (node) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (var _iterator = node.properties, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var prop = _ref;\n\n          if (prop.type === \"ObjectMethod\") {\n            if (prop.kind === \"get\" || prop.kind === \"set\") {\n              this.raise(prop.key.start, \"Object pattern can't contain getter or setter\");\n            } else {\n              this.raise(prop.key.start, \"Object pattern can't contain methods\");\n            }\n          } else {\n            this.toAssignable(prop, isBinding, \"object destructuring pattern\");\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isBinding, contextDescription);\n        break;\n\n      case \"SpreadProperty\":\n        node.type = \"RestProperty\";\n        break;\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, isBinding, contextDescription);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator === \"=\") {\n          node.type = \"AssignmentPattern\";\n          delete node.operator;\n        } else {\n          this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\");\n        }\n        break;\n\n      case \"MemberExpression\":\n        if (!isBinding) break;\n\n      default:\n        {\n          var message = \"Invalid left-hand side\" + (contextDescription ? \" in \" + contextDescription : /* istanbul ignore next */\"expression\");\n          this.raise(node.start, message);\n        }\n    }\n  }\n  return node;\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function (exprList, isBinding, contextDescription) {\n  var end = exprList.length;\n  if (end) {\n    var last = exprList[end - 1];\n    if (last && last.type === \"RestElement\") {\n      --end;\n    } else if (last && last.type === \"SpreadElement\") {\n      last.type = \"RestElement\";\n      var arg = last.argument;\n      this.toAssignable(arg, isBinding, contextDescription);\n      if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\") {\n        this.unexpected(arg.start);\n      }\n      --end;\n    }\n  }\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) this.toAssignable(elt, isBinding, contextDescription);\n  }\n  return exprList;\n};\n\n// Convert list of expression atoms to a list of\n\npp$2.toReferencedList = function (exprList) {\n  return exprList;\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function (refShorthandDefaultPos) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refShorthandDefaultPos);\n  return this.finishNode(node, \"SpreadElement\");\n};\n\npp$2.parseRest = function () {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseBindingIdentifier();\n  return this.finishNode(node, \"RestElement\");\n};\n\npp$2.shouldAllowYieldIdentifier = function () {\n  return this.match(types._yield) && !this.state.strict && !this.state.inGenerator;\n};\n\npp$2.parseBindingIdentifier = function () {\n  return this.parseIdentifier(this.shouldAllowYieldIdentifier());\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function () {\n  switch (this.state.type) {\n    case types._yield:\n      if (this.state.strict || this.state.inGenerator) this.unexpected();\n    // fall-through\n    case types.name:\n      return this.parseIdentifier(true);\n\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true);\n      return this.finishNode(node, \"ArrayPattern\");\n\n    case types.braceL:\n      return this.parseObj(true);\n\n    default:\n      this.unexpected();\n  }\n};\n\npp$2.parseBindingList = function (close, allowEmpty) {\n  var elts = [];\n  var first = true;\n  while (!this.eat(close)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n    }\n    if (allowEmpty && this.match(types.comma)) {\n      elts.push(null);\n    } else if (this.eat(close)) {\n      break;\n    } else if (this.match(types.ellipsis)) {\n      elts.push(this.parseAssignableListItemTypes(this.parseRest()));\n      this.expect(close);\n      break;\n    } else {\n      var decorators = [];\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n      var left = this.parseMaybeDefault();\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n      this.parseAssignableListItemTypes(left);\n      elts.push(this.parseMaybeDefault(left.start, left.loc.start, left));\n    }\n  }\n  return elts;\n};\n\npp$2.parseAssignableListItemTypes = function (param) {\n  return param;\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function (startPos, startLoc, left) {\n  startLoc = startLoc || this.state.startLoc;\n  startPos = startPos || this.state.start;\n  left = left || this.parseBindingAtom();\n  if (!this.eat(types.eq)) return left;\n\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\");\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n\npp$2.checkLVal = function (expr, isBinding, checkClashes, contextDescription) {\n  switch (expr.type) {\n    case \"Identifier\":\n      this.checkReservedWord(expr.name, expr.start, false, true);\n\n      if (checkClashes) {\n        // we need to prefix this with an underscore for the cases where we have a key of\n        // `__proto__`. there's a bug in old V8 where the following wouldn't work:\n        //\n        //   > var obj = Object.create(null);\n        //   undefined\n        //   > obj.__proto__\n        //   null\n        //   > obj.__proto__ = true;\n        //   true\n        //   > obj.__proto__\n        //   null\n        var key = \"_\" + expr.name;\n\n        if (checkClashes[key]) {\n          this.raise(expr.start, \"Argument name clash in strict mode\");\n        } else {\n          checkClashes[key] = true;\n        }\n      }\n      break;\n\n    case \"MemberExpression\":\n      if (isBinding) this.raise(expr.start, (isBinding ? \"Binding\" : \"Assigning to\") + \" member expression\");\n      break;\n\n    case \"ObjectPattern\":\n      for (var _iterator2 = expr.properties, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var prop = _ref2;\n\n        if (prop.type === \"ObjectProperty\") prop = prop.value;\n        this.checkLVal(prop, isBinding, checkClashes, \"object destructuring pattern\");\n      }\n      break;\n\n    case \"ArrayPattern\":\n      for (var _iterator3 = expr.elements, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var elem = _ref3;\n\n        if (elem) this.checkLVal(elem, isBinding, checkClashes, \"array destructuring pattern\");\n      }\n      break;\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, isBinding, checkClashes, \"assignment pattern\");\n      break;\n\n    case \"RestProperty\":\n      this.checkLVal(expr.argument, isBinding, checkClashes, \"rest property\");\n      break;\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, isBinding, checkClashes, \"rest element\");\n      break;\n\n    default:\n      {\n        var message = (isBinding ? /* istanbul ignore next */\"Binding invalid\" : \"Invalid\") + \" left-hand side\" + (contextDescription ? \" in \" + contextDescription : /* istanbul ignore next */\"expression\");\n        this.raise(expr.start, message);\n      }\n  }\n};\n\n/* eslint indent: 0 */\n/* eslint max-len: 0 */\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function (prop, propHash) {\n  if (prop.computed) return;\n\n  var key = prop.key;\n  var name = void 0;\n  switch (key.type) {\n    case \"Identifier\":\n      name = key.name;\n      break;\n\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n      name = String(key.value);\n      break;\n\n    // istanbul ignore next: non-computed property keys are always one of the above\n    default:\n      return;\n  }\n\n  if (name === \"__proto__\" && !prop.kind) {\n    if (propHash.proto) this.raise(key.start, \"Redefinition of __proto__ property\");\n    propHash.proto = true;\n  }\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function (s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function (noIn, refShorthandDefaultPos) {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refShorthandDefaultPos);\n  if (this.match(types.comma)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) {\n      node.expressions.push(this.parseMaybeAssign(noIn, refShorthandDefaultPos));\n    }\n    this.toReferencedList(node.expressions);\n    return this.finishNode(node, \"SequenceExpression\");\n  }\n  return expr;\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function (noIn, refShorthandDefaultPos, afterLeftParse, refNeedsArrowPos) {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n\n  if (this.match(types._yield) && this.state.inGenerator) {\n    var _left = this.parseYield();\n    if (afterLeftParse) _left = afterLeftParse.call(this, _left, startPos, startLoc);\n    return _left;\n  }\n\n  var failOnShorthandAssign = void 0;\n  if (refShorthandDefaultPos) {\n    failOnShorthandAssign = false;\n  } else {\n    refShorthandDefaultPos = { start: 0 };\n    failOnShorthandAssign = true;\n  }\n\n  if (this.match(types.parenL) || this.match(types.name)) {\n    this.state.potentialArrowAt = this.state.start;\n  }\n\n  var left = this.parseMaybeConditional(noIn, refShorthandDefaultPos, refNeedsArrowPos);\n  if (afterLeftParse) left = afterLeftParse.call(this, left, startPos, startLoc);\n  if (this.state.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.state.value;\n    node.left = this.match(types.eq) ? this.toAssignable(left, undefined, \"assignment expression\") : left;\n    refShorthandDefaultPos.start = 0; // reset because shorthand default was used correctly\n\n    this.checkLVal(left, undefined, undefined, \"assignment expression\");\n\n    if (left.extra && left.extra.parenthesized) {\n      var errorMsg = void 0;\n      if (left.type === \"ObjectPattern\") {\n        errorMsg = \"`({a}) = 0` use `({a} = 0)`\";\n      } else if (left.type === \"ArrayPattern\") {\n        errorMsg = \"`([a]) = 0` use `([a] = 0)`\";\n      }\n      if (errorMsg) {\n        this.raise(left.start, \"You're trying to assign to a parenthesized expression, eg. instead of \" + errorMsg);\n      }\n    }\n\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\");\n  } else if (failOnShorthandAssign && refShorthandDefaultPos.start) {\n    this.unexpected(refShorthandDefaultPos.start);\n  }\n\n  return left;\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function (noIn, refShorthandDefaultPos, refNeedsArrowPos) {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var expr = this.parseExprOps(noIn, refShorthandDefaultPos);\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) return expr;\n\n  return this.parseConditional(expr, noIn, startPos, startLoc, refNeedsArrowPos);\n};\n\npp$3.parseConditional = function (expr, noIn, startPos, startLoc) {\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n  return expr;\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function (noIn, refShorthandDefaultPos) {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var expr = this.parseMaybeUnary(refShorthandDefaultPos);\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) {\n    return expr;\n  } else {\n    return this.parseExprOp(expr, startPos, startLoc, -1, noIn);\n  }\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.state.type.binop;\n  if (prec != null && (!noIn || !this.match(types._in))) {\n    if (prec > minPrec) {\n      var node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.left = left;\n      node.operator = this.state.value;\n\n      if (node.operator === \"**\" && left.type === \"UnaryExpression\" && left.extra && !left.extra.parenthesizedArgument && !left.extra.parenthesized) {\n        this.raise(left.argument.start, \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\");\n      }\n\n      var op = this.state.type;\n      this.next();\n\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      node.right = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec, noIn);\n\n      this.finishNode(node, op === types.logicalOR || op === types.logicalAND ? \"LogicalExpression\" : \"BinaryExpression\");\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn);\n    }\n  }\n  return left;\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function (refShorthandDefaultPos) {\n  if (this.state.type.prefix) {\n    var node = this.startNode();\n    var update = this.match(types.incDec);\n    node.operator = this.state.value;\n    node.prefix = true;\n    this.next();\n\n    var argType = this.state.type;\n    node.argument = this.parseMaybeUnary();\n\n    this.addExtra(node, \"parenthesizedArgument\", argType === types.parenL && (!node.argument.extra || !node.argument.extra.parenthesized));\n\n    if (refShorthandDefaultPos && refShorthandDefaultPos.start) {\n      this.unexpected(refShorthandDefaultPos.start);\n    }\n\n    if (update) {\n      this.checkLVal(node.argument, undefined, undefined, \"prefix operation\");\n    } else if (this.state.strict && node.operator === \"delete\" && node.argument.type === \"Identifier\") {\n      this.raise(node.start, \"Deleting local variable in strict mode\");\n    }\n\n    return this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  }\n\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var expr = this.parseExprSubscripts(refShorthandDefaultPos);\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) return expr;\n  while (this.state.type.postfix && !this.canInsertSemicolon()) {\n    var _node = this.startNodeAt(startPos, startLoc);\n    _node.operator = this.state.value;\n    _node.prefix = false;\n    _node.argument = expr;\n    this.checkLVal(expr, undefined, undefined, \"postfix operation\");\n    this.next();\n    expr = this.finishNode(_node, \"UpdateExpression\");\n  }\n  return expr;\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function (refShorthandDefaultPos) {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var potentialArrowAt = this.state.potentialArrowAt;\n  var expr = this.parseExprAtom(refShorthandDefaultPos);\n\n  if (expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt) {\n    return expr;\n  }\n\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) {\n    return expr;\n  }\n\n  return this.parseSubscripts(expr, startPos, startLoc);\n};\n\npp$3.parseSubscripts = function (base, startPos, startLoc, noCalls) {\n  for (;;) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.callee = this.parseNoCallExpr();\n      return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n    } else if (this.eat(types.dot)) {\n      var _node2 = this.startNodeAt(startPos, startLoc);\n      _node2.object = base;\n      _node2.property = this.parseIdentifier(true);\n      _node2.computed = false;\n      base = this.finishNode(_node2, \"MemberExpression\");\n    } else if (this.eat(types.bracketL)) {\n      var _node3 = this.startNodeAt(startPos, startLoc);\n      _node3.object = base;\n      _node3.property = this.parseExpression();\n      _node3.computed = true;\n      this.expect(types.bracketR);\n      base = this.finishNode(_node3, \"MemberExpression\");\n    } else if (!noCalls && this.match(types.parenL)) {\n      var possibleAsync = this.state.potentialArrowAt === base.start && base.type === \"Identifier\" && base.name === \"async\" && !this.canInsertSemicolon();\n      this.next();\n\n      var _node4 = this.startNodeAt(startPos, startLoc);\n      _node4.callee = base;\n      _node4.arguments = this.parseCallExpressionArguments(types.parenR, possibleAsync);\n      if (_node4.callee.type === \"Import\" && _node4.arguments.length !== 1) {\n        this.raise(_node4.start, \"import() requires exactly one argument\");\n      }\n      base = this.finishNode(_node4, \"CallExpression\");\n\n      if (possibleAsync && this.shouldParseAsyncArrow()) {\n        return this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), _node4);\n      } else {\n        this.toReferencedList(_node4.arguments);\n      }\n    } else if (this.match(types.backQuote)) {\n      var _node5 = this.startNodeAt(startPos, startLoc);\n      _node5.tag = base;\n      _node5.quasi = this.parseTemplate();\n      base = this.finishNode(_node5, \"TaggedTemplateExpression\");\n    } else {\n      return base;\n    }\n  }\n};\n\npp$3.parseCallExpressionArguments = function (close, possibleAsyncArrow) {\n  var elts = [];\n  var innerParenStart = void 0;\n  var first = true;\n\n  while (!this.eat(close)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n      if (this.eat(close)) break;\n    }\n\n    // we need to make sure that if this is an async arrow functions, that we don't allow inner parens inside the params\n    if (this.match(types.parenL) && !innerParenStart) {\n      innerParenStart = this.state.start;\n    }\n\n    elts.push(this.parseExprListItem(undefined, possibleAsyncArrow ? { start: 0 } : undefined));\n  }\n\n  // we found an async arrow function so let's not allow any inner parens\n  if (possibleAsyncArrow && innerParenStart && this.shouldParseAsyncArrow()) {\n    this.unexpected();\n  }\n\n  return elts;\n};\n\npp$3.shouldParseAsyncArrow = function () {\n  return this.match(types.arrow);\n};\n\npp$3.parseAsyncArrowFromCallExpression = function (node, call) {\n  this.expect(types.arrow);\n  return this.parseArrowExpression(node, call.arguments, true);\n};\n\n// Parse a no-call expression (like argument of `new` or `::` operators).\n\npp$3.parseNoCallExpr = function () {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function (refShorthandDefaultPos) {\n  var canBeArrow = this.state.potentialArrowAt === this.state.start;\n  var node = void 0;\n\n  switch (this.state.type) {\n    case types._super:\n      if (!this.state.inMethod && !this.options.allowSuperOutsideMethod) {\n        this.raise(this.state.start, \"'super' outside of function or class\");\n      }\n\n      node = this.startNode();\n      this.next();\n      if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n        this.unexpected();\n      }\n      if (this.match(types.parenL) && this.state.inMethod !== \"constructor\" && !this.options.allowSuperOutsideMethod) {\n        this.raise(node.start, \"super() outside of class constructor\");\n      }\n      return this.finishNode(node, \"Super\");\n\n    case types._import:\n      if (!this.hasPlugin(\"dynamicImport\")) this.unexpected();\n\n      node = this.startNode();\n      this.next();\n      if (!this.match(types.parenL)) {\n        this.unexpected(null, types.parenL);\n      }\n      return this.finishNode(node, \"Import\");\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\");\n\n    case types._yield:\n      if (this.state.inGenerator) this.unexpected();\n\n    case types.name:\n      node = this.startNode();\n      var allowAwait = this.state.value === \"await\" && this.state.inAsync;\n      var allowYield = this.shouldAllowYieldIdentifier();\n      var id = this.parseIdentifier(allowAwait || allowYield);\n\n      if (id.name === \"await\") {\n        if (this.state.inAsync || this.inModule) {\n          return this.parseAwait(node);\n        }\n      } else if (id.name === \"async\" && this.match(types._function) && !this.canInsertSemicolon()) {\n        this.next();\n        return this.parseFunction(node, false, false, true);\n      } else if (canBeArrow && id.name === \"async\" && this.match(types.name)) {\n        var params = [this.parseIdentifier()];\n        this.expect(types.arrow);\n        // let foo = bar => {};\n        return this.parseArrowExpression(node, params, true);\n      }\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        return this.parseArrowExpression(node, [id]);\n      }\n\n      return id;\n\n    case types._do:\n      if (this.hasPlugin(\"doExpressions\")) {\n        var _node6 = this.startNode();\n        this.next();\n        var oldInFunction = this.state.inFunction;\n        var oldLabels = this.state.labels;\n        this.state.labels = [];\n        this.state.inFunction = false;\n        _node6.body = this.parseBlock(false, true);\n        this.state.inFunction = oldInFunction;\n        this.state.labels = oldLabels;\n        return this.finishNode(_node6, \"DoExpression\");\n      }\n\n    case types.regexp:\n      var value = this.state.value;\n      node = this.parseLiteral(value.value, \"RegExpLiteral\");\n      node.pattern = value.pattern;\n      node.flags = value.flags;\n      return node;\n\n    case types.num:\n      return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n    case types.string:\n      return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n    case types._null:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"NullLiteral\");\n\n    case types._true:case types._false:\n      node = this.startNode();\n      node.value = this.match(types._true);\n      this.next();\n      return this.finishNode(node, \"BooleanLiteral\");\n\n    case types.parenL:\n      return this.parseParenAndDistinguishExpression(null, null, canBeArrow);\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, refShorthandDefaultPos);\n      this.toReferencedList(node.elements);\n      return this.finishNode(node, \"ArrayExpression\");\n\n    case types.braceL:\n      return this.parseObj(false, refShorthandDefaultPos);\n\n    case types._function:\n      return this.parseFunctionExpression();\n\n    case types.at:\n      this.parseDecorators();\n\n    case types._class:\n      node = this.startNode();\n      this.takeDecorators(node);\n      return this.parseClass(node, false);\n\n    case types._new:\n      return this.parseNew();\n\n    case types.backQuote:\n      return this.parseTemplate();\n\n    case types.doubleColon:\n      node = this.startNode();\n      this.next();\n      node.object = null;\n      var callee = node.callee = this.parseNoCallExpr();\n      if (callee.type === \"MemberExpression\") {\n        return this.finishNode(node, \"BindExpression\");\n      } else {\n        this.raise(callee.start, \"Binding should be performed on object property.\");\n      }\n\n    default:\n      this.unexpected();\n  }\n};\n\npp$3.parseFunctionExpression = function () {\n  var node = this.startNode();\n  var meta = this.parseIdentifier(true);\n  if (this.state.inGenerator && this.eat(types.dot) && this.hasPlugin(\"functionSent\")) {\n    return this.parseMetaProperty(node, meta, \"sent\");\n  } else {\n    return this.parseFunction(node, false);\n  }\n};\n\npp$3.parseMetaProperty = function (node, meta, propertyName) {\n  node.meta = meta;\n  node.property = this.parseIdentifier(true);\n\n  if (node.property.name !== propertyName) {\n    this.raise(node.property.start, \"The only valid meta property for new is \" + meta.name + \".\" + propertyName);\n  }\n\n  return this.finishNode(node, \"MetaProperty\");\n};\n\npp$3.parseLiteral = function (value, type) {\n  var node = this.startNode();\n  this.addExtra(node, \"rawValue\", value);\n  this.addExtra(node, \"raw\", this.input.slice(this.state.start, this.state.end));\n  node.value = value;\n  this.next();\n  return this.finishNode(node, type);\n};\n\npp$3.parseParenExpression = function () {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val;\n};\n\npp$3.parseParenAndDistinguishExpression = function (startPos, startLoc, canBeArrow) {\n  startPos = startPos || this.state.start;\n  startLoc = startLoc || this.state.startLoc;\n\n  var val = void 0;\n  this.expect(types.parenL);\n\n  var innerStartPos = this.state.start;\n  var innerStartLoc = this.state.startLoc;\n  var exprList = [];\n  var refShorthandDefaultPos = { start: 0 };\n  var refNeedsArrowPos = { start: 0 };\n  var first = true;\n  var spreadStart = void 0;\n  var optionalCommaStart = void 0;\n\n  while (!this.match(types.parenR)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma, refNeedsArrowPos.start || null);\n      if (this.match(types.parenR)) {\n        optionalCommaStart = this.state.start;\n        break;\n      }\n    }\n\n    if (this.match(types.ellipsis)) {\n      var spreadNodeStartPos = this.state.start;\n      var spreadNodeStartLoc = this.state.startLoc;\n      spreadStart = this.state.start;\n      exprList.push(this.parseParenItem(this.parseRest(), spreadNodeStartLoc, spreadNodeStartPos));\n      break;\n    } else {\n      exprList.push(this.parseMaybeAssign(false, refShorthandDefaultPos, this.parseParenItem, refNeedsArrowPos));\n    }\n  }\n\n  var innerEndPos = this.state.start;\n  var innerEndLoc = this.state.startLoc;\n  this.expect(types.parenR);\n\n  var arrowNode = this.startNodeAt(startPos, startLoc);\n  if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n    for (var _iterator = exprList, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var param = _ref;\n\n      if (param.extra && param.extra.parenthesized) this.unexpected(param.extra.parenStart);\n    }\n\n    return this.parseArrowExpression(arrowNode, exprList);\n  }\n\n  if (!exprList.length) {\n    this.unexpected(this.state.lastTokStart);\n  }\n  if (optionalCommaStart) this.unexpected(optionalCommaStart);\n  if (spreadStart) this.unexpected(spreadStart);\n  if (refShorthandDefaultPos.start) this.unexpected(refShorthandDefaultPos.start);\n  if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n\n  if (exprList.length > 1) {\n    val = this.startNodeAt(innerStartPos, innerStartLoc);\n    val.expressions = exprList;\n    this.toReferencedList(val.expressions);\n    this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n  } else {\n    val = exprList[0];\n  }\n\n  this.addExtra(val, \"parenthesized\", true);\n  this.addExtra(val, \"parenStart\", startPos);\n\n  return val;\n};\n\npp$3.shouldParseArrow = function () {\n  return !this.canInsertSemicolon();\n};\n\npp$3.parseArrow = function (node) {\n  if (this.eat(types.arrow)) {\n    return node;\n  }\n};\n\npp$3.parseParenItem = function (node) {\n  return node;\n};\n\n// New's precedence is slightly tricky. It must allow its argument\n// to be a `[]` or dot subscript expression, but not a call — at\n// least, not without wrapping it in parentheses. Thus, it uses the\n\npp$3.parseNew = function () {\n  var node = this.startNode();\n  var meta = this.parseIdentifier(true);\n\n  if (this.eat(types.dot)) {\n    return this.parseMetaProperty(node, meta, \"target\");\n  }\n\n  node.callee = this.parseNoCallExpr();\n\n  if (this.eat(types.parenL)) {\n    node.arguments = this.parseExprList(types.parenR);\n    this.toReferencedList(node.arguments);\n  } else {\n    node.arguments = [];\n  }\n\n  return this.finishNode(node, \"NewExpression\");\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function () {\n  var elem = this.startNode();\n  elem.value = {\n    raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n    cooked: this.state.value\n  };\n  this.next();\n  elem.tail = this.match(types.backQuote);\n  return this.finishNode(elem, \"TemplateElement\");\n};\n\npp$3.parseTemplate = function () {\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement();\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    this.expect(types.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement());\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\");\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function (isPattern, refShorthandDefaultPos) {\n  var decorators = [];\n  var propHash = Object.create(null);\n  var first = true;\n  var node = this.startNode();\n\n  node.properties = [];\n  this.next();\n\n  var firstRestLocation = null;\n\n  while (!this.eat(types.braceR)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n      if (this.eat(types.braceR)) break;\n    }\n\n    while (this.match(types.at)) {\n      decorators.push(this.parseDecorator());\n    }\n\n    var prop = this.startNode(),\n        isGenerator = false,\n        isAsync = false,\n        startPos = void 0,\n        startLoc = void 0;\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    if (this.hasPlugin(\"objectRestSpread\") && this.match(types.ellipsis)) {\n      prop = this.parseSpread();\n      prop.type = isPattern ? \"RestProperty\" : \"SpreadProperty\";\n      node.properties.push(prop);\n      if (isPattern) {\n        var position = this.state.start;\n        if (firstRestLocation !== null) {\n          this.unexpected(firstRestLocation, \"Cannot have multiple rest elements when destructuring\");\n        } else if (this.eat(types.braceR)) {\n          break;\n        } else if (this.match(types.comma) && this.lookahead().type === types.braceR) {\n          // TODO: temporary rollback\n          // this.unexpected(position, \"A trailing comma is not permitted after the rest element\");\n          continue;\n        } else {\n          firstRestLocation = position;\n          continue;\n        }\n      } else {\n        continue;\n      }\n    }\n\n    prop.method = false;\n    prop.shorthand = false;\n\n    if (isPattern || refShorthandDefaultPos) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    if (!isPattern && this.isContextual(\"async\")) {\n      if (isGenerator) this.unexpected();\n\n      var asyncId = this.parseIdentifier();\n      if (this.match(types.colon) || this.match(types.parenL) || this.match(types.braceR) || this.match(types.eq) || this.match(types.comma)) {\n        prop.key = asyncId;\n      } else {\n        isAsync = true;\n        if (this.hasPlugin(\"asyncGenerators\")) isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop);\n      }\n    } else {\n      this.parsePropertyName(prop);\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, refShorthandDefaultPos);\n    this.checkPropClash(prop, propHash);\n\n    if (prop.shorthand) {\n      this.addExtra(prop, \"shorthand\", true);\n    }\n\n    node.properties.push(prop);\n  }\n\n  if (firstRestLocation !== null) {\n    this.unexpected(firstRestLocation, \"The rest element has to be the last element when destructuring\");\n  }\n\n  if (decorators.length) {\n    this.raise(this.state.start, \"You have trailing decorators with no property\");\n  }\n\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\");\n};\n\npp$3.parseObjPropValue = function (prop, startPos, startLoc, isGenerator, isAsync, isPattern, refShorthandDefaultPos) {\n  if (isAsync || isGenerator || this.match(types.parenL)) {\n    if (isPattern) this.unexpected();\n    prop.kind = \"method\";\n    prop.method = true;\n    this.parseMethod(prop, isGenerator, isAsync);\n    return this.finishNode(prop, \"ObjectMethod\");\n  }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssign(false, refShorthandDefaultPos);\n    return this.finishNode(prop, \"ObjectProperty\");\n  }\n\n  if (!isPattern && !prop.computed && prop.key.type === \"Identifier\" && (prop.key.name === \"get\" || prop.key.name === \"set\") && !this.match(types.comma) && !this.match(types.braceR)) {\n    if (isGenerator || isAsync) this.unexpected();\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    this.parseMethod(prop, false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.params.length !== paramCount) {\n      var start = prop.start;\n      if (prop.kind === \"get\") {\n        this.raise(start, \"getter should have no params\");\n      } else {\n        this.raise(start, \"setter should have exactly one param\");\n      }\n    }\n    return this.finishNode(prop, \"ObjectMethod\");\n  }\n\n  if (!prop.computed && prop.key.type === \"Identifier\") {\n    if (isPattern) {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, true);\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n    } else if (this.match(types.eq) && refShorthandDefaultPos) {\n      if (!refShorthandDefaultPos.start) {\n        refShorthandDefaultPos.start = this.state.start;\n      }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n    } else {\n      prop.value = prop.key.__clone();\n    }\n\n    prop.shorthand = true;\n    return this.finishNode(prop, \"ObjectProperty\");\n  }\n\n  this.unexpected();\n};\n\npp$3.parsePropertyName = function (prop) {\n  if (this.eat(types.bracketL)) {\n    prop.computed = true;\n    prop.key = this.parseMaybeAssign();\n    this.expect(types.bracketR);\n  } else {\n    prop.computed = false;\n    var oldInPropertyName = this.state.inPropertyName;\n    this.state.inPropertyName = true;\n    prop.key = this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    this.state.inPropertyName = oldInPropertyName;\n  }\n  return prop.key;\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function (node, isAsync) {\n  node.id = null;\n  node.generator = false;\n  node.expression = false;\n  node.async = !!isAsync;\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function (node, isGenerator, isAsync) {\n  var oldInMethod = this.state.inMethod;\n  this.state.inMethod = node.kind || true;\n  this.initFunction(node, isAsync);\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR);\n  node.generator = isGenerator;\n  this.parseFunctionBody(node);\n  this.state.inMethod = oldInMethod;\n  return node;\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function (node, params, isAsync) {\n  this.initFunction(node, isAsync);\n  node.params = this.toAssignableList(params, true, \"arrow function parameters\");\n  this.parseFunctionBody(node, true);\n  return this.finishNode(node, \"ArrowFunctionExpression\");\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function (node, allowExpression) {\n  var isExpression = allowExpression && !this.match(types.braceL);\n\n  var oldInAsync = this.state.inAsync;\n  this.state.inAsync = node.async;\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n  } else {\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldInFunc = this.state.inFunction;\n    var oldInGen = this.state.inGenerator;\n    var oldLabels = this.state.labels;\n    this.state.inFunction = true;this.state.inGenerator = node.generator;this.state.labels = [];\n    node.body = this.parseBlock(true);\n    node.expression = false;\n    this.state.inFunction = oldInFunc;this.state.inGenerator = oldInGen;this.state.labels = oldLabels;\n  }\n  this.state.inAsync = oldInAsync;\n\n  // If this is a strict mode function, verify that argument names\n  // are not repeated, and it does not try to bind the words `eval`\n  // or `arguments`.\n  var checkLVal = this.state.strict;\n  var isStrict = false;\n\n  // arrow function\n  if (allowExpression) checkLVal = true;\n\n  // normal function\n  if (!isExpression && node.body.directives.length) {\n    for (var _iterator2 = node.body.directives, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var directive = _ref2;\n\n      if (directive.value.value === \"use strict\") {\n        isStrict = true;\n        checkLVal = true;\n        break;\n      }\n    }\n  }\n\n  //\n  if (isStrict && node.id && node.id.type === \"Identifier\" && node.id.name === \"yield\") {\n    this.raise(node.id.start, \"Binding yield in strict mode\");\n  }\n\n  if (checkLVal) {\n    var nameHash = Object.create(null);\n    var oldStrict = this.state.strict;\n    if (isStrict) this.state.strict = true;\n    if (node.id) {\n      this.checkLVal(node.id, true, undefined, \"function name\");\n    }\n    for (var _iterator3 = node.params, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var param = _ref3;\n\n      if (isStrict && param.type !== \"Identifier\") {\n        this.raise(param.start, \"Non-simple parameter in strict mode\");\n      }\n      this.checkLVal(param, true, nameHash, \"function parameter list\");\n    }\n    this.state.strict = oldStrict;\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function (close, allowEmpty, refShorthandDefaultPos) {\n  var elts = [];\n  var first = true;\n\n  while (!this.eat(close)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n      if (this.eat(close)) break;\n    }\n\n    elts.push(this.parseExprListItem(allowEmpty, refShorthandDefaultPos));\n  }\n  return elts;\n};\n\npp$3.parseExprListItem = function (allowEmpty, refShorthandDefaultPos) {\n  var elt = void 0;\n  if (allowEmpty && this.match(types.comma)) {\n    elt = null;\n  } else if (this.match(types.ellipsis)) {\n    elt = this.parseSpread(refShorthandDefaultPos);\n  } else {\n    elt = this.parseMaybeAssign(false, refShorthandDefaultPos, this.parseParenItem);\n  }\n  return elt;\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdentifier = function (liberal) {\n  var node = this.startNode();\n\n  if (this.match(types.name)) {\n    if (!liberal) {\n      this.checkReservedWord(this.state.value, this.state.start, false, false);\n    }\n\n    node.name = this.state.value;\n  } else if (liberal && this.state.type.keyword) {\n    node.name = this.state.type.keyword;\n  } else {\n    this.unexpected();\n  }\n\n  if (!liberal && node.name === \"await\" && this.state.inAsync) {\n    this.raise(node.start, \"invalid use of await inside of an async function\");\n  }\n\n  node.loc.identifierName = node.name;\n\n  this.next();\n  return this.finishNode(node, \"Identifier\");\n};\n\npp$3.checkReservedWord = function (word, startLoc, checkKeywords, isBinding) {\n  if (this.isReservedWord(word) || checkKeywords && this.isKeyword(word)) {\n    this.raise(startLoc, word + \" is a reserved word\");\n  }\n\n  if (this.state.strict && (reservedWords.strict(word) || isBinding && reservedWords.strictBind(word))) {\n    this.raise(startLoc, word + \" is a reserved word in strict mode\");\n  }\n};\n\n// Parses await expression inside async function.\n\npp$3.parseAwait = function (node) {\n  // istanbul ignore next: this condition is checked at the call site so won't be hit here\n  if (!this.state.inAsync) {\n    this.unexpected();\n  }\n  if (this.match(types.star)) {\n    this.raise(node.start, \"await* has been removed from the async functions proposal. Use Promise.all() instead.\");\n  }\n  node.argument = this.parseMaybeUnary();\n  return this.finishNode(node, \"AwaitExpression\");\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function () {\n  var node = this.startNode();\n  this.next();\n  if (this.match(types.semi) || this.canInsertSemicolon() || !this.match(types.star) && !this.state.type.startsExpr) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\");\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$4 = Parser.prototype;\nvar commentKeys = [\"leadingComments\", \"trailingComments\", \"innerComments\"];\n\nvar Node = function () {\n  function Node(pos, loc, filename) {\n    classCallCheck(this, Node);\n\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (filename) this.loc.filename = filename;\n  }\n\n  Node.prototype.__clone = function __clone() {\n    var node2 = new Node();\n    for (var key in this) {\n      // Do not clone comments that are already attached to the node\n      if (commentKeys.indexOf(key) < 0) {\n        node2[key] = this[key];\n      }\n    }\n\n    return node2;\n  };\n\n  return Node;\n}();\n\npp$4.startNode = function () {\n  return new Node(this.state.start, this.state.startLoc, this.filename);\n};\n\npp$4.startNodeAt = function (pos, loc) {\n  return new Node(pos, loc, this.filename);\n};\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  node.loc.end = loc;\n  this.processComment(node);\n  return node;\n}\n\n// Finish an AST node, adding `type` and `end` properties.\n\npp$4.finishNode = function (node, type) {\n  return finishNodeAt.call(this, node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n};\n\n// Finish node at given position\n\npp$4.finishNodeAt = function (node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc);\n};\n\nvar pp$5 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$5.raise = function (pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos;\n  err.loc = loc;\n  throw err;\n};\n\n/* eslint max-len: 0 */\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nvar pp$6 = Parser.prototype;\n\npp$6.addComment = function (comment) {\n  if (this.filename) comment.loc.filename = this.filename;\n  this.state.trailingComments.push(comment);\n  this.state.leadingComments.push(comment);\n};\n\npp$6.processComment = function (node) {\n  if (node.type === \"Program\" && node.body.length > 0) return;\n\n  var stack = this.state.commentStack;\n\n  var lastChild = void 0,\n      trailingComments = void 0,\n      i = void 0,\n      j = void 0;\n\n  if (this.state.trailingComments.length > 0) {\n    // If the first comment in trailingComments comes after the\n    // current node, then we're good - all comments in the array will\n    // come after the node and so it's safe to add them as official\n    // trailingComments.\n    if (this.state.trailingComments[0].start >= node.end) {\n      trailingComments = this.state.trailingComments;\n      this.state.trailingComments = [];\n    } else {\n      // Otherwise, if the first comment doesn't come after the\n      // current node, that means we have a mix of leading and trailing\n      // comments in the array and that leadingComments contains the\n      // same items as trailingComments. Reset trailingComments to\n      // zero items and we'll handle this by evaluating leadingComments\n      // later.\n      this.state.trailingComments.length = 0;\n    }\n  } else {\n    var lastInStack = last(stack);\n    if (stack.length > 0 && lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n      trailingComments = lastInStack.trailingComments;\n      lastInStack.trailingComments = null;\n    }\n  }\n\n  // Eating the stack.\n  while (stack.length > 0 && last(stack).start >= node.start) {\n    lastChild = stack.pop();\n  }\n\n  if (lastChild) {\n    if (lastChild.leadingComments) {\n      if (lastChild !== node && last(lastChild.leadingComments).end <= node.start) {\n        node.leadingComments = lastChild.leadingComments;\n        lastChild.leadingComments = null;\n      } else {\n        // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n        // so this takes back the leading comment.\n        // See also: https://github.com/eslint/espree/issues/158\n        for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n          if (lastChild.leadingComments[i].end <= node.start) {\n            node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n            break;\n          }\n        }\n      }\n    }\n  } else if (this.state.leadingComments.length > 0) {\n    if (last(this.state.leadingComments).end <= node.start) {\n      if (this.state.commentPreviousNode) {\n        for (j = 0; j < this.state.leadingComments.length; j++) {\n          if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n            this.state.leadingComments.splice(j, 1);\n            j--;\n          }\n        }\n      }\n      if (this.state.leadingComments.length > 0) {\n        node.leadingComments = this.state.leadingComments;\n        this.state.leadingComments = [];\n      }\n    } else {\n      // https://github.com/eslint/espree/issues/2\n      //\n      // In special cases, such as return (without a value) and\n      // debugger, all comments will end up as leadingComments and\n      // will otherwise be eliminated. This step runs when the\n      // commentStack is empty and there are comments left\n      // in leadingComments.\n      //\n      // This loop figures out the stopping point between the actual\n      // leading and trailing comments by finding the location of the\n      // first comment that comes after the given node.\n      for (i = 0; i < this.state.leadingComments.length; i++) {\n        if (this.state.leadingComments[i].end > node.start) {\n          break;\n        }\n      }\n\n      // Split the array based on the location of the first comment\n      // that comes after the node. Keep in mind that this could\n      // result in an empty array, and if so, the array must be\n      // deleted.\n      node.leadingComments = this.state.leadingComments.slice(0, i);\n      if (node.leadingComments.length === 0) {\n        node.leadingComments = null;\n      }\n\n      // Similarly, trailing comments are attached later. The variable\n      // must be reset to null if there are no trailing comments.\n      trailingComments = this.state.leadingComments.slice(i);\n      if (trailingComments.length === 0) {\n        trailingComments = null;\n      }\n    }\n  }\n\n  this.state.commentPreviousNode = node;\n\n  if (trailingComments) {\n    if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n      node.innerComments = trailingComments;\n    } else {\n      node.trailingComments = trailingComments;\n    }\n  }\n\n  stack.push(node);\n};\n\n/* eslint indent: 0 */\n/* eslint max-len: 0 */\n\nvar pp$7 = Parser.prototype;\n\npp$7.flowParseTypeInitialiser = function (tok) {\n  var oldInType = this.state.inType;\n  this.state.inType = true;\n  this.expect(tok || types.colon);\n\n  var type = this.flowParseType();\n  this.state.inType = oldInType;\n  return type;\n};\n\npp$7.flowParseDeclareClass = function (node) {\n  this.next();\n  this.flowParseInterfaceish(node, true);\n  return this.finishNode(node, \"DeclareClass\");\n};\n\npp$7.flowParseDeclareFunction = function (node) {\n  this.next();\n\n  var id = node.id = this.parseIdentifier();\n\n  var typeNode = this.startNode();\n  var typeContainer = this.startNode();\n\n  if (this.isRelational(\"<\")) {\n    typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n  } else {\n    typeNode.typeParameters = null;\n  }\n\n  this.expect(types.parenL);\n  var tmp = this.flowParseFunctionTypeParams();\n  typeNode.params = tmp.params;\n  typeNode.rest = tmp.rest;\n  this.expect(types.parenR);\n  typeNode.returnType = this.flowParseTypeInitialiser();\n\n  typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n  id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n  this.finishNode(id, id.type);\n\n  this.semicolon();\n\n  return this.finishNode(node, \"DeclareFunction\");\n};\n\npp$7.flowParseDeclare = function (node) {\n  if (this.match(types._class)) {\n    return this.flowParseDeclareClass(node);\n  } else if (this.match(types._function)) {\n    return this.flowParseDeclareFunction(node);\n  } else if (this.match(types._var)) {\n    return this.flowParseDeclareVariable(node);\n  } else if (this.isContextual(\"module\")) {\n    if (this.lookahead().type === types.dot) {\n      return this.flowParseDeclareModuleExports(node);\n    } else {\n      return this.flowParseDeclareModule(node);\n    }\n  } else if (this.isContextual(\"type\")) {\n    return this.flowParseDeclareTypeAlias(node);\n  } else if (this.isContextual(\"interface\")) {\n    return this.flowParseDeclareInterface(node);\n  } else {\n    this.unexpected();\n  }\n};\n\npp$7.flowParseDeclareVariable = function (node) {\n  this.next();\n  node.id = this.flowParseTypeAnnotatableIdentifier();\n  this.semicolon();\n  return this.finishNode(node, \"DeclareVariable\");\n};\n\npp$7.flowParseDeclareModule = function (node) {\n  this.next();\n\n  if (this.match(types.string)) {\n    node.id = this.parseExprAtom();\n  } else {\n    node.id = this.parseIdentifier();\n  }\n\n  var bodyNode = node.body = this.startNode();\n  var body = bodyNode.body = [];\n  this.expect(types.braceL);\n  while (!this.match(types.braceR)) {\n    var node2 = this.startNode();\n\n    this.expectContextual(\"declare\", \"Unexpected token. Only declares are allowed inside declare module\");\n\n    body.push(this.flowParseDeclare(node2));\n  }\n  this.expect(types.braceR);\n\n  this.finishNode(bodyNode, \"BlockStatement\");\n  return this.finishNode(node, \"DeclareModule\");\n};\n\npp$7.flowParseDeclareModuleExports = function (node) {\n  this.expectContextual(\"module\");\n  this.expect(types.dot);\n  this.expectContextual(\"exports\");\n  node.typeAnnotation = this.flowParseTypeAnnotation();\n  this.semicolon();\n\n  return this.finishNode(node, \"DeclareModuleExports\");\n};\n\npp$7.flowParseDeclareTypeAlias = function (node) {\n  this.next();\n  this.flowParseTypeAlias(node);\n  return this.finishNode(node, \"DeclareTypeAlias\");\n};\n\npp$7.flowParseDeclareInterface = function (node) {\n  this.next();\n  this.flowParseInterfaceish(node);\n  return this.finishNode(node, \"DeclareInterface\");\n};\n\n// Interfaces\n\npp$7.flowParseInterfaceish = function (node, allowStatic) {\n  node.id = this.parseIdentifier();\n\n  if (this.isRelational(\"<\")) {\n    node.typeParameters = this.flowParseTypeParameterDeclaration();\n  } else {\n    node.typeParameters = null;\n  }\n\n  node.extends = [];\n  node.mixins = [];\n\n  if (this.eat(types._extends)) {\n    do {\n      node.extends.push(this.flowParseInterfaceExtends());\n    } while (this.eat(types.comma));\n  }\n\n  if (this.isContextual(\"mixins\")) {\n    this.next();\n    do {\n      node.mixins.push(this.flowParseInterfaceExtends());\n    } while (this.eat(types.comma));\n  }\n\n  node.body = this.flowParseObjectType(allowStatic);\n};\n\npp$7.flowParseInterfaceExtends = function () {\n  var node = this.startNode();\n\n  node.id = this.flowParseQualifiedTypeIdentifier();\n  if (this.isRelational(\"<\")) {\n    node.typeParameters = this.flowParseTypeParameterInstantiation();\n  } else {\n    node.typeParameters = null;\n  }\n\n  return this.finishNode(node, \"InterfaceExtends\");\n};\n\npp$7.flowParseInterface = function (node) {\n  this.flowParseInterfaceish(node, false);\n  return this.finishNode(node, \"InterfaceDeclaration\");\n};\n\n// Type aliases\n\npp$7.flowParseTypeAlias = function (node) {\n  node.id = this.parseIdentifier();\n\n  if (this.isRelational(\"<\")) {\n    node.typeParameters = this.flowParseTypeParameterDeclaration();\n  } else {\n    node.typeParameters = null;\n  }\n\n  node.right = this.flowParseTypeInitialiser(types.eq);\n  this.semicolon();\n\n  return this.finishNode(node, \"TypeAlias\");\n};\n\n// Type annotations\n\npp$7.flowParseTypeParameter = function () {\n  var node = this.startNode();\n\n  var variance = this.flowParseVariance();\n\n  var ident = this.flowParseTypeAnnotatableIdentifier();\n  node.name = ident.name;\n  node.variance = variance;\n  node.bound = ident.typeAnnotation;\n\n  if (this.match(types.eq)) {\n    this.eat(types.eq);\n    node.default = this.flowParseType();\n  }\n\n  return this.finishNode(node, \"TypeParameter\");\n};\n\npp$7.flowParseTypeParameterDeclaration = function () {\n  var oldInType = this.state.inType;\n  var node = this.startNode();\n  node.params = [];\n\n  this.state.inType = true;\n\n  // istanbul ignore else: this condition is already checked at all call sites\n  if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n    this.next();\n  } else {\n    this.unexpected();\n  }\n\n  do {\n    node.params.push(this.flowParseTypeParameter());\n    if (!this.isRelational(\">\")) {\n      this.expect(types.comma);\n    }\n  } while (!this.isRelational(\">\"));\n  this.expectRelational(\">\");\n\n  this.state.inType = oldInType;\n\n  return this.finishNode(node, \"TypeParameterDeclaration\");\n};\n\npp$7.flowParseTypeParameterInstantiation = function () {\n  var node = this.startNode();\n  var oldInType = this.state.inType;\n  node.params = [];\n\n  this.state.inType = true;\n\n  this.expectRelational(\"<\");\n  while (!this.isRelational(\">\")) {\n    node.params.push(this.flowParseType());\n    if (!this.isRelational(\">\")) {\n      this.expect(types.comma);\n    }\n  }\n  this.expectRelational(\">\");\n\n  this.state.inType = oldInType;\n\n  return this.finishNode(node, \"TypeParameterInstantiation\");\n};\n\npp$7.flowParseObjectPropertyKey = function () {\n  return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n};\n\npp$7.flowParseObjectTypeIndexer = function (node, isStatic, variance) {\n  node.static = isStatic;\n\n  this.expect(types.bracketL);\n  if (this.lookahead().type === types.colon) {\n    node.id = this.flowParseObjectPropertyKey();\n    node.key = this.flowParseTypeInitialiser();\n  } else {\n    node.id = null;\n    node.key = this.flowParseType();\n  }\n  this.expect(types.bracketR);\n  node.value = this.flowParseTypeInitialiser();\n  node.variance = variance;\n\n  this.flowObjectTypeSemicolon();\n  return this.finishNode(node, \"ObjectTypeIndexer\");\n};\n\npp$7.flowParseObjectTypeMethodish = function (node) {\n  node.params = [];\n  node.rest = null;\n  node.typeParameters = null;\n\n  if (this.isRelational(\"<\")) {\n    node.typeParameters = this.flowParseTypeParameterDeclaration();\n  }\n\n  this.expect(types.parenL);\n  while (this.match(types.name)) {\n    node.params.push(this.flowParseFunctionTypeParam());\n    if (!this.match(types.parenR)) {\n      this.expect(types.comma);\n    }\n  }\n\n  if (this.eat(types.ellipsis)) {\n    node.rest = this.flowParseFunctionTypeParam();\n  }\n  this.expect(types.parenR);\n  node.returnType = this.flowParseTypeInitialiser();\n\n  return this.finishNode(node, \"FunctionTypeAnnotation\");\n};\n\npp$7.flowParseObjectTypeMethod = function (startPos, startLoc, isStatic, key) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(startPos, startLoc));\n  node.static = isStatic;\n  node.key = key;\n  node.optional = false;\n  this.flowObjectTypeSemicolon();\n  return this.finishNode(node, \"ObjectTypeProperty\");\n};\n\npp$7.flowParseObjectTypeCallProperty = function (node, isStatic) {\n  var valueNode = this.startNode();\n  node.static = isStatic;\n  node.value = this.flowParseObjectTypeMethodish(valueNode);\n  this.flowObjectTypeSemicolon();\n  return this.finishNode(node, \"ObjectTypeCallProperty\");\n};\n\npp$7.flowParseObjectType = function (allowStatic, allowExact) {\n  var oldInType = this.state.inType;\n  this.state.inType = true;\n\n  var nodeStart = this.startNode();\n  var node = void 0;\n  var propertyKey = void 0;\n  var isStatic = false;\n\n  nodeStart.callProperties = [];\n  nodeStart.properties = [];\n  nodeStart.indexers = [];\n\n  var endDelim = void 0;\n  var exact = void 0;\n  if (allowExact && this.match(types.braceBarL)) {\n    this.expect(types.braceBarL);\n    endDelim = types.braceBarR;\n    exact = true;\n  } else {\n    this.expect(types.braceL);\n    endDelim = types.braceR;\n    exact = false;\n  }\n\n  nodeStart.exact = exact;\n\n  while (!this.match(endDelim)) {\n    var optional = false;\n    var startPos = this.state.start;\n    var startLoc = this.state.startLoc;\n    node = this.startNode();\n    if (allowStatic && this.isContextual(\"static\") && this.lookahead().type !== types.colon) {\n      this.next();\n      isStatic = true;\n    }\n\n    var variancePos = this.state.start;\n    var variance = this.flowParseVariance();\n\n    if (this.match(types.bracketL)) {\n      nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n    } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      if (variance) {\n        this.unexpected(variancePos);\n      }\n      nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, allowStatic));\n    } else {\n      propertyKey = this.flowParseObjectPropertyKey();\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        // This is a method property\n        if (variance) {\n          this.unexpected(variancePos);\n        }\n        nodeStart.properties.push(this.flowParseObjectTypeMethod(startPos, startLoc, isStatic, propertyKey));\n      } else {\n        if (this.eat(types.question)) {\n          optional = true;\n        }\n        node.key = propertyKey;\n        node.value = this.flowParseTypeInitialiser();\n        node.optional = optional;\n        node.static = isStatic;\n        node.variance = variance;\n        this.flowObjectTypeSemicolon();\n        nodeStart.properties.push(this.finishNode(node, \"ObjectTypeProperty\"));\n      }\n    }\n\n    isStatic = false;\n  }\n\n  this.expect(endDelim);\n\n  var out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n  this.state.inType = oldInType;\n\n  return out;\n};\n\npp$7.flowObjectTypeSemicolon = function () {\n  if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n    this.unexpected();\n  }\n};\n\npp$7.flowParseQualifiedTypeIdentifier = function (startPos, startLoc, id) {\n  startPos = startPos || this.state.start;\n  startLoc = startLoc || this.state.startLoc;\n  var node = id || this.parseIdentifier();\n\n  while (this.eat(types.dot)) {\n    var node2 = this.startNodeAt(startPos, startLoc);\n    node2.qualification = node;\n    node2.id = this.parseIdentifier();\n    node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n  }\n\n  return node;\n};\n\npp$7.flowParseGenericType = function (startPos, startLoc, id) {\n  var node = this.startNodeAt(startPos, startLoc);\n\n  node.typeParameters = null;\n  node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n  if (this.isRelational(\"<\")) {\n    node.typeParameters = this.flowParseTypeParameterInstantiation();\n  }\n\n  return this.finishNode(node, \"GenericTypeAnnotation\");\n};\n\npp$7.flowParseTypeofType = function () {\n  var node = this.startNode();\n  this.expect(types._typeof);\n  node.argument = this.flowParsePrimaryType();\n  return this.finishNode(node, \"TypeofTypeAnnotation\");\n};\n\npp$7.flowParseTupleType = function () {\n  var node = this.startNode();\n  node.types = [];\n  this.expect(types.bracketL);\n  // We allow trailing commas\n  while (this.state.pos < this.input.length && !this.match(types.bracketR)) {\n    node.types.push(this.flowParseType());\n    if (this.match(types.bracketR)) break;\n    this.expect(types.comma);\n  }\n  this.expect(types.bracketR);\n  return this.finishNode(node, \"TupleTypeAnnotation\");\n};\n\npp$7.flowParseFunctionTypeParam = function () {\n  var name = null;\n  var optional = false;\n  var typeAnnotation = null;\n  var node = this.startNode();\n  var lh = this.lookahead();\n  if (lh.type === types.colon || lh.type === types.question) {\n    name = this.parseIdentifier();\n    if (this.eat(types.question)) {\n      optional = true;\n    }\n    typeAnnotation = this.flowParseTypeInitialiser();\n  } else {\n    typeAnnotation = this.flowParseType();\n  }\n  node.name = name;\n  node.optional = optional;\n  node.typeAnnotation = typeAnnotation;\n  return this.finishNode(node, \"FunctionTypeParam\");\n};\n\npp$7.reinterpretTypeAsFunctionTypeParam = function (type) {\n  var node = this.startNodeAt(type.start, type.loc);\n  node.name = null;\n  node.optional = false;\n  node.typeAnnotation = type;\n  return this.finishNode(node, \"FunctionTypeParam\");\n};\n\npp$7.flowParseFunctionTypeParams = function () {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var ret = { params: params, rest: null };\n  while (this.match(types.name)) {\n    ret.params.push(this.flowParseFunctionTypeParam());\n    if (!this.match(types.parenR)) {\n      this.expect(types.comma);\n    }\n  }\n  if (this.eat(types.ellipsis)) {\n    ret.rest = this.flowParseFunctionTypeParam();\n  }\n  return ret;\n};\n\npp$7.flowIdentToTypeAnnotation = function (startPos, startLoc, node, id) {\n  switch (id.name) {\n    case \"any\":\n      return this.finishNode(node, \"AnyTypeAnnotation\");\n\n    case \"void\":\n      return this.finishNode(node, \"VoidTypeAnnotation\");\n\n    case \"bool\":\n    case \"boolean\":\n      return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n    case \"mixed\":\n      return this.finishNode(node, \"MixedTypeAnnotation\");\n\n    case \"empty\":\n      return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n    case \"number\":\n      return this.finishNode(node, \"NumberTypeAnnotation\");\n\n    case \"string\":\n      return this.finishNode(node, \"StringTypeAnnotation\");\n\n    default:\n      return this.flowParseGenericType(startPos, startLoc, id);\n  }\n};\n\n// The parsing of types roughly parallels the parsing of expressions, and\n// primary types are kind of like primary expressions...they're the\n// primitives with which other types are constructed.\npp$7.flowParsePrimaryType = function () {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var node = this.startNode();\n  var tmp = void 0;\n  var type = void 0;\n  var isGroupedType = false;\n  var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n  switch (this.state.type) {\n    case types.name:\n      return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n    case types.braceL:\n      return this.flowParseObjectType(false, false);\n\n    case types.braceBarL:\n      return this.flowParseObjectType(false, true);\n\n    case types.bracketL:\n      return this.flowParseTupleType();\n\n    case types.relational:\n      if (this.state.value === \"<\") {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n        this.expect(types.parenL);\n        tmp = this.flowParseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        this.expect(types.parenR);\n\n        this.expect(types.arrow);\n\n        node.returnType = this.flowParseType();\n\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      break;\n\n    case types.parenL:\n      this.next();\n\n      // Check to see if this is actually a grouped type\n      if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        if (this.match(types.name)) {\n          var token = this.lookahead().type;\n          isGroupedType = token !== types.question && token !== types.colon;\n        } else {\n          isGroupedType = true;\n        }\n      }\n\n      if (isGroupedType) {\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n        // A `,` or a `) =>` means this is an anonymous function type\n        if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n          this.expect(types.parenR);\n          return type;\n        } else {\n          // Eat a comma if there is one\n          this.eat(types.comma);\n        }\n      }\n\n      if (type) {\n        tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n      } else {\n        tmp = this.flowParseFunctionTypeParams();\n      }\n\n      node.params = tmp.params;\n      node.rest = tmp.rest;\n\n      this.expect(types.parenR);\n\n      this.expect(types.arrow);\n\n      node.returnType = this.flowParseType();\n\n      node.typeParameters = null;\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n    case types.string:\n      node.value = this.state.value;\n      this.addExtra(node, \"rawValue\", node.value);\n      this.addExtra(node, \"raw\", this.input.slice(this.state.start, this.state.end));\n      this.next();\n      return this.finishNode(node, \"StringLiteralTypeAnnotation\");\n\n    case types._true:case types._false:\n      node.value = this.match(types._true);\n      this.next();\n      return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n    case types.plusMin:\n      if (this.state.value === \"-\") {\n        this.next();\n        if (!this.match(types.num)) this.unexpected();\n\n        node.value = -this.state.value;\n        this.addExtra(node, \"rawValue\", node.value);\n        this.addExtra(node, \"raw\", this.input.slice(this.state.start, this.state.end));\n        this.next();\n        return this.finishNode(node, \"NumericLiteralTypeAnnotation\");\n      }\n\n    case types.num:\n      node.value = this.state.value;\n      this.addExtra(node, \"rawValue\", node.value);\n      this.addExtra(node, \"raw\", this.input.slice(this.state.start, this.state.end));\n      this.next();\n      return this.finishNode(node, \"NumericLiteralTypeAnnotation\");\n\n    case types._null:\n      node.value = this.match(types._null);\n      this.next();\n      return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n    case types._this:\n      node.value = this.match(types._this);\n      this.next();\n      return this.finishNode(node, \"ThisTypeAnnotation\");\n\n    case types.star:\n      this.next();\n      return this.finishNode(node, \"ExistentialTypeParam\");\n\n    default:\n      if (this.state.type.keyword === \"typeof\") {\n        return this.flowParseTypeofType();\n      }\n  }\n\n  this.unexpected();\n};\n\npp$7.flowParsePostfixType = function () {\n  var startPos = this.state.start,\n      startLoc = this.state.startLoc;\n  var type = this.flowParsePrimaryType();\n  while (!this.canInsertSemicolon() && this.match(types.bracketL)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.elementType = type;\n    this.expect(types.bracketL);\n    this.expect(types.bracketR);\n    type = this.finishNode(node, \"ArrayTypeAnnotation\");\n  }\n  return type;\n};\n\npp$7.flowParsePrefixType = function () {\n  var node = this.startNode();\n  if (this.eat(types.question)) {\n    node.typeAnnotation = this.flowParsePrefixType();\n    return this.finishNode(node, \"NullableTypeAnnotation\");\n  } else {\n    return this.flowParsePostfixType();\n  }\n};\n\npp$7.flowParseAnonFunctionWithoutParens = function () {\n  var param = this.flowParsePrefixType();\n  if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n    var node = this.startNodeAt(param.start, param.loc);\n    node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n    node.rest = null;\n    node.returnType = this.flowParseType();\n    node.typeParameters = null;\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n  return param;\n};\n\npp$7.flowParseIntersectionType = function () {\n  var node = this.startNode();\n  this.eat(types.bitwiseAND);\n  var type = this.flowParseAnonFunctionWithoutParens();\n  node.types = [type];\n  while (this.eat(types.bitwiseAND)) {\n    node.types.push(this.flowParseAnonFunctionWithoutParens());\n  }\n  return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n};\n\npp$7.flowParseUnionType = function () {\n  var node = this.startNode();\n  this.eat(types.bitwiseOR);\n  var type = this.flowParseIntersectionType();\n  node.types = [type];\n  while (this.eat(types.bitwiseOR)) {\n    node.types.push(this.flowParseIntersectionType());\n  }\n  return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n};\n\npp$7.flowParseType = function () {\n  var oldInType = this.state.inType;\n  this.state.inType = true;\n  var type = this.flowParseUnionType();\n  this.state.inType = oldInType;\n  return type;\n};\n\npp$7.flowParseTypeAnnotation = function () {\n  var node = this.startNode();\n  node.typeAnnotation = this.flowParseTypeInitialiser();\n  return this.finishNode(node, \"TypeAnnotation\");\n};\n\npp$7.flowParseTypeAnnotatableIdentifier = function () {\n  var ident = this.parseIdentifier();\n  if (this.match(types.colon)) {\n    ident.typeAnnotation = this.flowParseTypeAnnotation();\n    this.finishNode(ident, ident.type);\n  }\n  return ident;\n};\n\npp$7.typeCastToParameter = function (node) {\n  node.expression.typeAnnotation = node.typeAnnotation;\n\n  return this.finishNodeAt(node.expression, node.expression.type, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n};\n\npp$7.flowParseVariance = function () {\n  var variance = null;\n  if (this.match(types.plusMin)) {\n    if (this.state.value === \"+\") {\n      variance = \"plus\";\n    } else if (this.state.value === \"-\") {\n      variance = \"minus\";\n    }\n    this.next();\n  }\n  return variance;\n};\n\nvar flowPlugin = function (instance) {\n  // plain function return types: function name(): string {}\n  instance.extend(\"parseFunctionBody\", function (inner) {\n    return function (node, allowExpression) {\n      if (this.match(types.colon) && !allowExpression) {\n        // if allowExpression is true then we're parsing an arrow function and if\n        // there's a return type then it's been handled elsewhere\n        node.returnType = this.flowParseTypeAnnotation();\n      }\n\n      return inner.call(this, node, allowExpression);\n    };\n  });\n\n  // interfaces\n  instance.extend(\"parseStatement\", function (inner) {\n    return function (declaration, topLevel) {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        var node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      } else {\n        return inner.call(this, declaration, topLevel);\n      }\n    };\n  });\n\n  // declares, interfaces and type aliases\n  instance.extend(\"parseExpressionStatement\", function (inner) {\n    return function (node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          }\n        }\n      }\n\n      return inner.call(this, node, expr);\n    };\n  });\n\n  // export type\n  instance.extend(\"shouldParseExportDeclaration\", function (inner) {\n    return function () {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || inner.call(this);\n    };\n  });\n\n  instance.extend(\"parseConditional\", function (inner) {\n    return function (expr, noIn, startPos, startLoc, refNeedsArrowPos) {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos && this.match(types.question)) {\n        var state = this.state.clone();\n        try {\n          return inner.call(this, expr, noIn, startPos, startLoc);\n        } catch (err) {\n          if (err instanceof SyntaxError) {\n            this.state = state;\n            refNeedsArrowPos.start = err.pos || this.state.start;\n            return expr;\n          } else {\n            // istanbul ignore next: no such error is expected\n            throw err;\n          }\n        }\n      }\n\n      return inner.call(this, expr, noIn, startPos, startLoc);\n    };\n  });\n\n  instance.extend(\"parseParenItem\", function (inner) {\n    return function (node, startLoc, startPos) {\n      node = inner.call(this, node, startLoc, startPos);\n      if (this.eat(types.question)) {\n        node.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        var typeCastNode = this.startNodeAt(startLoc, startPos);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    };\n  });\n\n  instance.extend(\"parseExport\", function (inner) {\n    return function (node) {\n      node = inner.call(this, node);\n      if (node.type === \"ExportNamedDeclaration\") {\n        node.exportKind = node.exportKind || \"value\";\n      }\n      return node;\n    };\n  });\n\n  instance.extend(\"parseExportDeclaration\", function (inner) {\n    return function (node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        var declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        var _declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(_declarationNode);\n      } else {\n        return inner.call(this, node);\n      }\n    };\n  });\n\n  instance.extend(\"parseClassId\", function (inner) {\n    return function (node) {\n      inner.apply(this, arguments);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    };\n  });\n\n  // don't consider `void` to be a keyword as then it'll use the void token type\n  // and set startExpr\n  instance.extend(\"isKeyword\", function (inner) {\n    return function (name) {\n      if (this.state.inType && name === \"void\") {\n        return false;\n      } else {\n        return inner.call(this, name);\n      }\n    };\n  });\n\n  // ensure that inside flow types, we bypass the jsx parser plugin\n  instance.extend(\"readToken\", function (inner) {\n    return function (code) {\n      if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else {\n        return inner.call(this, code);\n      }\n    };\n  });\n\n  // don't lex any token as a jsx one inside a flow type\n  instance.extend(\"jsx_readToken\", function (inner) {\n    return function () {\n      if (!this.state.inType) return inner.call(this);\n    };\n  });\n\n  instance.extend(\"toAssignable\", function (inner) {\n    return function (node, isBinding, contextDescription) {\n      if (node.type === \"TypeCastExpression\") {\n        return inner.call(this, this.typeCastToParameter(node), isBinding, contextDescription);\n      } else {\n        return inner.call(this, node, isBinding, contextDescription);\n      }\n    };\n  });\n\n  // turn type casts that we found in function parameter head into type annotated params\n  instance.extend(\"toAssignableList\", function (inner) {\n    return function (exprList, isBinding, contextDescription) {\n      for (var i = 0; i < exprList.length; i++) {\n        var expr = exprList[i];\n        if (expr && expr.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return inner.call(this, exprList, isBinding, contextDescription);\n    };\n  });\n\n  // this is a list of nodes, from something like a call expression, we need to filter the\n  // type casts that we've found that are illegal in this context\n  instance.extend(\"toReferencedList\", function () {\n    return function (exprList) {\n      for (var i = 0; i < exprList.length; i++) {\n        var expr = exprList[i];\n        if (expr && expr._exprListItem && expr.type === \"TypeCastExpression\") {\n          this.raise(expr.start, \"Unexpected type cast\");\n        }\n      }\n\n      return exprList;\n    };\n  });\n\n  // parse an item inside a expression list eg. `(NODE, NODE)` where NODE represents\n  // the position where this function is called\n  instance.extend(\"parseExprListItem\", function (inner) {\n    return function (allowEmpty, refShorthandDefaultPos) {\n      var container = this.startNode();\n      var node = inner.call(this, allowEmpty, refShorthandDefaultPos);\n      if (this.match(types.colon)) {\n        container._exprListItem = true;\n        container.expression = node;\n        container.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(container, \"TypeCastExpression\");\n      } else {\n        return node;\n      }\n    };\n  });\n\n  instance.extend(\"checkLVal\", function (inner) {\n    return function (node) {\n      if (node.type !== \"TypeCastExpression\") {\n        return inner.apply(this, arguments);\n      }\n    };\n  });\n\n  // parse class property type annotations\n  instance.extend(\"parseClassProperty\", function (inner) {\n    return function (node) {\n      delete node.variancePos;\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return inner.call(this, node);\n    };\n  });\n\n  // determine whether or not we're currently in the position where a class property would appear\n  instance.extend(\"isClassProperty\", function (inner) {\n    return function () {\n      return this.match(types.colon) || inner.call(this);\n    };\n  });\n\n  // parse type parameters for class methods\n  instance.extend(\"parseClassMethod\", function () {\n    return function (classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variancePos);\n      }\n      delete method.variance;\n      delete method.variancePos;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      this.parseMethod(method, isGenerator, isAsync);\n      classBody.body.push(this.finishNode(method, \"ClassMethod\"));\n    };\n  });\n\n  // parse a the super class type parameters and implements\n  instance.extend(\"parseClassSuper\", function (inner) {\n    return function (node, isStatement) {\n      inner.call(this, node, isStatement);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        var implemented = node.implements = [];\n        do {\n          var _node = this.startNode();\n          _node.id = this.parseIdentifier();\n          if (this.isRelational(\"<\")) {\n            _node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            _node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(_node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    };\n  });\n\n  instance.extend(\"parsePropertyName\", function (inner) {\n    return function (node) {\n      var variancePos = this.state.start;\n      var variance = this.flowParseVariance();\n      var key = inner.call(this, node);\n      node.variance = variance;\n      node.variancePos = variancePos;\n      return key;\n    };\n  });\n\n  // parse type parameters for object method shorthand\n  instance.extend(\"parseObjPropValue\", function (inner) {\n    return function (prop) {\n      if (prop.variance) {\n        this.unexpected(prop.variancePos);\n      }\n      delete prop.variance;\n      delete prop.variancePos;\n\n      var typeParameters = void 0;\n\n      // method shorthand\n      if (this.isRelational(\"<\")) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      inner.apply(this, arguments);\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    };\n  });\n\n  instance.extend(\"parseAssignableListItemTypes\", function () {\n    return function (param) {\n      if (this.eat(types.question)) {\n        param.optional = true;\n      }\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      this.finishNode(param, param.type);\n      return param;\n    };\n  });\n\n  instance.extend(\"parseMaybeDefault\", function (inner) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var node = inner.apply(this, args);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\");\n      }\n\n      return node;\n    };\n  });\n\n  // parse typeof and type imports\n  instance.extend(\"parseImportSpecifiers\", function (inner) {\n    return function (node) {\n      node.importKind = \"value\";\n\n      var kind = null;\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        var lh = this.lookahead();\n        if (lh.type === types.name && lh.value !== \"from\" || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      inner.call(this, node);\n    };\n  });\n\n  // parse import-type/typeof shorthand\n  instance.extend(\"parseImportSpecifier\", function () {\n    return function (node) {\n      var specifier = this.startNode();\n      var firstIdentLoc = this.state.start;\n      var firstIdent = this.parseIdentifier(true);\n\n      var specifierTypeKind = null;\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n\n      if (this.isContextual(\"as\")) {\n        var as_ident = this.parseIdentifier(true);\n        if (specifierTypeKind !== null && !this.match(types.name)) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier(false);\n        }\n      } else if (specifierTypeKind !== null && this.match(types.name)) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        specifier.local = this.eatContextual(\"as\") ? this.parseIdentifier(false) : specifier.imported.__clone();\n      } else {\n        if (firstIdent.name === \"typeof\") {\n          this.unexpected(firstIdentLoc, \"Cannot import a variable named `typeof`\");\n        }\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      this.checkLVal(specifier.local, true, undefined, \"import specifier\");\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    };\n  });\n\n  // parse function type parameters - function foo<T>() {}\n  instance.extend(\"parseFunctionParams\", function (inner) {\n    return function (node) {\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      inner.call(this, node);\n    };\n  });\n\n  // parse flow type annotations on variable declarator heads - let foo: string = bar\n  instance.extend(\"parseVarHead\", function (inner) {\n    return function (decl) {\n      inner.call(this, decl);\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.finishNode(decl.id, decl.id.type);\n      }\n    };\n  });\n\n  // parse the return type of an async arrow function - let foo = (async (): number => {});\n  instance.extend(\"parseAsyncArrowFromCallExpression\", function (inner) {\n    return function (node, call) {\n      if (this.match(types.colon)) {\n        var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return inner.call(this, node, call);\n    };\n  });\n\n  // todo description\n  instance.extend(\"shouldParseAsyncArrow\", function (inner) {\n    return function () {\n      return this.match(types.colon) || inner.call(this);\n    };\n  });\n\n  // We need to support type parameter declarations for arrow functions. This\n  // is tricky. There are three situations we need to handle\n  //\n  // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n  //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n  //    error.\n  // 2. This is an arrow function. We'll parse the type parameter declaration,\n  //    parse the rest, make sure the rest is an arrow function, and go from\n  //    there\n  // 3. This is neither. Just call the inner function\n  instance.extend(\"parseMaybeAssign\", function (inner) {\n    return function () {\n      var jsxError = null;\n\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      if (types.jsxTagStart && this.match(types.jsxTagStart)) {\n        var state = this.state.clone();\n        try {\n          return inner.apply(this, args);\n        } catch (err) {\n          if (err instanceof SyntaxError) {\n            this.state = state;\n            jsxError = err;\n          } else {\n            // istanbul ignore next: no such error is expected\n            throw err;\n          }\n        }\n      }\n\n      // Need to push something onto the context to stop\n      // the JSX plugin from messing with the tokens\n      this.state.context.push(types$1.parenExpression);\n      if (jsxError != null || this.isRelational(\"<\")) {\n        var arrowExpression = void 0;\n        var typeParameters = void 0;\n        try {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          arrowExpression = inner.apply(this, args);\n          arrowExpression.typeParameters = typeParameters;\n          arrowExpression.start = typeParameters.start;\n          arrowExpression.loc.start = typeParameters.loc.start;\n        } catch (err) {\n          throw jsxError || err;\n        }\n\n        if (arrowExpression.type === \"ArrowFunctionExpression\") {\n          return arrowExpression;\n        } else if (jsxError != null) {\n          throw jsxError;\n        } else {\n          this.raise(typeParameters.start, \"Expected an arrow function after this type parameter declaration\");\n        }\n      }\n      this.state.context.pop();\n\n      return inner.apply(this, args);\n    };\n  });\n\n  // handle return types for arrow functions\n  instance.extend(\"parseArrow\", function (inner) {\n    return function (node) {\n      if (this.match(types.colon)) {\n        var state = this.state.clone();\n        try {\n          var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          var returnType = this.flowParseTypeAnnotation();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          // assign after it is clear it is an arrow\n          node.returnType = returnType;\n        } catch (err) {\n          if (err instanceof SyntaxError) {\n            this.state = state;\n          } else {\n            // istanbul ignore next: no such error is expected\n            throw err;\n          }\n        }\n      }\n\n      return inner.call(this, node);\n    };\n  });\n\n  instance.extend(\"shouldParseArrow\", function (inner) {\n    return function () {\n      return this.match(types.colon) || inner.call(this);\n    };\n  });\n\n  instance.extend(\"isClassMutatorStarter\", function (inner) {\n    return function () {\n      if (this.isRelational(\"<\")) {\n        return true;\n      } else {\n        return inner.call(this);\n      }\n    };\n  });\n};\n\n// Adapted from String.fromcodepoint to export the function without modifying String\n/*! https://mths.be/fromcodepoint v0.2.1 by @mathias */\n\n// The MIT License (MIT)\n// Copyright (c) Mathias Bynens\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n// associated documentation files (the \"Software\"), to deal in the Software without restriction,\n// including without limitation the rights to use, copy, modify, merge, publish, distribute,\n// sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or\n// substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n// NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar fromCodePoint = String.fromCodePoint;\n\nif (!fromCodePoint) {\n  (function () {\n    var stringFromCharCode = String.fromCharCode;\n    var floor = Math.floor;\n    fromCodePoint = function fromCodePoint() {\n      var MAX_SIZE = 0x4000;\n      var codeUnits = [];\n      var highSurrogate = void 0;\n      var lowSurrogate = void 0;\n      var index = -1;\n      var length = arguments.length;\n      if (!length) {\n        return \"\";\n      }\n      var result = \"\";\n      while (++index < length) {\n        var codePoint = Number(arguments[index]);\n        if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n        codePoint < 0 || // not a valid Unicode code point\n        codePoint > 0x10FFFF || // not a valid Unicode code point\n        floor(codePoint) != codePoint // not an integer\n        ) {\n            throw RangeError(\"Invalid code point: \" + codePoint);\n          }\n        if (codePoint <= 0xFFFF) {\n          // BMP code point\n          codeUnits.push(codePoint);\n        } else {\n          // Astral code point; split in surrogate halves\n          // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n          codePoint -= 0x10000;\n          highSurrogate = (codePoint >> 10) + 0xD800;\n          lowSurrogate = codePoint % 0x400 + 0xDC00;\n          codeUnits.push(highSurrogate, lowSurrogate);\n        }\n        if (index + 1 == length || codeUnits.length > MAX_SIZE) {\n          result += stringFromCharCode.apply(null, codeUnits);\n          codeUnits.length = 0;\n        }\n      }\n      return result;\n    };\n  })();\n}\n\nvar fromCodePoint$1 = fromCodePoint;\n\nvar XHTMLEntities = {\n  quot: \"\\\"\",\n  amp: \"&\",\n  apos: \"'\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\xA0\",\n  iexcl: \"\\xA1\",\n  cent: \"\\xA2\",\n  pound: \"\\xA3\",\n  curren: \"\\xA4\",\n  yen: \"\\xA5\",\n  brvbar: \"\\xA6\",\n  sect: \"\\xA7\",\n  uml: \"\\xA8\",\n  copy: \"\\xA9\",\n  ordf: \"\\xAA\",\n  laquo: \"\\xAB\",\n  not: \"\\xAC\",\n  shy: \"\\xAD\",\n  reg: \"\\xAE\",\n  macr: \"\\xAF\",\n  deg: \"\\xB0\",\n  plusmn: \"\\xB1\",\n  sup2: \"\\xB2\",\n  sup3: \"\\xB3\",\n  acute: \"\\xB4\",\n  micro: \"\\xB5\",\n  para: \"\\xB6\",\n  middot: \"\\xB7\",\n  cedil: \"\\xB8\",\n  sup1: \"\\xB9\",\n  ordm: \"\\xBA\",\n  raquo: \"\\xBB\",\n  frac14: \"\\xBC\",\n  frac12: \"\\xBD\",\n  frac34: \"\\xBE\",\n  iquest: \"\\xBF\",\n  Agrave: \"\\xC0\",\n  Aacute: \"\\xC1\",\n  Acirc: \"\\xC2\",\n  Atilde: \"\\xC3\",\n  Auml: \"\\xC4\",\n  Aring: \"\\xC5\",\n  AElig: \"\\xC6\",\n  Ccedil: \"\\xC7\",\n  Egrave: \"\\xC8\",\n  Eacute: \"\\xC9\",\n  Ecirc: \"\\xCA\",\n  Euml: \"\\xCB\",\n  Igrave: \"\\xCC\",\n  Iacute: \"\\xCD\",\n  Icirc: \"\\xCE\",\n  Iuml: \"\\xCF\",\n  ETH: \"\\xD0\",\n  Ntilde: \"\\xD1\",\n  Ograve: \"\\xD2\",\n  Oacute: \"\\xD3\",\n  Ocirc: \"\\xD4\",\n  Otilde: \"\\xD5\",\n  Ouml: \"\\xD6\",\n  times: \"\\xD7\",\n  Oslash: \"\\xD8\",\n  Ugrave: \"\\xD9\",\n  Uacute: \"\\xDA\",\n  Ucirc: \"\\xDB\",\n  Uuml: \"\\xDC\",\n  Yacute: \"\\xDD\",\n  THORN: \"\\xDE\",\n  szlig: \"\\xDF\",\n  agrave: \"\\xE0\",\n  aacute: \"\\xE1\",\n  acirc: \"\\xE2\",\n  atilde: \"\\xE3\",\n  auml: \"\\xE4\",\n  aring: \"\\xE5\",\n  aelig: \"\\xE6\",\n  ccedil: \"\\xE7\",\n  egrave: \"\\xE8\",\n  eacute: \"\\xE9\",\n  ecirc: \"\\xEA\",\n  euml: \"\\xEB\",\n  igrave: \"\\xEC\",\n  iacute: \"\\xED\",\n  icirc: \"\\xEE\",\n  iuml: \"\\xEF\",\n  eth: \"\\xF0\",\n  ntilde: \"\\xF1\",\n  ograve: \"\\xF2\",\n  oacute: \"\\xF3\",\n  ocirc: \"\\xF4\",\n  otilde: \"\\xF5\",\n  ouml: \"\\xF6\",\n  divide: \"\\xF7\",\n  oslash: \"\\xF8\",\n  ugrave: \"\\xF9\",\n  uacute: \"\\xFA\",\n  ucirc: \"\\xFB\",\n  uuml: \"\\xFC\",\n  yacute: \"\\xFD\",\n  thorn: \"\\xFE\",\n  yuml: \"\\xFF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  \"int\": \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\n/* eslint indent: 0 */\n\nvar HEX_NUMBER = /^[\\da-fA-F]+$/;\nvar DECIMAL_NUMBER = /^\\d+$/;\n\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\n\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr); // treat as beginning of JSX expression\n  this.state.context.push(types$1.j_oTag); // start opening tag context\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  var out = this.state.context.pop();\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nvar pp$8 = Parser.prototype;\n\n// Reads inline JSX contents token.\n\npp$8.jsxReadToken = function () {\n  var out = \"\";\n  var chunkStart = this.state.pos;\n  for (;;) {\n    if (this.state.pos >= this.input.length) {\n      this.raise(this.state.start, \"Unterminated JSX contents\");\n    }\n\n    var ch = this.input.charCodeAt(this.state.pos);\n\n    switch (ch) {\n      case 60: // \"<\"\n      case 123:\n        // \"{\"\n        if (this.state.pos === this.state.start) {\n          if (ch === 60 && this.state.exprAllowed) {\n            ++this.state.pos;\n            return this.finishToken(types.jsxTagStart);\n          }\n          return this.getTokenFromCode(ch);\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        return this.finishToken(types.jsxText, out);\n\n      case 38:\n        // \"&\"\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n        break;\n\n      default:\n        if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(true);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n    }\n  }\n};\n\npp$8.jsxReadNewLine = function (normalizeCRLF) {\n  var ch = this.input.charCodeAt(this.state.pos);\n  var out = void 0;\n  ++this.state.pos;\n  if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n    ++this.state.pos;\n    out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n  } else {\n    out = String.fromCharCode(ch);\n  }\n  ++this.state.curLine;\n  this.state.lineStart = this.state.pos;\n\n  return out;\n};\n\npp$8.jsxReadString = function (quote) {\n  var out = \"\";\n  var chunkStart = ++this.state.pos;\n  for (;;) {\n    if (this.state.pos >= this.input.length) {\n      this.raise(this.state.start, \"Unterminated string constant\");\n    }\n\n    var ch = this.input.charCodeAt(this.state.pos);\n    if (ch === quote) break;\n    if (ch === 38) {\n      // \"&\"\n      out += this.input.slice(chunkStart, this.state.pos);\n      out += this.jsxReadEntity();\n      chunkStart = this.state.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.state.pos);\n      out += this.jsxReadNewLine(false);\n      chunkStart = this.state.pos;\n    } else {\n      ++this.state.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.state.pos++);\n  return this.finishToken(types.string, out);\n};\n\npp$8.jsxReadEntity = function () {\n  var str = \"\";\n  var count = 0;\n  var entity = void 0;\n  var ch = this.input[this.state.pos];\n\n  var startPos = ++this.state.pos;\n  while (this.state.pos < this.input.length && count++ < 10) {\n    ch = this.input[this.state.pos++];\n    if (ch === \";\") {\n      if (str[0] === \"#\") {\n        if (str[1] === \"x\") {\n          str = str.substr(2);\n          if (HEX_NUMBER.test(str)) entity = fromCodePoint$1(parseInt(str, 16));\n        } else {\n          str = str.substr(1);\n          if (DECIMAL_NUMBER.test(str)) entity = fromCodePoint$1(parseInt(str, 10));\n        }\n      } else {\n        entity = XHTMLEntities[str];\n      }\n      break;\n    }\n    str += ch;\n  }\n  if (!entity) {\n    this.state.pos = startPos;\n    return \"&\";\n  }\n  return entity;\n};\n\n// Read a JSX identifier (valid tag or attribute name).\n//\n// Optimized version since JSX identifiers can\"t contain\n// escape characters and so can be read as single slice.\n// Also assumes that first character was already checked\n// by isIdentifierStart in readToken.\n\npp$8.jsxReadWord = function () {\n  var ch = void 0;\n  var start = this.state.pos;\n  do {\n    ch = this.input.charCodeAt(++this.state.pos);\n  } while (isIdentifierChar(ch) || ch === 45); // \"-\"\n  return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n};\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n}\n\n// Parse next token as JSX identifier\n\npp$8.jsxParseIdentifier = function () {\n  var node = this.startNode();\n  if (this.match(types.jsxName)) {\n    node.name = this.state.value;\n  } else if (this.state.type.keyword) {\n    node.name = this.state.type.keyword;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  return this.finishNode(node, \"JSXIdentifier\");\n};\n\n// Parse namespaced identifier.\n\npp$8.jsxParseNamespacedName = function () {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var name = this.jsxParseIdentifier();\n  if (!this.eat(types.colon)) return name;\n\n  var node = this.startNodeAt(startPos, startLoc);\n  node.namespace = name;\n  node.name = this.jsxParseIdentifier();\n  return this.finishNode(node, \"JSXNamespacedName\");\n};\n\n// Parses element name in any form - namespaced, member\n// or single identifier.\n\npp$8.jsxParseElementName = function () {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var node = this.jsxParseNamespacedName();\n  while (this.eat(types.dot)) {\n    var newNode = this.startNodeAt(startPos, startLoc);\n    newNode.object = node;\n    newNode.property = this.jsxParseIdentifier();\n    node = this.finishNode(newNode, \"JSXMemberExpression\");\n  }\n  return node;\n};\n\n// Parses any type of JSX attribute value.\n\npp$8.jsxParseAttributeValue = function () {\n  var node = void 0;\n  switch (this.state.type) {\n    case types.braceL:\n      node = this.jsxParseExpressionContainer();\n      if (node.expression.type === \"JSXEmptyExpression\") {\n        this.raise(node.start, \"JSX attributes must only be assigned a non-empty expression\");\n      } else {\n        return node;\n      }\n\n    case types.jsxTagStart:\n    case types.string:\n      node = this.parseExprAtom();\n      node.extra = null;\n      return node;\n\n    default:\n      this.raise(this.state.start, \"JSX value should be either an expression or a quoted JSX text\");\n  }\n};\n\n// JSXEmptyExpression is unique type since it doesn't actually parse anything,\n// and so it should start at the end of last read token (left brace) and finish\n// at the beginning of the next one (right brace).\n\npp$8.jsxParseEmptyExpression = function () {\n  var node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n  return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n};\n\n// Parse JSX spread child\n\npp$8.jsxParseSpreadChild = function () {\n  var node = this.startNode();\n  this.expect(types.braceL);\n  this.expect(types.ellipsis);\n  node.expression = this.parseExpression();\n  this.expect(types.braceR);\n\n  return this.finishNode(node, \"JSXSpreadChild\");\n};\n\n// Parses JSX expression enclosed into curly brackets.\n\n\npp$8.jsxParseExpressionContainer = function () {\n  var node = this.startNode();\n  this.next();\n  if (this.match(types.braceR)) {\n    node.expression = this.jsxParseEmptyExpression();\n  } else {\n    node.expression = this.parseExpression();\n  }\n  this.expect(types.braceR);\n  return this.finishNode(node, \"JSXExpressionContainer\");\n};\n\n// Parses following JSX attribute name-value pair.\n\npp$8.jsxParseAttribute = function () {\n  var node = this.startNode();\n  if (this.eat(types.braceL)) {\n    this.expect(types.ellipsis);\n    node.argument = this.parseMaybeAssign();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadAttribute\");\n  }\n  node.name = this.jsxParseNamespacedName();\n  node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n  return this.finishNode(node, \"JSXAttribute\");\n};\n\n// Parses JSX opening tag starting after \"<\".\n\npp$8.jsxParseOpeningElementAt = function (startPos, startLoc) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.attributes = [];\n  node.name = this.jsxParseElementName();\n  while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n    node.attributes.push(this.jsxParseAttribute());\n  }\n  node.selfClosing = this.eat(types.slash);\n  this.expect(types.jsxTagEnd);\n  return this.finishNode(node, \"JSXOpeningElement\");\n};\n\n// Parses JSX closing tag starting after \"</\".\n\npp$8.jsxParseClosingElementAt = function (startPos, startLoc) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.name = this.jsxParseElementName();\n  this.expect(types.jsxTagEnd);\n  return this.finishNode(node, \"JSXClosingElement\");\n};\n\n// Parses entire JSX element, including it\"s opening tag\n// (starting after \"<\"), attributes, contents and closing tag.\n\npp$8.jsxParseElementAt = function (startPos, startLoc) {\n  var node = this.startNodeAt(startPos, startLoc);\n  var children = [];\n  var openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n  var closingElement = null;\n\n  if (!openingElement.selfClosing) {\n    contents: for (;;) {\n      switch (this.state.type) {\n        case types.jsxTagStart:\n          startPos = this.state.start;startLoc = this.state.startLoc;\n          this.next();\n          if (this.eat(types.slash)) {\n            closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n            break contents;\n          }\n          children.push(this.jsxParseElementAt(startPos, startLoc));\n          break;\n\n        case types.jsxText:\n          children.push(this.parseExprAtom());\n          break;\n\n        case types.braceL:\n          if (this.lookahead().type === types.ellipsis) {\n            children.push(this.jsxParseSpreadChild());\n          } else {\n            children.push(this.jsxParseExpressionContainer());\n          }\n\n          break;\n\n        // istanbul ignore next - should never happen\n        default:\n          this.unexpected();\n      }\n    }\n\n    if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n      this.raise(closingElement.start, \"Expected corresponding JSX closing tag for <\" + getQualifiedJSXName(openingElement.name) + \">\");\n    }\n  }\n\n  node.openingElement = openingElement;\n  node.closingElement = closingElement;\n  node.children = children;\n  if (this.match(types.relational) && this.state.value === \"<\") {\n    this.raise(this.state.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\");\n  }\n  return this.finishNode(node, \"JSXElement\");\n};\n\n// Parses entire JSX element from current position.\n\npp$8.jsxParseElement = function () {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  this.next();\n  return this.jsxParseElementAt(startPos, startLoc);\n};\n\nvar jsxPlugin = function (instance) {\n  instance.extend(\"parseExprAtom\", function (inner) {\n    return function (refShortHandDefaultPos) {\n      if (this.match(types.jsxText)) {\n        var node = this.parseLiteral(this.state.value, \"JSXText\");\n        // https://github.com/babel/babel/issues/2078\n        node.extra = null;\n        return node;\n      } else if (this.match(types.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else {\n        return inner.call(this, refShortHandDefaultPos);\n      }\n    };\n  });\n\n  instance.extend(\"readToken\", function (inner) {\n    return function (code) {\n      if (this.state.inPropertyName) return inner.call(this, code);\n\n      var context = this.curContext();\n\n      if (context === types$1.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === types$1.j_oTag || context === types$1.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === 62) {\n          ++this.state.pos;\n          return this.finishToken(types.jsxTagEnd);\n        }\n\n        if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (code === 60 && this.state.exprAllowed) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagStart);\n      }\n\n      return inner.call(this, code);\n    };\n  });\n\n  instance.extend(\"updateContext\", function (inner) {\n    return function (prevType) {\n      if (this.match(types.braceL)) {\n        var curContext = this.curContext();\n        if (curContext === types$1.j_oTag) {\n          this.state.context.push(types$1.braceExpression);\n        } else if (curContext === types$1.j_expr) {\n          this.state.context.push(types$1.templateQuasi);\n        } else {\n          inner.call(this, prevType);\n        }\n        this.state.exprAllowed = true;\n      } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.state.context.push(types$1.j_cTag); // reconsider as closing tag context\n        this.state.exprAllowed = false;\n      } else {\n        return inner.call(this, prevType);\n      }\n    };\n  });\n};\n\nplugins.flow = flowPlugin;\nplugins.jsx = jsxPlugin;\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse();\n}\n\nexports.parse = parse;\nexports.tokTypes = types;\n"]}