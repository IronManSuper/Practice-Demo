{"version":3,"sources":["generate-identifier-regex.js"],"names":[],"mappings":"AAAA;;AAEA;;AACA,IAAM,UAAU,OAAhB;;AAEA,IAAM,QAAQ,QAAQ,aAAa,OAAb,GAAuB,0CAA/B,EACT,MADS,CACF,UAAS,EAAT,EAAa;AAAE,SAAO,KAAK,IAAZ;AAAmB,CADhC,CAAd;AAEA,IAAI,OAAO,CAAC,CAAZ;AACA,IAAM,OAAO,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CACX,QAAQ,aAAa,OAAb,GAAuB,6CAA/B,EACG,MADH,CACU,UAAS,EAAT,EAAa;AACnB,SAAO,KAAK,IAAL,IAAa,OAAO,KAAP,EAAc,EAAd,EAAkB,OAAO,CAAzB,KAA+B,CAAC,CAApD;AACD,CAHH,CADW,CAAb;;AAOA,SAAS,MAAT,CAAgB,GAAhB,EAAqB,EAArB,EAAyB,QAAzB,EAAmC;AACjC,OAAK,IAAI,IAAI,QAAb,EAAuB,IAAI,CAAJ,KAAU,EAAV,IAAgB,IAAI,IAAI,MAA/C,EAAuD,OAAO,GAA9D;AACE,QAAI,IAAI,CAAJ,MAAW,EAAf,EACE,OAAO,CAAP;AAFJ,GAGA,OAAO,CAAC,CAAR;AACD;;AAED,SAAS,GAAT,CAAa,GAAb,EAAkB,KAAlB,EAAyB;AACvB,SAAO,IAAI,MAAJ,GAAa,KAApB;AAA2B,UAAM,MAAM,GAAZ;AAA3B,GACA,OAAO,GAAP;AACD;;AAED,SAAS,GAAT,CAAa,IAAb,EAAmB;AACjB,MAAM,MAAM,KAAK,QAAL,CAAc,EAAd,CAAZ;AACA,MAAI,IAAI,MAAJ,IAAc,CAAlB,EAAqB,OAAO,QAAQ,IAAI,GAAJ,EAAS,CAAT,CAAf,CAArB,KACK,OAAO,QAAQ,IAAI,GAAJ,EAAS,CAAT,CAAf;AACN;;AAED,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACvB,MAAM,SAAS,EAAf;AACA,MAAI,KAAK,EAAT;AACA,OAAK,IAAI,IAAI,CAAR,EAAW,KAAK,OAArB,EAA8B,IAAI,MAAM,MAAxC,EAAgD,GAAhD,EAAqD;AACnD,QAAM,OAAO,MAAM,CAAN,CAAb;AACA,QAAI,KAAK,IAAT;AACA,WAAO,IAAI,MAAM,MAAN,GAAe,CAAnB,IAAwB,MAAM,IAAI,CAAV,KAAgB,KAAK,CAApD,EAAuD;AACrD;AACA;AACD;AACD,QAAI,MAAM,MAAV,EAAkB;AAChB,UAAI,QAAQ,EAAZ,EAAgB,MAAM,IAAI,IAAJ,CAAN,CAAhB,KACK,IAAI,OAAO,CAAP,IAAY,EAAhB,EAAoB,MAAM,IAAI,IAAJ,IAAY,IAAI,EAAJ,CAAlB,CAApB,KACA,MAAM,IAAI,IAAJ,IAAY,GAAZ,GAAkB,IAAI,EAAJ,CAAxB;AACN,KAJD,MAIO;AACL,aAAO,IAAP,CAAY,OAAO,EAAnB,EAAuB,KAAK,IAA5B;AACA,WAAK,EAAL;AACD;AACF;AACD,SAAO,EAAC,UAAU,EAAX,EAAe,QAAQ,MAAvB,EAAP;AACD;;AAED,IAAM,YAAY,SAAS,KAAT,CAAlB;AACA,IAAM,WAAW,SAAS,IAAT,CAAjB;;AAEA,QAAQ,GAAR,CAAY,0CAA0C,UAAU,QAApD,GAA+D,KAA3E;AACA,QAAQ,GAAR,CAAY,qCAAqC,SAAS,QAA9C,GAAyD,KAArE;AACA,QAAQ,GAAR,CAAY,wCAAwC,KAAK,SAAL,CAAe,UAAU,MAAzB,CAAxC,GAA2E,GAAvF;AACA,QAAQ,GAAR,CAAY,mCAAmC,KAAK,SAAL,CAAe,SAAS,MAAxB,CAAnC,GAAqE,GAAjF","file":"generate-identifier-regex-compiled.js","sourcesContent":["\"use strict\";\n\n// Which Unicode version should be used?\nconst version = \"9.0.0\";\n\nconst start = require(\"unicode-\" + version + \"/Binary_Property/ID_Start/code-points.js\")\n    .filter(function(ch) { return ch > 0x7f; });\nlet last = -1;\nconst cont = [0x200c, 0x200d].concat(\n  require(\"unicode-\" + version + \"/Binary_Property/ID_Continue/code-points.js\")\n    .filter(function(ch) {\n      return ch > 0x7f && search(start, ch, last + 1) == -1;\n    })\n  );\n\nfunction search(arr, ch, starting) {\n  for (let i = starting; arr[i] <= ch && i < arr.length; last = i++)\n    if (arr[i] === ch)\n      return i;\n  return -1;\n}\n\nfunction pad(str, width) {\n  while (str.length < width) str = \"0\" + str;\n  return str;\n}\n\nfunction esc(code) {\n  const hex = code.toString(16);\n  if (hex.length <= 2) return \"\\\\x\" + pad(hex, 2);\n  else return \"\\\\u\" + pad(hex, 4);\n}\n\nfunction generate(chars) {\n  const astral = [];\n  let re = \"\";\n  for (let i = 0, at = 0x10000; i < chars.length; i++) {\n    const from = chars[i];\n    let to = from;\n    while (i < chars.length - 1 && chars[i + 1] == to + 1) {\n      i++;\n      to++;\n    }\n    if (to <= 0xffff) {\n      if (from == to) re += esc(from);\n      else if (from + 1 == to) re += esc(from) + esc(to);\n      else re += esc(from) + \"-\" + esc(to);\n    } else {\n      astral.push(from - at, to - from);\n      at = to;\n    }\n  }\n  return {nonASCII: re, astral: astral};\n}\n\nconst startData = generate(start);\nconst contData = generate(cont);\n\nconsole.log(\"let nonASCIIidentifierStartChars = \\\"\" + startData.nonASCII + \"\\\";\");\nconsole.log(\"let nonASCIIidentifierChars = \\\"\" + contData.nonASCII + \"\\\";\");\nconsole.log(\"const astralIdentifierStartCodes = \" + JSON.stringify(startData.astral) + \";\");\nconsole.log(\"const astralIdentifierCodes = \" + JSON.stringify(contData.astral) + \";\");\n"]}