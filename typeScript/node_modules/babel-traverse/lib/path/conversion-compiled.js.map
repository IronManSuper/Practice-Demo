{"version":3,"sources":["conversion.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,UAAR,GAAqB,IAArB;AACA,QAAQ,aAAR,GAAwB,aAAxB;AACA,QAAQ,WAAR,GAAsB,WAAtB;AACA,QAAQ,uBAAR,GAAkC,uBAAlC;;AAEA,IAAI,cAAc,QAAQ,aAAR,CAAlB;;AAEA,IAAI,IAAI,wBAAwB,WAAxB,CAAR;;AAEA,SAAS,uBAAT,CAAiC,GAAjC,EAAsC;AAAE,MAAI,OAAO,IAAI,UAAf,EAA2B;AAAE,WAAO,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAI,SAAS,EAAb,CAAiB,IAAI,OAAO,IAAX,EAAiB;AAAE,WAAK,IAAI,GAAT,IAAgB,GAAhB,EAAqB;AAAE,YAAI,OAAO,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,GAArC,EAA0C,GAA1C,CAAJ,EAAoD,OAAO,GAAP,IAAc,IAAI,GAAJ,CAAd;AAAyB;AAAE,KAAC,OAAO,OAAP,GAAiB,GAAjB,CAAsB,OAAO,MAAP;AAAgB;AAAE;;AAE7Q,SAAS,aAAT,GAAyB;AACvB,MAAI,OAAO,KAAK,IAAhB;;AAEA,MAAI,MAAM,KAAK,CAAf;AACA,MAAI,KAAK,kBAAL,EAAJ,EAA+B;AAC7B,UAAM,KAAK,QAAX;AACD,GAFD,MAEO,IAAI,KAAK,UAAL,MAAqB,KAAK,QAAL,EAAzB,EAA0C;AAC/C,UAAM,KAAK,GAAX;AACD,GAFM,MAEA;AACL,UAAM,IAAI,cAAJ,CAAmB,MAAnB,CAAN;AACD;;AAED,MAAI,CAAC,KAAK,QAAV,EAAoB;AAClB,QAAI,EAAE,YAAF,CAAe,GAAf,CAAJ,EAAyB,MAAM,EAAE,aAAF,CAAgB,IAAI,IAApB,CAAN;AAC1B;;AAED,SAAO,GAAP;AACD;;AAED,SAAS,WAAT,GAAuB;AACrB,SAAO,EAAE,WAAF,CAAc,KAAK,IAAnB,CAAP;AACD;;AAED,SAAS,uBAAT,GAAmC;AACjC,MAAI,CAAC,KAAK,yBAAL,EAAL,EAAuC;;AAEvC,OAAK,WAAL;;AAEA,MAAI,OAAO,KAAK,IAAhB;;AAEA,OAAK,UAAL,GAAkB,KAAlB;AACA,OAAK,IAAL,GAAY,oBAAZ;AACA,OAAK,MAAL,GAAc,KAAK,MAAL,IAAe,IAA7B;AACD","file":"conversion-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.toComputedKey = toComputedKey;\nexports.ensureBlock = ensureBlock;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction toComputedKey() {\n  var node = this.node;\n\n  var key = void 0;\n  if (this.isMemberExpression()) {\n    key = node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!node.computed) {\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  return t.ensureBlock(this.node);\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n\n  this.ensureBlock();\n\n  var node = this.node;\n\n  node.expression = false;\n  node.type = \"FunctionExpression\";\n  node.shadow = node.shadow || true;\n}"]}