{"version":3,"sources":["inferers.js"],"names":[],"mappings":"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","file":"inferers-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = exports.Identifier = undefined;\n\nvar _infererReference = require(\"./inferer-reference\");\n\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_infererReference).default;\n  }\n});\nexports.VariableDeclarator = VariableDeclarator;\nexports.TypeCastExpression = TypeCastExpression;\nexports.NewExpression = NewExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.UnaryExpression = UnaryExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.LogicalExpression = LogicalExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.StringLiteral = StringLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.RegExpLiteral = RegExpLiteral;\nexports.ObjectExpression = ObjectExpression;\nexports.ArrayExpression = ArrayExpression;\nexports.RestElement = RestElement;\nexports.CallExpression = CallExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction VariableDeclarator() {\n  var id = this.get(\"id\");\n\n  if (id.isIdentifier()) {\n    return this.get(\"init\").getTypeAnnotation();\n  } else {\n    return;\n  }\n}\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\nfunction NewExpression(node) {\n  if (this.get(\"callee\").isIdentifier()) {\n    return t.genericTypeAnnotation(node.callee);\n  }\n}\n\nfunction TemplateLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction UnaryExpression(node) {\n  var operator = node.operator;\n\n  if (operator === \"void\") {\n    return t.voidTypeAnnotation();\n  } else if (t.NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.stringTypeAnnotation();\n  } else if (t.BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  }\n}\n\nfunction BinaryExpression(node) {\n  var operator = node.operator;\n\n  if (t.NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    var right = this.get(\"right\");\n    var left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      return t.numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      return t.stringTypeAnnotation();\n    }\n\n    return t.unionTypeAnnotation([t.stringTypeAnnotation(), t.numberTypeAnnotation()]);\n  }\n}\n\nfunction LogicalExpression() {\n  return t.createUnionTypeAnnotation([this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()]);\n}\n\nfunction ConditionalExpression() {\n  return t.createUnionTypeAnnotation([this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()]);\n}\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\nfunction UpdateExpression(node) {\n  var operator = node.operator;\n  if (operator === \"++\" || operator === \"--\") {\n    return t.numberTypeAnnotation();\n  }\n}\n\nfunction StringLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction NumericLiteral() {\n  return t.numberTypeAnnotation();\n}\n\nfunction BooleanLiteral() {\n  return t.booleanTypeAnnotation();\n}\n\nfunction NullLiteral() {\n  return t.nullLiteralTypeAnnotation();\n}\n\nfunction RegExpLiteral() {\n  return t.genericTypeAnnotation(t.identifier(\"RegExp\"));\n}\n\nfunction ObjectExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Object\"));\n}\n\nfunction ArrayExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Array\"));\n}\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\nfunction Func() {\n  return t.genericTypeAnnotation(t.identifier(\"Function\"));\n}\n\nexports.FunctionExpression = Func;\nexports.ArrowFunctionExpression = Func;\nexports.FunctionDeclaration = Func;\nexports.ClassExpression = Func;\nexports.ClassDeclaration = Func;\nfunction CallExpression() {\n  return resolveCall(this.get(\"callee\"));\n}\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    if (callee.is(\"async\")) {\n      if (callee.is(\"generator\")) {\n        return t.genericTypeAnnotation(t.identifier(\"AsyncIterator\"));\n      } else {\n        return t.genericTypeAnnotation(t.identifier(\"Promise\"));\n      }\n    } else {\n      if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {}\n    }\n  }\n}"]}