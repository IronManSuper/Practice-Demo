{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.getTypeAnnotation = getTypeAnnotation;\nexports._getTypeAnnotation = _getTypeAnnotation;\nexports.isBaseType = isBaseType;\nexports.couldBeBaseType = couldBeBaseType;\nexports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;\nexports.isGenericType = isGenericType;\n\nvar _inferers = require(\"./inferers\");\n\nvar inferers = _interopRequireWildcard(_inferers);\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getTypeAnnotation() {\n  if (this.typeAnnotation) return this.typeAnnotation;\n\n  var type = this._getTypeAnnotation() || t.anyTypeAnnotation();\n  if (t.isTypeAnnotation(type)) type = type.typeAnnotation;\n  return this.typeAnnotation = type;\n}\n\nfunction _getTypeAnnotation() {\n  var node = this.node;\n\n  if (!node) {\n    if (this.key === \"init\" && this.parentPath.isVariableDeclarator()) {\n      var declar = this.parentPath.parentPath;\n      var declarParent = declar.parentPath;\n\n      if (declar.key === \"left\" && declarParent.isForInStatement()) {\n        return t.stringTypeAnnotation();\n      }\n\n      if (declar.key === \"left\" && declarParent.isForOfStatement()) {\n        return t.anyTypeAnnotation();\n      }\n\n      return t.voidTypeAnnotation();\n    } else {\n      return;\n    }\n  }\n\n  if (node.typeAnnotation) {\n    return node.typeAnnotation;\n  }\n\n  var inferer = inferers[node.type];\n  if (inferer) {\n    return inferer.call(this, node);\n  }\n\n  inferer = inferers[this.parentPath.type];\n  if (inferer && inferer.validParent) {\n    return this.parentPath.getTypeAnnotation();\n  }\n}\n\nfunction isBaseType(baseName, soft) {\n  return _isBaseType(baseName, this.getTypeAnnotation(), soft);\n}\n\nfunction _isBaseType(baseName, type, soft) {\n  if (baseName === \"string\") {\n    return t.isStringTypeAnnotation(type);\n  } else if (baseName === \"number\") {\n    return t.isNumberTypeAnnotation(type);\n  } else if (baseName === \"boolean\") {\n    return t.isBooleanTypeAnnotation(type);\n  } else if (baseName === \"any\") {\n    return t.isAnyTypeAnnotation(type);\n  } else if (baseName === \"mixed\") {\n    return t.isMixedTypeAnnotation(type);\n  } else if (baseName === \"empty\") {\n    return t.isEmptyTypeAnnotation(type);\n  } else if (baseName === \"void\") {\n    return t.isVoidTypeAnnotation(type);\n  } else {\n    if (soft) {\n      return false;\n    } else {\n      throw new Error(\"Unknown base type \" + baseName);\n    }\n  }\n}\n\nfunction couldBeBaseType(name) {\n  var type = this.getTypeAnnotation();\n  if (t.isAnyTypeAnnotation(type)) return true;\n\n  if (t.isUnionTypeAnnotation(type)) {\n    for (var _iterator = type.types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var type2 = _ref;\n\n      if (t.isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return _isBaseType(name, type, true);\n  }\n}\n\nfunction baseTypeStrictlyMatches(right) {\n  var left = this.getTypeAnnotation();\n  right = right.getTypeAnnotation();\n\n  if (!t.isAnyTypeAnnotation(left) && t.isFlowBaseAnnotation(left)) {\n    return right.type === left.type;\n  }\n}\n\nfunction isGenericType(genericName) {\n  var type = this.getTypeAnnotation();\n  return t.isGenericTypeAnnotation(type) && t.isIdentifier(type.id, { name: genericName });\n}"]}