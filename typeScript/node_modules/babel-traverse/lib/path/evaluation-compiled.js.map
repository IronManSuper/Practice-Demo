{"version":3,"sources":["evaluation.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,UAAR,GAAqB,IAArB;;AAEA,IAAI,WAAW,QAAQ,8BAAR,CAAf;;AAEA,IAAI,WAAW,uBAAuB,QAAvB,CAAf;;AAEA,IAAI,gBAAgB,QAAQ,oCAAR,CAApB;;AAEA,IAAI,gBAAgB,uBAAuB,aAAvB,CAApB;;AAEA,IAAI,OAAO,QAAQ,2BAAR,CAAX;;AAEA,IAAI,QAAQ,uBAAuB,IAAvB,CAAZ;;AAEA,QAAQ,cAAR,GAAyB,cAAzB;AACA,QAAQ,QAAR,GAAmB,QAAnB;;AAEA,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,SAAO,OAAO,IAAI,UAAX,GAAwB,GAAxB,GAA8B,EAAE,SAAS,GAAX,EAArC;AAAwD;;AAE/F,IAAI,gBAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,CAApB;AACA,IAAI,kBAAkB,CAAC,QAAD,CAAtB;;AAEA,SAAS,cAAT,GAA0B;AACxB,MAAI,MAAM,KAAK,QAAL,EAAV;AACA,MAAI,IAAI,SAAR,EAAmB,OAAO,CAAC,CAAC,IAAI,KAAb;AACpB;;AAED,SAAS,QAAT,GAAoB;AAClB,MAAI,YAAY,IAAhB;AACA,MAAI,YAAY,KAAK,CAArB;AACA,MAAI,OAAO,IAAI,MAAM,OAAV,EAAX;;AAEA,WAAS,KAAT,CAAe,IAAf,EAAqB;AACnB,QAAI,CAAC,SAAL,EAAgB;AAChB,gBAAY,IAAZ;AACA,gBAAY,KAAZ;AACD;;AAED,MAAI,QAAQ,SAAS,IAAT,CAAZ;AACA,MAAI,CAAC,SAAL,EAAgB,QAAQ,SAAR;AAChB,SAAO;AACL,eAAW,SADN;AAEL,WAAO,SAFF;AAGL,WAAO;AAHF,GAAP;;AAMA,WAAS,QAAT,CAAkB,IAAlB,EAAwB;AACtB,QAAI,OAAO,KAAK,IAAhB;;AAGA,QAAI,KAAK,GAAL,CAAS,IAAT,CAAJ,EAAoB;AAClB,UAAI,WAAW,KAAK,GAAL,CAAS,IAAT,CAAf;AACA,UAAI,SAAS,QAAb,EAAuB;AACrB,eAAO,SAAS,KAAhB;AACD,OAFD,MAEO;AACL,cAAM,IAAN;AACA;AACD;AACF,KARD,MAQO;AACL,UAAI,OAAO,EAAE,UAAU,KAAZ,EAAX;AACA,WAAK,GAAL,CAAS,IAAT,EAAe,IAAf;;AAEA,UAAI,MAAM,UAAU,IAAV,CAAV;AACA,UAAI,SAAJ,EAAe;AACb,aAAK,QAAL,GAAgB,IAAhB;AACA,aAAK,KAAL,GAAa,GAAb;AACD;AACD,aAAO,GAAP;AACD;AACF;;AAED,WAAS,SAAT,CAAmB,IAAnB,EAAyB;AACvB,QAAI,CAAC,SAAL,EAAgB;;AAEhB,QAAI,OAAO,KAAK,IAAhB;;AAGA,QAAI,KAAK,oBAAL,EAAJ,EAAiC;AAC/B,UAAI,QAAQ,KAAK,GAAL,CAAS,aAAT,CAAZ;AACA,aAAO,SAAS,MAAM,MAAM,MAAN,GAAe,CAArB,CAAT,CAAP;AACD;;AAED,QAAI,KAAK,eAAL,MAA0B,KAAK,gBAAL,EAA1B,IAAqD,KAAK,gBAAL,EAAzD,EAAkF;AAChF,aAAO,KAAK,KAAZ;AACD;;AAED,QAAI,KAAK,aAAL,EAAJ,EAA0B;AACxB,aAAO,IAAP;AACD;;AAED,QAAI,KAAK,iBAAL,EAAJ,EAA8B;AAC5B,UAAI,MAAM,EAAV;;AAEA,UAAI,IAAI,CAAR;AACA,UAAI,SAAS,KAAK,GAAL,CAAS,aAAT,CAAb;;AAEA,WAAK,IAAI,YAAY,KAAK,MAArB,EAA6B,WAAW,MAAM,OAAN,CAAc,SAAd,CAAxC,EAAkE,KAAK,CAAvE,EAA0E,YAAY,WAAW,SAAX,GAAuB,CAAC,GAAG,cAAc,OAAlB,EAA2B,SAA3B,CAAlH,IAA2J;AACzJ,YAAI,IAAJ;;AAEA,YAAI,QAAJ,EAAc;AACZ,cAAI,MAAM,UAAU,MAApB,EAA4B;AAC5B,iBAAO,UAAU,IAAV,CAAP;AACD,SAHD,MAGO;AACL,eAAK,UAAU,IAAV,EAAL;AACA,cAAI,GAAG,IAAP,EAAa;AACb,iBAAO,GAAG,KAAV;AACD;;AAED,YAAI,OAAO,IAAX;;AAEA,YAAI,CAAC,SAAL,EAAgB;;AAEhB,eAAO,KAAK,KAAL,CAAW,MAAlB;;AAEA,YAAI,OAAO,OAAO,GAAP,CAAX;AACA,YAAI,IAAJ,EAAU,OAAO,OAAO,SAAS,IAAT,CAAP,CAAP;AACX;;AAED,UAAI,CAAC,SAAL,EAAgB;AAChB,aAAO,GAAP;AACD;;AAED,QAAI,KAAK,uBAAL,EAAJ,EAAoC;AAClC,UAAI,aAAa,SAAS,KAAK,GAAL,CAAS,MAAT,CAAT,CAAjB;AACA,UAAI,CAAC,SAAL,EAAgB;AAChB,UAAI,UAAJ,EAAgB;AACd,eAAO,SAAS,KAAK,GAAL,CAAS,YAAT,CAAT,CAAP;AACD,OAFD,MAEO;AACL,eAAO,SAAS,KAAK,GAAL,CAAS,WAAT,CAAT,CAAP;AACD;AACF;;AAED,QAAI,KAAK,mBAAL,EAAJ,EAAgC;AAC9B,aAAO,SAAS,KAAK,GAAL,CAAS,YAAT,CAAT,CAAP;AACD;;AAED,QAAI,KAAK,kBAAL,MAA6B,CAAC,KAAK,UAAL,CAAgB,gBAAhB,CAAiC,EAAE,QAAQ,IAAV,EAAjC,CAAlC,EAAsF;AACpF,UAAI,WAAW,KAAK,GAAL,CAAS,UAAT,CAAf;AACA,UAAI,SAAS,KAAK,GAAL,CAAS,QAAT,CAAb;;AAEA,UAAI,OAAO,SAAP,MAAsB,SAAS,YAAT,EAA1B,EAAmD;AACjD,YAAI,SAAS,OAAO,IAAP,CAAY,KAAzB;AACA,YAAI,OAAO,OAAO,MAAP,KAAkB,WAAlB,GAAgC,WAAhC,GAA8C,CAAC,GAAG,SAAS,OAAb,EAAsB,MAAtB,CAAzD;AACA,YAAI,SAAS,QAAT,IAAqB,SAAS,QAAlC,EAA4C;AAC1C,iBAAO,OAAO,SAAS,IAAT,CAAc,IAArB,CAAP;AACD;AACF;AACF;;AAED,QAAI,KAAK,sBAAL,EAAJ,EAAmC;AACjC,UAAI,UAAU,KAAK,KAAL,CAAW,UAAX,CAAsB,KAAK,IAA3B,CAAd;;AAEA,UAAI,WAAW,QAAQ,kBAAR,CAA2B,MAA3B,GAAoC,CAAnD,EAAsD;AACpD,eAAO,MAAM,QAAQ,IAAd,CAAP;AACD;;AAED,UAAI,WAAW,KAAK,IAAL,CAAU,KAAV,GAAkB,QAAQ,IAAR,CAAa,IAAb,CAAkB,GAAnD,EAAwD;AACtD,eAAO,MAAM,QAAQ,IAAd,CAAP;AACD;;AAED,UAAI,WAAW,QAAQ,QAAvB,EAAiC;AAC/B,eAAO,QAAQ,KAAf;AACD,OAFD,MAEO;AACL,YAAI,KAAK,IAAL,KAAc,WAAlB,EAA+B;AAC7B,iBAAO,SAAP;AACD,SAFD,MAEO,IAAI,KAAK,IAAL,KAAc,UAAlB,EAA8B;AACnC,iBAAO,QAAP;AACD,SAFM,MAEA,IAAI,KAAK,IAAL,KAAc,KAAlB,EAAyB;AAC9B,iBAAO,GAAP;AACD;;AAED,YAAI,WAAW,KAAK,OAAL,EAAf;AACA,YAAI,aAAa,IAAjB,EAAuB;AACrB,iBAAO,MAAM,IAAN,CAAP;AACD,SAFD,MAEO;AACL,iBAAO,SAAS,QAAT,CAAP;AACD;AACF;AACF;;AAED,QAAI,KAAK,iBAAL,CAAuB,EAAE,QAAQ,IAAV,EAAvB,CAAJ,EAA8C;AAC5C,UAAI,KAAK,QAAL,KAAkB,MAAtB,EAA8B;AAC5B,eAAO,SAAP;AACD;;AAED,UAAI,WAAW,KAAK,GAAL,CAAS,UAAT,CAAf;AACA,UAAI,KAAK,QAAL,KAAkB,QAAlB,KAA+B,SAAS,UAAT,MAAyB,SAAS,OAAT,EAAxD,CAAJ,EAAiF;AAC/E,eAAO,UAAP;AACD;;AAED,UAAI,MAAM,SAAS,QAAT,CAAV;AACA,UAAI,CAAC,SAAL,EAAgB;AAChB,cAAQ,KAAK,QAAb;AACE,aAAK,GAAL;AACE,iBAAO,CAAC,GAAR;AACF,aAAK,GAAL;AACE,iBAAO,CAAC,GAAR;AACF,aAAK,GAAL;AACE,iBAAO,CAAC,GAAR;AACF,aAAK,GAAL;AACE,iBAAO,CAAC,GAAR;AACF,aAAK,QAAL;AACE,iBAAO,OAAO,GAAP,KAAe,WAAf,GAA6B,WAA7B,GAA2C,CAAC,GAAG,SAAS,OAAb,EAAsB,GAAtB,CAAlD;AAVJ;AAYD;;AAED,QAAI,KAAK,iBAAL,EAAJ,EAA8B;AAC5B,UAAI,MAAM,EAAV;AACA,UAAI,QAAQ,KAAK,GAAL,CAAS,UAAT,CAAZ;AACA,WAAK,IAAI,aAAa,KAAjB,EAAwB,YAAY,MAAM,OAAN,CAAc,UAAd,CAApC,EAA+D,MAAM,CAArE,EAAwE,aAAa,YAAY,UAAZ,GAAyB,CAAC,GAAG,cAAc,OAAlB,EAA2B,UAA3B,CAAnH,IAA6J;AAC3J,YAAI,KAAJ;;AAEA,YAAI,SAAJ,EAAe;AACb,cAAI,OAAO,WAAW,MAAtB,EAA8B;AAC9B,kBAAQ,WAAW,KAAX,CAAR;AACD,SAHD,MAGO;AACL,gBAAM,WAAW,IAAX,EAAN;AACA,cAAI,IAAI,IAAR,EAAc;AACd,kBAAQ,IAAI,KAAZ;AACD;;AAED,YAAI,QAAQ,KAAZ;;AAEA,gBAAQ,MAAM,QAAN,EAAR;;AAEA,YAAI,MAAM,SAAV,EAAqB;AACnB,cAAI,IAAJ,CAAS,MAAM,KAAf;AACD,SAFD,MAEO;AACL,iBAAO,MAAM,KAAN,CAAP;AACD;AACF;AACD,aAAO,GAAP;AACD;;AAED,QAAI,KAAK,kBAAL,EAAJ,EAA+B;AAC7B,UAAI,MAAM,EAAV;AACA,UAAI,QAAQ,KAAK,GAAL,CAAS,YAAT,CAAZ;AACA,WAAK,IAAI,aAAa,KAAjB,EAAwB,YAAY,MAAM,OAAN,CAAc,UAAd,CAApC,EAA+D,MAAM,CAArE,EAAwE,aAAa,YAAY,UAAZ,GAAyB,CAAC,GAAG,cAAc,OAAlB,EAA2B,UAA3B,CAAnH,IAA6J;AAC3J,YAAI,KAAJ;;AAEA,YAAI,SAAJ,EAAe;AACb,cAAI,OAAO,WAAW,MAAtB,EAA8B;AAC9B,kBAAQ,WAAW,KAAX,CAAR;AACD,SAHD,MAGO;AACL,gBAAM,WAAW,IAAX,EAAN;AACA,cAAI,IAAI,IAAR,EAAc;AACd,kBAAQ,IAAI,KAAZ;AACD;;AAED,YAAI,OAAO,KAAX;;AAEA,YAAI,KAAK,cAAL,MAAyB,KAAK,gBAAL,EAA7B,EAAsD;AACpD,iBAAO,MAAM,IAAN,CAAP;AACD;AACD,YAAI,UAAU,KAAK,GAAL,CAAS,KAAT,CAAd;AACA,YAAI,MAAM,OAAV;AACA,YAAI,KAAK,IAAL,CAAU,QAAd,EAAwB;AACtB,gBAAM,IAAI,QAAJ,EAAN;AACA,cAAI,CAAC,IAAI,SAAT,EAAoB;AAClB,mBAAO,MAAM,OAAN,CAAP;AACD;AACD,gBAAM,IAAI,KAAV;AACD,SAND,MAMO,IAAI,IAAI,YAAJ,EAAJ,EAAwB;AAC7B,gBAAM,IAAI,IAAJ,CAAS,IAAf;AACD,SAFM,MAEA;AACL,gBAAM,IAAI,IAAJ,CAAS,KAAf;AACD;AACD,YAAI,YAAY,KAAK,GAAL,CAAS,OAAT,CAAhB;AACA,YAAI,UAAU,UAAU,QAAV,EAAd;AACA,YAAI,CAAC,QAAQ,SAAb,EAAwB;AACtB,iBAAO,MAAM,SAAN,CAAP;AACD;AACD,kBAAU,QAAQ,KAAlB;AACA,YAAI,GAAJ,IAAW,OAAX;AACD;AACD,aAAO,GAAP;AACD;;AAED,QAAI,KAAK,mBAAL,EAAJ,EAAgC;AAC9B,UAAI,eAAe,SAAnB;AACA,UAAI,OAAO,SAAS,KAAK,GAAL,CAAS,MAAT,CAAT,CAAX;AACA,UAAI,gBAAgB,SAApB;AACA,kBAAY,YAAZ;AACA,UAAI,QAAQ,SAAS,KAAK,GAAL,CAAS,OAAT,CAAT,CAAZ;AACA,UAAI,iBAAiB,SAArB;AACA,kBAAY,iBAAiB,cAA7B;;AAEA,cAAQ,KAAK,QAAb;AACE,aAAK,IAAL;AACE,cAAI,QAAQ,aAAZ,EAA2B;AACzB,wBAAY,IAAZ;AACA,mBAAO,IAAP;AACD;;AAED,cAAI,CAAC,SAAL,EAAgB;;AAEhB,iBAAO,QAAQ,KAAf;AACF,aAAK,IAAL;AACE,cAAI,CAAC,IAAD,IAAS,aAAT,IAA0B,CAAC,KAAD,IAAU,cAAxC,EAAwD;AACtD,wBAAY,IAAZ;AACD;;AAED,cAAI,CAAC,SAAL,EAAgB;;AAEhB,iBAAO,QAAQ,KAAf;AAjBJ;AAmBD;;AAED,QAAI,KAAK,kBAAL,EAAJ,EAA+B;AAC7B,UAAI,QAAQ,SAAS,KAAK,GAAL,CAAS,MAAT,CAAT,CAAZ;AACA,UAAI,CAAC,SAAL,EAAgB;AAChB,UAAI,SAAS,SAAS,KAAK,GAAL,CAAS,OAAT,CAAT,CAAb;AACA,UAAI,CAAC,SAAL,EAAgB;;AAEhB,cAAQ,KAAK,QAAb;AACE,aAAK,GAAL;AACE,iBAAO,QAAQ,MAAf;AACF,aAAK,GAAL;AACE,iBAAO,QAAQ,MAAf;AACF,aAAK,GAAL;AACE,iBAAO,QAAQ,MAAf;AACF,aAAK,GAAL;AACE,iBAAO,QAAQ,MAAf;AACF,aAAK,GAAL;AACE,iBAAO,QAAQ,MAAf;AACF,aAAK,IAAL;AACE,iBAAO,KAAK,GAAL,CAAS,KAAT,EAAgB,MAAhB,CAAP;AACF,aAAK,GAAL;AACE,iBAAO,QAAQ,MAAf;AACF,aAAK,GAAL;AACE,iBAAO,QAAQ,MAAf;AACF,aAAK,IAAL;AACE,iBAAO,SAAS,MAAhB;AACF,aAAK,IAAL;AACE,iBAAO,SAAS,MAAhB;AACF,aAAK,IAAL;AACE,iBAAO,SAAS,MAAhB;AACF,aAAK,IAAL;AACE,iBAAO,SAAS,MAAhB;AACF,aAAK,KAAL;AACE,iBAAO,UAAU,MAAjB;AACF,aAAK,KAAL;AACE,iBAAO,UAAU,MAAjB;AACF,aAAK,GAAL;AACE,iBAAO,QAAQ,MAAf;AACF,aAAK,GAAL;AACE,iBAAO,QAAQ,MAAf;AACF,aAAK,GAAL;AACE,iBAAO,QAAQ,MAAf;AACF,aAAK,IAAL;AACE,iBAAO,SAAS,MAAhB;AACF,aAAK,IAAL;AACE,iBAAO,SAAS,MAAhB;AACF,aAAK,KAAL;AACE,iBAAO,UAAU,MAAjB;AAxCJ;AA0CD;;AAED,QAAI,KAAK,gBAAL,EAAJ,EAA6B;AAC3B,UAAI,SAAS,KAAK,GAAL,CAAS,QAAT,CAAb;AACA,UAAI,UAAU,KAAK,CAAnB;AACA,UAAI,OAAO,KAAK,CAAhB;;AAEA,UAAI,OAAO,YAAP,MAAyB,CAAC,KAAK,KAAL,CAAW,UAAX,CAAsB,OAAO,IAAP,CAAY,IAAlC,EAAwC,IAAxC,CAA1B,IAA2E,cAAc,OAAd,CAAsB,OAAO,IAAP,CAAY,IAAlC,KAA2C,CAA1H,EAA6H;AAC3H,eAAO,OAAO,KAAK,MAAL,CAAY,IAAnB,CAAP;AACD;;AAED,UAAI,OAAO,kBAAP,EAAJ,EAAiC;AAC/B,YAAI,UAAU,OAAO,GAAP,CAAW,QAAX,CAAd;AACA,YAAI,YAAY,OAAO,GAAP,CAAW,UAAX,CAAhB;;AAEA,YAAI,QAAQ,YAAR,MAA0B,UAAU,YAAV,EAA1B,IAAsD,cAAc,OAAd,CAAsB,QAAQ,IAAR,CAAa,IAAnC,KAA4C,CAAlG,IAAuG,gBAAgB,OAAhB,CAAwB,UAAU,IAAV,CAAe,IAAvC,IAA+C,CAA1J,EAA6J;AAC3J,oBAAU,OAAO,QAAQ,IAAR,CAAa,IAApB,CAAV;AACA,iBAAO,QAAQ,UAAU,IAAV,CAAe,IAAvB,CAAP;AACD;;AAED,YAAI,QAAQ,SAAR,MAAuB,UAAU,YAAV,EAA3B,EAAqD;AACnD,cAAI,QAAQ,CAAC,GAAG,SAAS,OAAb,EAAsB,QAAQ,IAAR,CAAa,KAAnC,CAAZ;AACA,cAAI,UAAU,QAAV,IAAsB,UAAU,QAApC,EAA8C;AAC5C,sBAAU,QAAQ,IAAR,CAAa,KAAvB;AACA,mBAAO,QAAQ,UAAU,IAAV,CAAe,IAAvB,CAAP;AACD;AACF;AACF;;AAED,UAAI,IAAJ,EAAU;AACR,YAAI,OAAO,KAAK,GAAL,CAAS,WAAT,EAAsB,GAAtB,CAA0B,QAA1B,CAAX;AACA,YAAI,CAAC,SAAL,EAAgB;;AAEhB,eAAO,KAAK,KAAL,CAAW,OAAX,EAAoB,IAApB,CAAP;AACD;AACF;;AAED,UAAM,IAAN;AACD;AACF","file":"evaluation-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _map = require(\"babel-runtime/core-js/map\");\n\nvar _map2 = _interopRequireDefault(_map);\n\nexports.evaluateTruthy = evaluateTruthy;\nexports.evaluate = evaluate;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar VALID_CALLEES = [\"String\", \"Number\", \"Math\"];\nvar INVALID_METHODS = [\"random\"];\n\nfunction evaluateTruthy() {\n  var res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction evaluate() {\n  var confident = true;\n  var deoptPath = void 0;\n  var seen = new _map2.default();\n\n  function deopt(path) {\n    if (!confident) return;\n    deoptPath = path;\n    confident = false;\n  }\n\n  var value = evaluate(this);\n  if (!confident) value = undefined;\n  return {\n    confident: confident,\n    deopt: deoptPath,\n    value: value\n  };\n\n  function evaluate(path) {\n    var node = path.node;\n\n\n    if (seen.has(node)) {\n      var existing = seen.get(node);\n      if (existing.resolved) {\n        return existing.value;\n      } else {\n        deopt(path);\n        return;\n      }\n    } else {\n      var item = { resolved: false };\n      seen.set(node, item);\n\n      var val = _evaluate(path);\n      if (confident) {\n        item.resolved = true;\n        item.value = val;\n      }\n      return val;\n    }\n  }\n\n  function _evaluate(path) {\n    if (!confident) return;\n\n    var node = path.node;\n\n\n    if (path.isSequenceExpression()) {\n      var exprs = path.get(\"expressions\");\n      return evaluate(exprs[exprs.length - 1]);\n    }\n\n    if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n      return node.value;\n    }\n\n    if (path.isNullLiteral()) {\n      return null;\n    }\n\n    if (path.isTemplateLiteral()) {\n      var str = \"\";\n\n      var i = 0;\n      var _exprs = path.get(\"expressions\");\n\n      for (var _iterator = node.quasis, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var elem = _ref;\n\n        if (!confident) break;\n\n        str += elem.value.cooked;\n\n        var expr = _exprs[i++];\n        if (expr) str += String(evaluate(expr));\n      }\n\n      if (!confident) return;\n      return str;\n    }\n\n    if (path.isConditionalExpression()) {\n      var testResult = evaluate(path.get(\"test\"));\n      if (!confident) return;\n      if (testResult) {\n        return evaluate(path.get(\"consequent\"));\n      } else {\n        return evaluate(path.get(\"alternate\"));\n      }\n    }\n\n    if (path.isExpressionWrapper()) {\n      return evaluate(path.get(\"expression\"));\n    }\n\n    if (path.isMemberExpression() && !path.parentPath.isCallExpression({ callee: node })) {\n      var property = path.get(\"property\");\n      var object = path.get(\"object\");\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        var _value = object.node.value;\n        var type = typeof _value === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(_value);\n        if (type === \"number\" || type === \"string\") {\n          return _value[property.node.name];\n        }\n      }\n    }\n\n    if (path.isReferencedIdentifier()) {\n      var binding = path.scope.getBinding(node.name);\n\n      if (binding && binding.constantViolations.length > 0) {\n        return deopt(binding.path);\n      }\n\n      if (binding && path.node.start < binding.path.node.end) {\n        return deopt(binding.path);\n      }\n\n      if (binding && binding.hasValue) {\n        return binding.value;\n      } else {\n        if (node.name === \"undefined\") {\n          return undefined;\n        } else if (node.name === \"Infinity\") {\n          return Infinity;\n        } else if (node.name === \"NaN\") {\n          return NaN;\n        }\n\n        var resolved = path.resolve();\n        if (resolved === path) {\n          return deopt(path);\n        } else {\n          return evaluate(resolved);\n        }\n      }\n    }\n\n    if (path.isUnaryExpression({ prefix: true })) {\n      if (node.operator === \"void\") {\n        return undefined;\n      }\n\n      var argument = path.get(\"argument\");\n      if (node.operator === \"typeof\" && (argument.isFunction() || argument.isClass())) {\n        return \"function\";\n      }\n\n      var arg = evaluate(argument);\n      if (!confident) return;\n      switch (node.operator) {\n        case \"!\":\n          return !arg;\n        case \"+\":\n          return +arg;\n        case \"-\":\n          return -arg;\n        case \"~\":\n          return ~arg;\n        case \"typeof\":\n          return typeof arg === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(arg);\n      }\n    }\n\n    if (path.isArrayExpression()) {\n      var arr = [];\n      var elems = path.get(\"elements\");\n      for (var _iterator2 = elems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var _elem = _ref2;\n\n        _elem = _elem.evaluate();\n\n        if (_elem.confident) {\n          arr.push(_elem.value);\n        } else {\n          return deopt(_elem);\n        }\n      }\n      return arr;\n    }\n\n    if (path.isObjectExpression()) {\n      var obj = {};\n      var props = path.get(\"properties\");\n      for (var _iterator3 = props, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var prop = _ref3;\n\n        if (prop.isObjectMethod() || prop.isSpreadProperty()) {\n          return deopt(prop);\n        }\n        var keyPath = prop.get(\"key\");\n        var key = keyPath;\n        if (prop.node.computed) {\n          key = key.evaluate();\n          if (!key.confident) {\n            return deopt(keyPath);\n          }\n          key = key.value;\n        } else if (key.isIdentifier()) {\n          key = key.node.name;\n        } else {\n          key = key.node.value;\n        }\n        var valuePath = prop.get(\"value\");\n        var _value2 = valuePath.evaluate();\n        if (!_value2.confident) {\n          return deopt(valuePath);\n        }\n        _value2 = _value2.value;\n        obj[key] = _value2;\n      }\n      return obj;\n    }\n\n    if (path.isLogicalExpression()) {\n      var wasConfident = confident;\n      var left = evaluate(path.get(\"left\"));\n      var leftConfident = confident;\n      confident = wasConfident;\n      var right = evaluate(path.get(\"right\"));\n      var rightConfident = confident;\n      confident = leftConfident && rightConfident;\n\n      switch (node.operator) {\n        case \"||\":\n          if (left && leftConfident) {\n            confident = true;\n            return left;\n          }\n\n          if (!confident) return;\n\n          return left || right;\n        case \"&&\":\n          if (!left && leftConfident || !right && rightConfident) {\n            confident = true;\n          }\n\n          if (!confident) return;\n\n          return left && right;\n      }\n    }\n\n    if (path.isBinaryExpression()) {\n      var _left = evaluate(path.get(\"left\"));\n      if (!confident) return;\n      var _right = evaluate(path.get(\"right\"));\n      if (!confident) return;\n\n      switch (node.operator) {\n        case \"-\":\n          return _left - _right;\n        case \"+\":\n          return _left + _right;\n        case \"/\":\n          return _left / _right;\n        case \"*\":\n          return _left * _right;\n        case \"%\":\n          return _left % _right;\n        case \"**\":\n          return Math.pow(_left, _right);\n        case \"<\":\n          return _left < _right;\n        case \">\":\n          return _left > _right;\n        case \"<=\":\n          return _left <= _right;\n        case \">=\":\n          return _left >= _right;\n        case \"==\":\n          return _left == _right;\n        case \"!=\":\n          return _left != _right;\n        case \"===\":\n          return _left === _right;\n        case \"!==\":\n          return _left !== _right;\n        case \"|\":\n          return _left | _right;\n        case \"&\":\n          return _left & _right;\n        case \"^\":\n          return _left ^ _right;\n        case \"<<\":\n          return _left << _right;\n        case \">>\":\n          return _left >> _right;\n        case \">>>\":\n          return _left >>> _right;\n      }\n    }\n\n    if (path.isCallExpression()) {\n      var callee = path.get(\"callee\");\n      var context = void 0;\n      var func = void 0;\n\n      if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name, true) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {\n        func = global[node.callee.name];\n      }\n\n      if (callee.isMemberExpression()) {\n        var _object = callee.get(\"object\");\n        var _property = callee.get(\"property\");\n\n        if (_object.isIdentifier() && _property.isIdentifier() && VALID_CALLEES.indexOf(_object.node.name) >= 0 && INVALID_METHODS.indexOf(_property.node.name) < 0) {\n          context = global[_object.node.name];\n          func = context[_property.node.name];\n        }\n\n        if (_object.isLiteral() && _property.isIdentifier()) {\n          var _type = (0, _typeof3.default)(_object.node.value);\n          if (_type === \"string\" || _type === \"number\") {\n            context = _object.node.value;\n            func = context[_property.node.name];\n          }\n        }\n      }\n\n      if (func) {\n        var args = path.get(\"arguments\").map(evaluate);\n        if (!confident) return;\n\n        return func.apply(context, args);\n      }\n    }\n\n    deopt(path);\n  }\n}"]}