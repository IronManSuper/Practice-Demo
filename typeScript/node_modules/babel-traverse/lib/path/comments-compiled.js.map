{"version":3,"sources":["comments.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,UAAR,GAAqB,IAArB;AACA,QAAQ,yBAAR,GAAoC,yBAApC;AACA,QAAQ,UAAR,GAAqB,UAArB;AACA,QAAQ,WAAR,GAAsB,WAAtB;AACA,SAAS,yBAAT,GAAqC;AACnC,MAAI,OAAO,KAAK,GAAZ,KAAoB,QAAxB,EAAkC;;AAElC,MAAI,OAAO,KAAK,IAAhB;AACA,MAAI,CAAC,IAAL,EAAW;;AAEX,MAAI,WAAW,KAAK,gBAApB;AACA,MAAI,UAAU,KAAK,eAAnB;AACA,MAAI,CAAC,QAAD,IAAa,CAAC,OAAlB,EAA2B;;AAE3B,MAAI,OAAO,KAAK,UAAL,CAAgB,KAAK,GAAL,GAAW,CAA3B,CAAX;AACA,MAAI,OAAO,KAAK,UAAL,CAAgB,KAAK,GAAL,GAAW,CAA3B,CAAX;;AAEA,MAAI,CAAC,KAAK,IAAV,EAAgB,OAAO,IAAP;AAChB,MAAI,CAAC,KAAK,IAAV,EAAgB,OAAO,IAAP;;AAEhB,OAAK,WAAL,CAAiB,UAAjB,EAA6B,OAA7B;AACA,OAAK,WAAL,CAAiB,SAAjB,EAA4B,QAA5B;AACD;;AAED,SAAS,UAAT,CAAoB,IAApB,EAA0B,OAA1B,EAAmC,IAAnC,EAAyC;AACvC,OAAK,WAAL,CAAiB,IAAjB,EAAuB,CAAC;AACtB,UAAM,OAAO,aAAP,GAAuB,cADP;AAEtB,WAAO;AAFe,GAAD,CAAvB;AAID;;AAED,SAAS,WAAT,CAAqB,IAArB,EAA2B,QAA3B,EAAqC;AACnC,MAAI,CAAC,QAAL,EAAe;;AAEf,MAAI,OAAO,KAAK,IAAhB;AACA,MAAI,CAAC,IAAL,EAAW;;AAEX,MAAI,MAAM,OAAO,UAAjB;;AAEA,MAAI,KAAK,GAAL,CAAJ,EAAe;AACb,SAAK,GAAL,IAAY,KAAK,GAAL,EAAU,MAAV,CAAiB,QAAjB,CAAZ;AACD,GAFD,MAEO;AACL,SAAK,GAAL,IAAY,QAAZ;AACD;AACF","file":"comments-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n\n  var node = this.node;\n  if (!node) return;\n\n  var trailing = node.trailingComments;\n  var leading = node.leadingComments;\n  if (!trailing && !leading) return;\n\n  var prev = this.getSibling(this.key - 1);\n  var next = this.getSibling(this.key + 1);\n\n  if (!prev.node) prev = next;\n  if (!next.node) next = prev;\n\n  prev.addComments(\"trailing\", leading);\n  next.addComments(\"leading\", trailing);\n}\n\nfunction addComment(type, content, line) {\n  this.addComments(type, [{\n    type: line ? \"CommentLine\" : \"CommentBlock\",\n    value: content\n  }]);\n}\n\nfunction addComments(type, comments) {\n  if (!comments) return;\n\n  var node = this.node;\n  if (!node) return;\n\n  var key = type + \"Comments\";\n\n  if (node[key]) {\n    node[key] = node[key].concat(comments);\n  } else {\n    node[key] = comments;\n  }\n}"]}