{"version":3,"sources":["removal-hooks.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,UAAR,GAAqB,IAArB;AACA,IAAI,QAAQ,QAAQ,KAAR,GAAgB,CAAC,UAAU,IAAV,EAAgB,MAAhB,EAAwB;AACnD,MAAI,eAAe,KAAnB;;AAEA,iBAAe,gBAAgB,KAAK,GAAL,KAAa,MAAb,KAAwB,OAAO,OAAP,MAAoB,OAAO,YAAP,EAA5C,CAA/B;;AAEA,iBAAe,gBAAgB,KAAK,GAAL,KAAa,aAAb,IAA8B,OAAO,mBAAP,EAA7D;;AAEA,iBAAe,gBAAgB,KAAK,GAAL,KAAa,MAAb,IAAuB,OAAO,kBAAP,EAAtD;;AAEA,iBAAe,gBAAgB,KAAK,OAAL,KAAiB,cAAjB,IAAmC,OAAO,qBAAP,EAAnC,IAAqE,OAAO,IAAP,CAAY,YAAZ,CAAyB,MAAzB,KAAoC,CAAxI;;AAEA,iBAAe,gBAAgB,KAAK,GAAL,KAAa,YAAb,IAA6B,OAAO,qBAAP,EAA5D;;AAEA,MAAI,YAAJ,EAAkB;AAChB,WAAO,MAAP;AACA,WAAO,IAAP;AACD;AACF,CAjB2B,EAiBzB,UAAU,IAAV,EAAgB,MAAhB,EAAwB;AACzB,MAAI,OAAO,oBAAP,MAAiC,OAAO,IAAP,CAAY,WAAZ,CAAwB,MAAxB,KAAmC,CAAxE,EAA2E;AACzE,WAAO,WAAP,CAAmB,OAAO,IAAP,CAAY,WAAZ,CAAwB,CAAxB,CAAnB;AACA,WAAO,IAAP;AACD;AACF,CAtB2B,EAsBzB,UAAU,IAAV,EAAgB,MAAhB,EAAwB;AACzB,MAAI,OAAO,QAAP,EAAJ,EAAuB;AACrB,QAAI,KAAK,GAAL,KAAa,MAAjB,EAAyB;AACvB,aAAO,WAAP,CAAmB,OAAO,IAAP,CAAY,KAA/B;AACD,KAFD,MAEO;AACL,aAAO,WAAP,CAAmB,OAAO,IAAP,CAAY,IAA/B;AACD;AACD,WAAO,IAAP;AACD;AACF,CA/B2B,EA+BzB,UAAU,IAAV,EAAgB,MAAhB,EAAwB;AACzB,MAAI,OAAO,aAAP,OAA2B,KAAK,GAAL,KAAa,YAAb,IAA6B,KAAK,GAAL,KAAa,WAArE,KAAqF,KAAK,GAAL,KAAa,MAAb,KAAwB,OAAO,MAAP,MAAmB,OAAO,yBAAP,EAA3C,CAAzF,EAAyK;AACvK,SAAK,WAAL,CAAiB;AACf,YAAM,gBADS;AAEf,YAAM;AAFS,KAAjB;AAIA,WAAO,IAAP;AACD;AACF,CAvC2B,CAA5B","file":"removal-hooks-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nvar hooks = exports.hooks = [function (self, parent) {\n  var removeParent = false;\n\n  removeParent = removeParent || self.key === \"test\" && (parent.isWhile() || parent.isSwitchCase());\n\n  removeParent = removeParent || self.key === \"declaration\" && parent.isExportDeclaration();\n\n  removeParent = removeParent || self.key === \"body\" && parent.isLabeledStatement();\n\n  removeParent = removeParent || self.listKey === \"declarations\" && parent.isVariableDeclaration() && parent.node.declarations.length === 1;\n\n  removeParent = removeParent || self.key === \"expression\" && parent.isExpressionStatement();\n\n  if (removeParent) {\n    parent.remove();\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {\n    parent.replaceWith(parent.node.expressions[0]);\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isBinary()) {\n    if (self.key === \"left\") {\n      parent.replaceWith(parent.node.right);\n    } else {\n      parent.replaceWith(parent.node.left);\n    }\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isIfStatement() && (self.key === \"consequent\" || self.key === \"alternate\") || self.key === \"body\" && (parent.isLoop() || parent.isArrowFunctionExpression())) {\n    self.replaceWith({\n      type: \"BlockStatement\",\n      body: []\n    });\n    return true;\n  }\n}];"]}