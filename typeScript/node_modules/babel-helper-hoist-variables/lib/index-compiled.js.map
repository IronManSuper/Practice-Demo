{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (path, emit) {\n  var kind = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"var\";\n\n  path.traverse(visitor, { kind: kind, emit: emit });\n};\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar visitor = {\n  Scope: function Scope(path, state) {\n    if (state.kind === \"let\") path.skip();\n  },\n  Function: function Function(path) {\n    path.skip();\n  },\n  VariableDeclaration: function VariableDeclaration(path, state) {\n    if (state.kind && path.node.kind !== state.kind) return;\n\n    var nodes = [];\n\n    var declarations = path.get(\"declarations\");\n    var firstId = void 0;\n\n    for (var _iterator = declarations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var declar = _ref;\n\n      firstId = declar.node.id;\n\n      if (declar.node.init) {\n        nodes.push(t.expressionStatement(t.assignmentExpression(\"=\", declar.node.id, declar.node.init)));\n      }\n\n      for (var name in declar.getBindingIdentifiers()) {\n        state.emit(t.identifier(name), name);\n      }\n    }\n\n    if (path.parentPath.isFor({ left: path.node })) {\n      path.replaceWith(firstId);\n    } else {\n      path.replaceWithMultiple(nodes);\n    }\n  }\n};\n\nmodule.exports = exports[\"default\"];"]}