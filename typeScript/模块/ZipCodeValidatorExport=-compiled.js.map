{"version":3,"sources":["ZipCodeValidatorExport=.js"],"names":[],"mappings":"AAAA;;;AAGA;AACA;;;;;;;;;;;AAUA,IAAI,eAAe,UAAnB;AACA,IAAI,mBAAoB,YAAY;AAChC,WAAS,gBAAT,GAA4B,CAC3B;AACD,mBAAiB,SAAjB,CAA2B,YAA3B,GAA0C,UAAU,CAAV,EAAa;AACnD,WAAO,EAAE,MAAF,KAAa,CAAb,IAAkB,aAAa,IAAb,CAAkB,CAAlB,CAAzB;AACH,GAFD;AAGA,SAAO,gBAAP;AACH,CAPuB,EAAxB;AAQA,OAAO,OAAP,GAAiB,gBAAjB;AACA","file":"ZipCodeValidatorExport=-compiled.js","sourcesContent":["/**\r\n * Created by Administrator on 2017/2/9.\r\n */\r\n\"use strict\";\r\n/**\r\n *export=和import=require();\r\n * Commonjs和AMD都有一个exports对象的概念，它包含了一个模块的所有导出内容\r\n *\r\n * 它们也支持把exports替换为一个自定义对象，默认导出就好比这样一个功能；\r\n * 然而，它们却并不相互兼容。\r\n * TypeScript模块支持“export=”语法以支持传统的Commonjs和AMD的工作流程模型\r\n * \"export=\"语法定义一个模块的导出对象。它可以是类，接口，命名空间，函数或枚举\r\n * 若要导入一个使用了export =的模块时，必须使用TypeScript提供的特定语法import let = require(\"module\")\r\n */\r\nvar numberRegexp = /^[0-9]+$/;\r\nvar ZipCodeValidator = (function () {\r\n    function ZipCodeValidator() {\r\n    }\r\n    ZipCodeValidator.prototype.isAcceptable = function (s) {\r\n        return s.length === 5 && numberRegexp.test(s);\r\n    };\r\n    return ZipCodeValidator;\r\n}());\r\nmodule.exports = ZipCodeValidator;\r\n//# sourceMappingURL=ZipCodeValidatorExport=.js.map"]}