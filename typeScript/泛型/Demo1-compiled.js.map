{"version":3,"sources":["Demo1.js"],"names":[],"mappings":"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","file":"Demo1-compiled.js","sourcesContent":["/**\r\n * Created by Administrator on 2017/2/7.\r\n */\r\n/**\r\n * 泛型\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\n//创建泛型的两种方式\r\nfunction identity(arg) {\r\n    return arg;\r\n}\r\n//第一种是，传入所有的参数，包含类型参数\r\nvar output = identity(\"myString\");\r\n//第二种方法更普遍，利用了类型推论--即编译器会根据传入的参数自动帮助我们确定T的类型\r\nvar output1 = identity(\"myString\");\r\nvar myIdentity = identity;\r\n//我们也可以使用不同的泛型参数名，只要在数量上和使用方式上能对应就可以了\r\nfunction identity1(arg) {\r\n    return arg;\r\n}\r\nvar myIdentity1 = identity1;\r\n//我们还可以使用带有调用签名的对象字面量来定义泛型函数\r\nfunction identity2(arg) {\r\n    return arg;\r\n}\r\nvar myIdentity2 = identity2;\r\nfunction identity3(arg) {\r\n    return arg;\r\n}\r\nvar myIdentity3 = identity;\r\nfunction identity4(arg) {\r\n    return arg;\r\n}\r\nvar myIdentity4 = identity4;\r\n//泛型类\r\n//泛型类看上去与泛型接口差不多。泛型类使用(<>)括起泛型类型，跟在类名后面。\r\nvar GenerricNumber = (function () {\r\n    function GenerricNumber() {\r\n    }\r\n    return GenerricNumber;\r\n}());\r\nvar myGenericNumer = new GenerricNumber();\r\nmyGenericNumer.zeroValue = \"\";\r\nmyGenericNumer.add = function (x, y) {\r\n    return x + y;\r\n};\r\n//其他类型去限制泛型\r\nvar stringNumberic = new GenerricNumber();\r\nstringNumberic.zeroValue = \"德玛西亚\";\r\nstringNumberic.add = function (x, y) {\r\n    return x + y;\r\n};\r\nalert(stringNumberic.add(stringNumberic.zeroValue, \"test\"));\r\nfunction loggingIdentity(arg) {\r\n    console.log(arg.length);\r\n    return arg;\r\n}\r\n//loggingIdentity(3);\r\nloggingIdentity({ length: 10, value: 3 });\r\n//在泛型约束中使用类型参数\r\n//你可以声明一个类型参数，且它被另一个类型参数所约束。\r\nfunction copyFields(target, source) {\r\n    for (var id in source) {\r\n        target[id] = source[id];\r\n    }\r\n    return target;\r\n}\r\nvar x = { a: 1, b: 2, c: 3, d: 4 };\r\nvar result1 = copyFields(x, { b: 10, d: 20 });\r\nconsole.log(result1);\r\n//let result2=copyFields(x,{Q:90});//error: property 'Q' isn't declared in 'x'.\r\n//console.log(result2);\r\n//在泛型里使用类类型\r\n//在TypeScript使用泛型创建工厂函数时，需要引用构造函数的类类型\r\nfunction create(c) {\r\n    return new c();\r\n}\r\nvar Beekeeper = (function () {\r\n    function Beekeeper() {\r\n    }\r\n    return Beekeeper;\r\n}());\r\nvar Zookeeper = (function () {\r\n    function Zookeeper() {\r\n    }\r\n    return Zookeeper;\r\n}());\r\nvar Animal = (function () {\r\n    function Animal() {\r\n    }\r\n    return Animal;\r\n}());\r\nvar Bee = (function (_super) {\r\n    __extends(Bee, _super);\r\n    function Bee() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    return Bee;\r\n}(Animal));\r\nvar Lion = (function (_super) {\r\n    __extends(Lion, _super);\r\n    function Lion() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    return Lion;\r\n}(Animal));\r\nfunction findKeeper(a) {\r\n    return a.prototype.keeper;\r\n}\r\nvar result3 = findKeeper(Lion).nametag;\r\nconsole.log(result3);\r\n//# sourceMappingURL=Demo1.js.map"]}